// Copyright(c) 2022-current. Araali Networks Inc.
//
// This file is subject to the terms and conditions defined in
// file 'LICENSE.txt', which is part of this source code package.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.0-devel
// 	protoc        v3.7.1
// source: araali_api_service.proto

package araali_api_service

import (
	context "context"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

//*
// Type of a link Alert or PolicyInfo
type LinkState int32

const (
	LinkState_BASELINE_ALERT LinkState = 0 // Alert
	LinkState_DEFINED_POLICY LinkState = 1 // Currently active policy
	LinkState_SNOOZED_POLICY LinkState = 2 // Policy that was discovered but removed/snoozed
	LinkState_DENIED_POLICY  LinkState = 3 // Deny policy
)

// Enum value maps for LinkState.
var (
	LinkState_name = map[int32]string{
		0: "BASELINE_ALERT",
		1: "DEFINED_POLICY",
		2: "SNOOZED_POLICY",
		3: "DENIED_POLICY",
	}
	LinkState_value = map[string]int32{
		"BASELINE_ALERT": 0,
		"DEFINED_POLICY": 1,
		"SNOOZED_POLICY": 2,
		"DENIED_POLICY":  3,
	}
)

func (x LinkState) Enum() *LinkState {
	p := new(LinkState)
	*p = x
	return p
}

func (x LinkState) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (LinkState) Descriptor() protoreflect.EnumDescriptor {
	return file_araali_api_service_proto_enumTypes[0].Descriptor()
}

func (LinkState) Type() protoreflect.EnumType {
	return &file_araali_api_service_proto_enumTypes[0]
}

func (x LinkState) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use LinkState.Descriptor instead.
func (LinkState) EnumDescriptor() ([]byte, []int) {
	return file_araali_api_service_proto_rawDescGZIP(), []int{0}
}

type FortifyYamlType int32

const (
	FortifyYamlType_UNKNOWN                     FortifyYamlType = 0 // Unknown
	FortifyYamlType_HELM_VALUES_FILE            FortifyYamlType = 1 // Generate helm values file for helm chart based approach
	FortifyYamlType_HELM_CONTROLLER_VALUES_FILE FortifyYamlType = 2 // Generate controller helm values file for helm chart
)

// Enum value maps for FortifyYamlType.
var (
	FortifyYamlType_name = map[int32]string{
		0: "UNKNOWN",
		1: "HELM_VALUES_FILE",
		2: "HELM_CONTROLLER_VALUES_FILE",
	}
	FortifyYamlType_value = map[string]int32{
		"UNKNOWN":                     0,
		"HELM_VALUES_FILE":            1,
		"HELM_CONTROLLER_VALUES_FILE": 2,
	}
)

func (x FortifyYamlType) Enum() *FortifyYamlType {
	p := new(FortifyYamlType)
	*p = x
	return p
}

func (x FortifyYamlType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (FortifyYamlType) Descriptor() protoreflect.EnumDescriptor {
	return file_araali_api_service_proto_enumTypes[1].Descriptor()
}

func (FortifyYamlType) Type() protoreflect.EnumType {
	return &file_araali_api_service_proto_enumTypes[1]
}

func (x FortifyYamlType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use FortifyYamlType.Descriptor instead.
func (FortifyYamlType) EnumDescriptor() ([]byte, []int) {
	return file_araali_api_service_proto_rawDescGZIP(), []int{1}
}

//* Enum for specifying the role of a user
type AraaliUser_Role int32

const (
	AraaliUser_ADMIN AraaliUser_Role = 0 // Enables user to create, modify other users
	AraaliUser_USER  AraaliUser_Role = 1 // Set if the user is not an administrator
)

// Enum value maps for AraaliUser_Role.
var (
	AraaliUser_Role_name = map[int32]string{
		0: "ADMIN",
		1: "USER",
	}
	AraaliUser_Role_value = map[string]int32{
		"ADMIN": 0,
		"USER":  1,
	}
)

func (x AraaliUser_Role) Enum() *AraaliUser_Role {
	p := new(AraaliUser_Role)
	*p = x
	return p
}

func (x AraaliUser_Role) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AraaliUser_Role) Descriptor() protoreflect.EnumDescriptor {
	return file_araali_api_service_proto_enumTypes[2].Descriptor()
}

func (AraaliUser_Role) Type() protoreflect.EnumType {
	return &file_araali_api_service_proto_enumTypes[2]
}

func (x AraaliUser_Role) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use AraaliUser_Role.Descriptor instead.
func (AraaliUser_Role) EnumDescriptor() ([]byte, []int) {
	return file_araali_api_service_proto_rawDescGZIP(), []int{1, 0}
}

//* Return status codes for the Araali APIs
type AraaliAPIResponse_ReturnCode int32

const (
	AraaliAPIResponse_SUCCESS AraaliAPIResponse_ReturnCode = 0 // API call succeeded
	AraaliAPIResponse_FAILURE AraaliAPIResponse_ReturnCode = 1 // API call failed
	AraaliAPIResponse_UNKNOWN AraaliAPIResponse_ReturnCode = 2 // Status unknown (Should never happen)
)

// Enum value maps for AraaliAPIResponse_ReturnCode.
var (
	AraaliAPIResponse_ReturnCode_name = map[int32]string{
		0: "SUCCESS",
		1: "FAILURE",
		2: "UNKNOWN",
	}
	AraaliAPIResponse_ReturnCode_value = map[string]int32{
		"SUCCESS": 0,
		"FAILURE": 1,
		"UNKNOWN": 2,
	}
)

func (x AraaliAPIResponse_ReturnCode) Enum() *AraaliAPIResponse_ReturnCode {
	p := new(AraaliAPIResponse_ReturnCode)
	*p = x
	return p
}

func (x AraaliAPIResponse_ReturnCode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AraaliAPIResponse_ReturnCode) Descriptor() protoreflect.EnumDescriptor {
	return file_araali_api_service_proto_enumTypes[3].Descriptor()
}

func (AraaliAPIResponse_ReturnCode) Type() protoreflect.EnumType {
	return &file_araali_api_service_proto_enumTypes[3]
}

func (x AraaliAPIResponse_ReturnCode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use AraaliAPIResponse_ReturnCode.Descriptor instead.
func (AraaliAPIResponse_ReturnCode) EnumDescriptor() ([]byte, []int) {
	return file_araali_api_service_proto_rawDescGZIP(), []int{7, 0}
}

//* State of the asset
type Asset_AssetState int32

const (
	Asset_DELETED  Asset_AssetState = 0 // Asset has been deleted
	Asset_ACTIVE   Asset_AssetState = 1 // Asset is active
	Asset_INACTIVE Asset_AssetState = 2 // Asset is inactive
)

// Enum value maps for Asset_AssetState.
var (
	Asset_AssetState_name = map[int32]string{
		0: "DELETED",
		1: "ACTIVE",
		2: "INACTIVE",
	}
	Asset_AssetState_value = map[string]int32{
		"DELETED":  0,
		"ACTIVE":   1,
		"INACTIVE": 2,
	}
)

func (x Asset_AssetState) Enum() *Asset_AssetState {
	p := new(Asset_AssetState)
	*p = x
	return p
}

func (x Asset_AssetState) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Asset_AssetState) Descriptor() protoreflect.EnumDescriptor {
	return file_araali_api_service_proto_enumTypes[4].Descriptor()
}

func (Asset_AssetState) Type() protoreflect.EnumType {
	return &file_araali_api_service_proto_enumTypes[4]
}

func (x Asset_AssetState) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Asset_AssetState.Descriptor instead.
func (Asset_AssetState) EnumDescriptor() ([]byte, []int) {
	return file_araali_api_service_proto_rawDescGZIP(), []int{13, 0}
}

//* Type of the asset
type Asset_AssetType int32

const (
	Asset_UNKNOWN_ASSET   Asset_AssetType = 0 // Unknown asset type
	Asset_VIRTUAL_MACHINE Asset_AssetType = 1 // Virtual Machine type
	Asset_CONTAINER       Asset_AssetType = 2 // Container type
)

// Enum value maps for Asset_AssetType.
var (
	Asset_AssetType_name = map[int32]string{
		0: "UNKNOWN_ASSET",
		1: "VIRTUAL_MACHINE",
		2: "CONTAINER",
	}
	Asset_AssetType_value = map[string]int32{
		"UNKNOWN_ASSET":   0,
		"VIRTUAL_MACHINE": 1,
		"CONTAINER":       2,
	}
)

func (x Asset_AssetType) Enum() *Asset_AssetType {
	p := new(Asset_AssetType)
	*p = x
	return p
}

func (x Asset_AssetType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Asset_AssetType) Descriptor() protoreflect.EnumDescriptor {
	return file_araali_api_service_proto_enumTypes[5].Descriptor()
}

func (Asset_AssetType) Type() protoreflect.EnumType {
	return &file_araali_api_service_proto_enumTypes[5]
}

func (x Asset_AssetType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Asset_AssetType.Descriptor instead.
func (Asset_AssetType) EnumDescriptor() ([]byte, []int) {
	return file_araali_api_service_proto_rawDescGZIP(), []int{13, 1}
}

//* Mode the asset is in
// 		TAP    - Tap's into telemetry to discover policies (no enforcement).
//		INLINE - Firewall embedded inline to enforce policies if needed (enforcement).
type Asset_AssetMode int32

const (
	Asset_TAP                         Asset_AssetMode = 0 // No enforcement/visibility mode
	Asset_INLINE                      Asset_AssetMode = 1 // Inline enforcement mode
	Asset_TRANSITIONING_TAP_TO_INLINE Asset_AssetMode = 2 // Transitioning from TAP to INLINE
	Asset_TRANSITIONING_INLINE_TO_TAP Asset_AssetMode = 3 // Transitioning from INLINE to TAP
)

// Enum value maps for Asset_AssetMode.
var (
	Asset_AssetMode_name = map[int32]string{
		0: "TAP",
		1: "INLINE",
		2: "TRANSITIONING_TAP_TO_INLINE",
		3: "TRANSITIONING_INLINE_TO_TAP",
	}
	Asset_AssetMode_value = map[string]int32{
		"TAP":                         0,
		"INLINE":                      1,
		"TRANSITIONING_TAP_TO_INLINE": 2,
		"TRANSITIONING_INLINE_TO_TAP": 3,
	}
)

func (x Asset_AssetMode) Enum() *Asset_AssetMode {
	p := new(Asset_AssetMode)
	*p = x
	return p
}

func (x Asset_AssetMode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Asset_AssetMode) Descriptor() protoreflect.EnumDescriptor {
	return file_araali_api_service_proto_enumTypes[6].Descriptor()
}

func (Asset_AssetMode) Type() protoreflect.EnumType {
	return &file_araali_api_service_proto_enumTypes[6]
}

func (x Asset_AssetMode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Asset_AssetMode.Descriptor instead.
func (Asset_AssetMode) EnumDescriptor() ([]byte, []int) {
	return file_araali_api_service_proto_rawDescGZIP(), []int{13, 2}
}

type Vulnerability_Severity int32

const (
	Vulnerability_NONE     Vulnerability_Severity = 0 // No severity
	Vulnerability_LOW      Vulnerability_Severity = 1 // Low severity
	Vulnerability_MEDIUM   Vulnerability_Severity = 2 // Medium severity
	Vulnerability_HIGH     Vulnerability_Severity = 3 // High severity
	Vulnerability_CRITICAL Vulnerability_Severity = 4 // Critical severity
)

// Enum value maps for Vulnerability_Severity.
var (
	Vulnerability_Severity_name = map[int32]string{
		0: "NONE",
		1: "LOW",
		2: "MEDIUM",
		3: "HIGH",
		4: "CRITICAL",
	}
	Vulnerability_Severity_value = map[string]int32{
		"NONE":     0,
		"LOW":      1,
		"MEDIUM":   2,
		"HIGH":     3,
		"CRITICAL": 4,
	}
)

func (x Vulnerability_Severity) Enum() *Vulnerability_Severity {
	p := new(Vulnerability_Severity)
	*p = x
	return p
}

func (x Vulnerability_Severity) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Vulnerability_Severity) Descriptor() protoreflect.EnumDescriptor {
	return file_araali_api_service_proto_enumTypes[7].Descriptor()
}

func (Vulnerability_Severity) Type() protoreflect.EnumType {
	return &file_araali_api_service_proto_enumTypes[7]
}

func (x Vulnerability_Severity) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Vulnerability_Severity.Descriptor instead.
func (Vulnerability_Severity) EnumDescriptor() ([]byte, []int) {
	return file_araali_api_service_proto_rawDescGZIP(), []int{14, 0}
}

type NonAraaliEndpoint_EndpointGroup int32

const (
	NonAraaliEndpoint_UNKNOWN_GROUP NonAraaliEndpoint_EndpointGroup = 0
	NonAraaliEndpoint_WORLD         NonAraaliEndpoint_EndpointGroup = 1
	NonAraaliEndpoint_HOME          NonAraaliEndpoint_EndpointGroup = 2
)

// Enum value maps for NonAraaliEndpoint_EndpointGroup.
var (
	NonAraaliEndpoint_EndpointGroup_name = map[int32]string{
		0: "UNKNOWN_GROUP",
		1: "WORLD",
		2: "HOME",
	}
	NonAraaliEndpoint_EndpointGroup_value = map[string]int32{
		"UNKNOWN_GROUP": 0,
		"WORLD":         1,
		"HOME":          2,
	}
)

func (x NonAraaliEndpoint_EndpointGroup) Enum() *NonAraaliEndpoint_EndpointGroup {
	p := new(NonAraaliEndpoint_EndpointGroup)
	*p = x
	return p
}

func (x NonAraaliEndpoint_EndpointGroup) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (NonAraaliEndpoint_EndpointGroup) Descriptor() protoreflect.EnumDescriptor {
	return file_araali_api_service_proto_enumTypes[8].Descriptor()
}

func (NonAraaliEndpoint_EndpointGroup) Type() protoreflect.EnumType {
	return &file_araali_api_service_proto_enumTypes[8]
}

func (x NonAraaliEndpoint_EndpointGroup) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use NonAraaliEndpoint_EndpointGroup.Descriptor instead.
func (NonAraaliEndpoint_EndpointGroup) EnumDescriptor() ([]byte, []int) {
	return file_araali_api_service_proto_rawDescGZIP(), []int{22, 0}
}

type AlertInfo_Status int32

const (
	AlertInfo_UNKNOWN_STATUS AlertInfo_Status = 0
	AlertInfo_OPEN           AlertInfo_Status = 1
	AlertInfo_CLOSED         AlertInfo_Status = 2
)

// Enum value maps for AlertInfo_Status.
var (
	AlertInfo_Status_name = map[int32]string{
		0: "UNKNOWN_STATUS",
		1: "OPEN",
		2: "CLOSED",
	}
	AlertInfo_Status_value = map[string]int32{
		"UNKNOWN_STATUS": 0,
		"OPEN":           1,
		"CLOSED":         2,
	}
)

func (x AlertInfo_Status) Enum() *AlertInfo_Status {
	p := new(AlertInfo_Status)
	*p = x
	return p
}

func (x AlertInfo_Status) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AlertInfo_Status) Descriptor() protoreflect.EnumDescriptor {
	return file_araali_api_service_proto_enumTypes[9].Descriptor()
}

func (AlertInfo_Status) Type() protoreflect.EnumType {
	return &file_araali_api_service_proto_enumTypes[9]
}

func (x AlertInfo_Status) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use AlertInfo_Status.Descriptor instead.
func (AlertInfo_Status) EnumDescriptor() ([]byte, []int) {
	return file_araali_api_service_proto_rawDescGZIP(), []int{24, 0}
}

//* Direction of the link araali-araali, araali-ingress etc
type Link_LinkDirection int32

const (
	Link_UNKNOWN_DIRECTION  Link_LinkDirection = 0 // Unknown
	Link_NON_ARAALI_INGRESS Link_LinkDirection = 1 // Ingress from an unprotected non-araali endpoint
	Link_ARAALI_INGRESS     Link_LinkDirection = 2 // Ingress from an araali protected endpoint
	Link_NON_ARAALI_EGRESS  Link_LinkDirection = 3 // Egress to an unprotected non-araali endpoint
	Link_ARAALI_EGRESS      Link_LinkDirection = 4 // Egress to an araali protected endpoint
	Link_INTERNAL           Link_LinkDirection = 5 // Link between two araali endpoints within an app
)

// Enum value maps for Link_LinkDirection.
var (
	Link_LinkDirection_name = map[int32]string{
		0: "UNKNOWN_DIRECTION",
		1: "NON_ARAALI_INGRESS",
		2: "ARAALI_INGRESS",
		3: "NON_ARAALI_EGRESS",
		4: "ARAALI_EGRESS",
		5: "INTERNAL",
	}
	Link_LinkDirection_value = map[string]int32{
		"UNKNOWN_DIRECTION":  0,
		"NON_ARAALI_INGRESS": 1,
		"ARAALI_INGRESS":     2,
		"NON_ARAALI_EGRESS":  3,
		"ARAALI_EGRESS":      4,
		"INTERNAL":           5,
	}
)

func (x Link_LinkDirection) Enum() *Link_LinkDirection {
	p := new(Link_LinkDirection)
	*p = x
	return p
}

func (x Link_LinkDirection) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Link_LinkDirection) Descriptor() protoreflect.EnumDescriptor {
	return file_araali_api_service_proto_enumTypes[10].Descriptor()
}

func (Link_LinkDirection) Type() protoreflect.EnumType {
	return &file_araali_api_service_proto_enumTypes[10]
}

func (x Link_LinkDirection) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Link_LinkDirection.Descriptor instead.
func (Link_LinkDirection) EnumDescriptor() ([]byte, []int) {
	return file_araali_api_service_proto_rawDescGZIP(), []int{26, 0}
}

//* Type of lens
type Lens_LensType int32

const (
	Lens_UNKNOWN_LENS Lens_LensType = 0 // Unspecified
	Lens_ZONE_APP     Lens_LensType = 1 // Zone/App level
	Lens_SERVICE      Lens_LensType = 2 // Service level
	Lens_ZONE         Lens_LensType = 3 // Zone level
	Lens_PROCESS      Lens_LensType = 4 // Process level
	Lens_CONTAINER    Lens_LensType = 5 // Container level
	Lens_TENANT       Lens_LensType = 6 // Tenant level
)

// Enum value maps for Lens_LensType.
var (
	Lens_LensType_name = map[int32]string{
		0: "UNKNOWN_LENS",
		1: "ZONE_APP",
		2: "SERVICE",
		3: "ZONE",
		4: "PROCESS",
		5: "CONTAINER",
		6: "TENANT",
	}
	Lens_LensType_value = map[string]int32{
		"UNKNOWN_LENS": 0,
		"ZONE_APP":     1,
		"SERVICE":      2,
		"ZONE":         3,
		"PROCESS":      4,
		"CONTAINER":    5,
		"TENANT":       6,
	}
)

func (x Lens_LensType) Enum() *Lens_LensType {
	p := new(Lens_LensType)
	*p = x
	return p
}

func (x Lens_LensType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Lens_LensType) Descriptor() protoreflect.EnumDescriptor {
	return file_araali_api_service_proto_enumTypes[11].Descriptor()
}

func (Lens_LensType) Type() protoreflect.EnumType {
	return &file_araali_api_service_proto_enumTypes[11]
}

func (x Lens_LensType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Lens_LensType.Descriptor instead.
func (Lens_LensType) EnumDescriptor() ([]byte, []int) {
	return file_araali_api_service_proto_rawDescGZIP(), []int{30, 0}
}

//*
// Tenant object identifying the tenant in API calls.
type Tenant struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//* Id of the tenant
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	//* Admin e-mail of the tenant.
	//  Also adds an ADMIN role user in this tenant.
	AdminEmail string `protobuf:"bytes,2,opt,name=admin_email,json=adminEmail,proto3" json:"admin_email,omitempty"`
}

func (x *Tenant) Reset() {
	*x = Tenant{}
	if protoimpl.UnsafeEnabled {
		mi := &file_araali_api_service_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Tenant) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Tenant) ProtoMessage() {}

func (x *Tenant) ProtoReflect() protoreflect.Message {
	mi := &file_araali_api_service_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Tenant.ProtoReflect.Descriptor instead.
func (*Tenant) Descriptor() ([]byte, []int) {
	return file_araali_api_service_proto_rawDescGZIP(), []int{0}
}

func (x *Tenant) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Tenant) GetAdminEmail() string {
	if x != nil {
		return x.AdminEmail
	}
	return ""
}

//*
// User object identifying the user in API calls.
type AraaliUser struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//* E-mail of the registering user
	Email string `protobuf:"bytes,1,opt,name=email,proto3" json:"email,omitempty"`
	//* Role of the registering user
	Role AraaliUser_Role `protobuf:"varint,2,opt,name=role,proto3,enum=araali_api_service.AraaliUser_Role" json:"role,omitempty"`
	//* Enables role to have access to zone-apps
	// 		TRUE  - Enable modify access to zone-apps
	//		FALSE - Enable read-only access to zone-apps.
	IsSiteAdmin bool `protobuf:"varint,3,opt,name=is_site_admin,json=isSiteAdmin,proto3" json:"is_site_admin,omitempty"`
}

func (x *AraaliUser) Reset() {
	*x = AraaliUser{}
	if protoimpl.UnsafeEnabled {
		mi := &file_araali_api_service_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AraaliUser) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AraaliUser) ProtoMessage() {}

func (x *AraaliUser) ProtoReflect() protoreflect.Message {
	mi := &file_araali_api_service_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AraaliUser.ProtoReflect.Descriptor instead.
func (*AraaliUser) Descriptor() ([]byte, []int) {
	return file_araali_api_service_proto_rawDescGZIP(), []int{1}
}

func (x *AraaliUser) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *AraaliUser) GetRole() AraaliUser_Role {
	if x != nil {
		return x.Role
	}
	return AraaliUser_ADMIN
}

func (x *AraaliUser) GetIsSiteAdmin() bool {
	if x != nil {
		return x.IsSiteAdmin
	}
	return false
}

type CreateTenantRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//* Information required to create the tenant
	Tenant *Tenant `protobuf:"bytes,1,opt,name=tenant,proto3" json:"tenant,omitempty"`
}

func (x *CreateTenantRequest) Reset() {
	*x = CreateTenantRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_araali_api_service_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateTenantRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateTenantRequest) ProtoMessage() {}

func (x *CreateTenantRequest) ProtoReflect() protoreflect.Message {
	mi := &file_araali_api_service_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateTenantRequest.ProtoReflect.Descriptor instead.
func (*CreateTenantRequest) Descriptor() ([]byte, []int) {
	return file_araali_api_service_proto_rawDescGZIP(), []int{2}
}

func (x *CreateTenantRequest) GetTenant() *Tenant {
	if x != nil {
		return x.Tenant
	}
	return nil
}

type CreateTenantResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//* Success/Failure of the API call
	Response *AraaliAPIResponse `protobuf:"bytes,1,opt,name=response,proto3" json:"response,omitempty"`
	//* Handle for the newly created tenant
	Tenant *Tenant `protobuf:"bytes,2,opt,name=tenant,proto3" json:"tenant,omitempty"`
}

func (x *CreateTenantResponse) Reset() {
	*x = CreateTenantResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_araali_api_service_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateTenantResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateTenantResponse) ProtoMessage() {}

func (x *CreateTenantResponse) ProtoReflect() protoreflect.Message {
	mi := &file_araali_api_service_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateTenantResponse.ProtoReflect.Descriptor instead.
func (*CreateTenantResponse) Descriptor() ([]byte, []int) {
	return file_araali_api_service_proto_rawDescGZIP(), []int{3}
}

func (x *CreateTenantResponse) GetResponse() *AraaliAPIResponse {
	if x != nil {
		return x.Response
	}
	return nil
}

func (x *CreateTenantResponse) GetTenant() *Tenant {
	if x != nil {
		return x.Tenant
	}
	return nil
}

type DeleteTenantRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//* Tenant being deleted
	Tenant *Tenant `protobuf:"bytes,1,opt,name=tenant,proto3" json:"tenant,omitempty"`
}

func (x *DeleteTenantRequest) Reset() {
	*x = DeleteTenantRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_araali_api_service_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteTenantRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteTenantRequest) ProtoMessage() {}

func (x *DeleteTenantRequest) ProtoReflect() protoreflect.Message {
	mi := &file_araali_api_service_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteTenantRequest.ProtoReflect.Descriptor instead.
func (*DeleteTenantRequest) Descriptor() ([]byte, []int) {
	return file_araali_api_service_proto_rawDescGZIP(), []int{4}
}

func (x *DeleteTenantRequest) GetTenant() *Tenant {
	if x != nil {
		return x.Tenant
	}
	return nil
}

type AddUserRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//* Tenant of the user being added
	Tenant *Tenant `protobuf:"bytes,1,opt,name=tenant,proto3" json:"tenant,omitempty"`
	//* Information required to create the tenant
	User *AraaliUser `protobuf:"bytes,2,opt,name=user,proto3" json:"user,omitempty"`
}

func (x *AddUserRequest) Reset() {
	*x = AddUserRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_araali_api_service_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddUserRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddUserRequest) ProtoMessage() {}

func (x *AddUserRequest) ProtoReflect() protoreflect.Message {
	mi := &file_araali_api_service_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddUserRequest.ProtoReflect.Descriptor instead.
func (*AddUserRequest) Descriptor() ([]byte, []int) {
	return file_araali_api_service_proto_rawDescGZIP(), []int{5}
}

func (x *AddUserRequest) GetTenant() *Tenant {
	if x != nil {
		return x.Tenant
	}
	return nil
}

func (x *AddUserRequest) GetUser() *AraaliUser {
	if x != nil {
		return x.User
	}
	return nil
}

type DeleteUserRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//* Tenant of the user being deleted
	Tenant *Tenant `protobuf:"bytes,1,opt,name=tenant,proto3" json:"tenant,omitempty"`
	//* Handle of the user being deleted
	User *AraaliUser `protobuf:"bytes,2,opt,name=user,proto3" json:"user,omitempty"`
}

func (x *DeleteUserRequest) Reset() {
	*x = DeleteUserRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_araali_api_service_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteUserRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteUserRequest) ProtoMessage() {}

func (x *DeleteUserRequest) ProtoReflect() protoreflect.Message {
	mi := &file_araali_api_service_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteUserRequest.ProtoReflect.Descriptor instead.
func (*DeleteUserRequest) Descriptor() ([]byte, []int) {
	return file_araali_api_service_proto_rawDescGZIP(), []int{6}
}

func (x *DeleteUserRequest) GetTenant() *Tenant {
	if x != nil {
		return x.Tenant
	}
	return nil
}

func (x *DeleteUserRequest) GetUser() *AraaliUser {
	if x != nil {
		return x.User
	}
	return nil
}

//*
// Generic API response object.
type AraaliAPIResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//* Success/Failure of API call
	Code AraaliAPIResponse_ReturnCode `protobuf:"varint,1,opt,name=code,proto3,enum=araali_api_service.AraaliAPIResponse_ReturnCode" json:"code,omitempty"`
	//* Custom message returned by the service if any
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *AraaliAPIResponse) Reset() {
	*x = AraaliAPIResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_araali_api_service_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AraaliAPIResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AraaliAPIResponse) ProtoMessage() {}

func (x *AraaliAPIResponse) ProtoReflect() protoreflect.Message {
	mi := &file_araali_api_service_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AraaliAPIResponse.ProtoReflect.Descriptor instead.
func (*AraaliAPIResponse) Descriptor() ([]byte, []int) {
	return file_araali_api_service_proto_rawDescGZIP(), []int{7}
}

func (x *AraaliAPIResponse) GetCode() AraaliAPIResponse_ReturnCode {
	if x != nil {
		return x.Code
	}
	return AraaliAPIResponse_SUCCESS
}

func (x *AraaliAPIResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

//*
// Object for specifying start and end time in varous API calls.
type TimeSlice struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//* Start time to fetch from. Specify 0 to indicate beginning of time
	StartTime *timestamp.Timestamp `protobuf:"bytes,1,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`
	//* End time to fetch up to
	EndTime *timestamp.Timestamp `protobuf:"bytes,2,opt,name=end_time,json=endTime,proto3" json:"end_time,omitempty"`
}

func (x *TimeSlice) Reset() {
	*x = TimeSlice{}
	if protoimpl.UnsafeEnabled {
		mi := &file_araali_api_service_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TimeSlice) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TimeSlice) ProtoMessage() {}

func (x *TimeSlice) ProtoReflect() protoreflect.Message {
	mi := &file_araali_api_service_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TimeSlice.ProtoReflect.Descriptor instead.
func (*TimeSlice) Descriptor() ([]byte, []int) {
	return file_araali_api_service_proto_rawDescGZIP(), []int{8}
}

func (x *TimeSlice) GetStartTime() *timestamp.Timestamp {
	if x != nil {
		return x.StartTime
	}
	return nil
}

func (x *TimeSlice) GetEndTime() *timestamp.Timestamp {
	if x != nil {
		return x.EndTime
	}
	return nil
}

//*
// Flags to filter assets in the ListAssets API.
type AssetFilter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//* Return active virtual machines
	ListActiveVm bool `protobuf:"varint,1,opt,name=list_active_vm,json=listActiveVm,proto3" json:"list_active_vm,omitempty"`
	//* Return inactive virtual machines
	ListInactiveVm bool `protobuf:"varint,2,opt,name=list_inactive_vm,json=listInactiveVm,proto3" json:"list_inactive_vm,omitempty"`
	//* Return active containers
	ListActiveContainer bool `protobuf:"varint,3,opt,name=list_active_container,json=listActiveContainer,proto3" json:"list_active_container,omitempty"`
	//* Return inactive containers
	ListInactiveContainer bool `protobuf:"varint,4,opt,name=list_inactive_container,json=listInactiveContainer,proto3" json:"list_inactive_container,omitempty"`
}

func (x *AssetFilter) Reset() {
	*x = AssetFilter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_araali_api_service_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AssetFilter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AssetFilter) ProtoMessage() {}

func (x *AssetFilter) ProtoReflect() protoreflect.Message {
	mi := &file_araali_api_service_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AssetFilter.ProtoReflect.Descriptor instead.
func (*AssetFilter) Descriptor() ([]byte, []int) {
	return file_araali_api_service_proto_rawDescGZIP(), []int{9}
}

func (x *AssetFilter) GetListActiveVm() bool {
	if x != nil {
		return x.ListActiveVm
	}
	return false
}

func (x *AssetFilter) GetListInactiveVm() bool {
	if x != nil {
		return x.ListInactiveVm
	}
	return false
}

func (x *AssetFilter) GetListActiveContainer() bool {
	if x != nil {
		return x.ListActiveContainer
	}
	return false
}

func (x *AssetFilter) GetListInactiveContainer() bool {
	if x != nil {
		return x.ListInactiveContainer
	}
	return false
}

//*
// Request for the list of assets (virtual machines/containers) in a tenant.
type ListAssetsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//* Handle of the tenant
	Tenant *Tenant `protobuf:"bytes,1,opt,name=tenant,proto3" json:"tenant,omitempty"`
	//* Zone from which to return assets
	Zone string `protobuf:"bytes,2,opt,name=zone,proto3" json:"zone,omitempty"`
	//* App/Namespace from which to return assets
	App string `protobuf:"bytes,3,opt,name=app,proto3" json:"app,omitempty"`
	//* Start/End time range from which to return assets
	Time *TimeSlice `protobuf:"bytes,4,opt,name=time,proto3" json:"time,omitempty"`
	//* Filter assets based on type and active/inactive
	Filter *AssetFilter `protobuf:"bytes,5,opt,name=filter,proto3" json:"filter,omitempty"`
}

func (x *ListAssetsRequest) Reset() {
	*x = ListAssetsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_araali_api_service_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListAssetsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListAssetsRequest) ProtoMessage() {}

func (x *ListAssetsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_araali_api_service_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListAssetsRequest.ProtoReflect.Descriptor instead.
func (*ListAssetsRequest) Descriptor() ([]byte, []int) {
	return file_araali_api_service_proto_rawDescGZIP(), []int{10}
}

func (x *ListAssetsRequest) GetTenant() *Tenant {
	if x != nil {
		return x.Tenant
	}
	return nil
}

func (x *ListAssetsRequest) GetZone() string {
	if x != nil {
		return x.Zone
	}
	return ""
}

func (x *ListAssetsRequest) GetApp() string {
	if x != nil {
		return x.App
	}
	return ""
}

func (x *ListAssetsRequest) GetTime() *TimeSlice {
	if x != nil {
		return x.Time
	}
	return nil
}

func (x *ListAssetsRequest) GetFilter() *AssetFilter {
	if x != nil {
		return x.Filter
	}
	return nil
}

type ListAssetsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//* ListAsset API call response
	Response *AraaliAPIResponse `protobuf:"bytes,1,opt,name=response,proto3" json:"response,omitempty"`
	//* List of assets
	Assets []*Asset `protobuf:"bytes,2,rep,name=assets,proto3" json:"assets,omitempty"`
}

func (x *ListAssetsResponse) Reset() {
	*x = ListAssetsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_araali_api_service_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListAssetsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListAssetsResponse) ProtoMessage() {}

func (x *ListAssetsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_araali_api_service_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListAssetsResponse.ProtoReflect.Descriptor instead.
func (*ListAssetsResponse) Descriptor() ([]byte, []int) {
	return file_araali_api_service_proto_rawDescGZIP(), []int{11}
}

func (x *ListAssetsResponse) GetResponse() *AraaliAPIResponse {
	if x != nil {
		return x.Response
	}
	return nil
}

func (x *ListAssetsResponse) GetAssets() []*Asset {
	if x != nil {
		return x.Assets
	}
	return nil
}

//*
// List of capabilities
type Capabilities struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Capabilities []string `protobuf:"bytes,1,rep,name=capabilities,proto3" json:"capabilities,omitempty"`
}

func (x *Capabilities) Reset() {
	*x = Capabilities{}
	if protoimpl.UnsafeEnabled {
		mi := &file_araali_api_service_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Capabilities) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Capabilities) ProtoMessage() {}

func (x *Capabilities) ProtoReflect() protoreflect.Message {
	mi := &file_araali_api_service_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Capabilities.ProtoReflect.Descriptor instead.
func (*Capabilities) Descriptor() ([]byte, []int) {
	return file_araali_api_service_proto_rawDescGZIP(), []int{12}
}

func (x *Capabilities) GetCapabilities() []string {
	if x != nil {
		return x.Capabilities
	}
	return nil
}

//*
// Representation of container/virtual machine information.
type Asset struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//* Host name of asset
	HostName string `protobuf:"bytes,1,opt,name=host_name,json=hostName,proto3" json:"host_name,omitempty"`
	//* IP address assigned to the asset
	IpAddress string `protobuf:"bytes,2,opt,name=ip_address,json=ipAddress,proto3" json:"ip_address,omitempty"`
	//* UUID if virtual machine or container-id if container
	Uuid string `protobuf:"bytes,3,opt,name=uuid,proto3" json:"uuid,omitempty"`
	//* Container image or ami-id for virtual machines
	Image string `protobuf:"bytes,4,opt,name=image,proto3" json:"image,omitempty"`
	//* Zone the asset belongs to
	Zone string `protobuf:"bytes,5,opt,name=zone,proto3" json:"zone,omitempty"`
	//* Apps the asset belongs to
	Apps []string `protobuf:"bytes,6,rep,name=apps,proto3" json:"apps,omitempty"`
	//* State of the asset active, inactive etc
	State Asset_AssetState `protobuf:"varint,7,opt,name=state,proto3,enum=araali_api_service.Asset_AssetState" json:"state,omitempty"`
	//* Type of the asset
	AssetType Asset_AssetType `protobuf:"varint,8,opt,name=asset_type,json=assetType,proto3,enum=araali_api_service.Asset_AssetType" json:"asset_type,omitempty"`
	//* Vulnerabilities in the asset
	Vulnerabilities []*Vulnerability `protobuf:"bytes,9,rep,name=vulnerabilities,proto3" json:"vulnerabilities,omitempty"`
	//* Visibility/Enforcement mode of the asset
	Mode Asset_AssetMode `protobuf:"varint,10,opt,name=mode,proto3,enum=araali_api_service.Asset_AssetMode" json:"mode,omitempty"`
	//* OS name of the asset
	OsName string `protobuf:"bytes,11,opt,name=os_name,json=osName,proto3" json:"os_name,omitempty"`
	//* AWS IAM Role assigned to the asset
	IamRole string `protobuf:"bytes,12,opt,name=iam_role,json=iamRole,proto3" json:"iam_role,omitempty"`
	//* Docker privilege assigned to the container (Docker containers only)
	DockerPrivileged bool `protobuf:"varint,13,opt,name=docker_privileged,json=dockerPrivileged,proto3" json:"docker_privileged,omitempty"`
	//* Capabilities of the container (container only)
	// Types that are assignable to Capabilities:
	//	*Asset_Docker
	//	*Asset_Containerd
	Capabilities isAsset_Capabilities `protobuf_oneof:"capabilities"`
}

func (x *Asset) Reset() {
	*x = Asset{}
	if protoimpl.UnsafeEnabled {
		mi := &file_araali_api_service_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Asset) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Asset) ProtoMessage() {}

func (x *Asset) ProtoReflect() protoreflect.Message {
	mi := &file_araali_api_service_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Asset.ProtoReflect.Descriptor instead.
func (*Asset) Descriptor() ([]byte, []int) {
	return file_araali_api_service_proto_rawDescGZIP(), []int{13}
}

func (x *Asset) GetHostName() string {
	if x != nil {
		return x.HostName
	}
	return ""
}

func (x *Asset) GetIpAddress() string {
	if x != nil {
		return x.IpAddress
	}
	return ""
}

func (x *Asset) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (x *Asset) GetImage() string {
	if x != nil {
		return x.Image
	}
	return ""
}

func (x *Asset) GetZone() string {
	if x != nil {
		return x.Zone
	}
	return ""
}

func (x *Asset) GetApps() []string {
	if x != nil {
		return x.Apps
	}
	return nil
}

func (x *Asset) GetState() Asset_AssetState {
	if x != nil {
		return x.State
	}
	return Asset_DELETED
}

func (x *Asset) GetAssetType() Asset_AssetType {
	if x != nil {
		return x.AssetType
	}
	return Asset_UNKNOWN_ASSET
}

func (x *Asset) GetVulnerabilities() []*Vulnerability {
	if x != nil {
		return x.Vulnerabilities
	}
	return nil
}

func (x *Asset) GetMode() Asset_AssetMode {
	if x != nil {
		return x.Mode
	}
	return Asset_TAP
}

func (x *Asset) GetOsName() string {
	if x != nil {
		return x.OsName
	}
	return ""
}

func (x *Asset) GetIamRole() string {
	if x != nil {
		return x.IamRole
	}
	return ""
}

func (x *Asset) GetDockerPrivileged() bool {
	if x != nil {
		return x.DockerPrivileged
	}
	return false
}

func (m *Asset) GetCapabilities() isAsset_Capabilities {
	if m != nil {
		return m.Capabilities
	}
	return nil
}

func (x *Asset) GetDocker() *Capabilities {
	if x, ok := x.GetCapabilities().(*Asset_Docker); ok {
		return x.Docker
	}
	return nil
}

func (x *Asset) GetContainerd() *Capabilities {
	if x, ok := x.GetCapabilities().(*Asset_Containerd); ok {
		return x.Containerd
	}
	return nil
}

type isAsset_Capabilities interface {
	isAsset_Capabilities()
}

type Asset_Docker struct {
	//* Capabilities exported by docker
	Docker *Capabilities `protobuf:"bytes,14,opt,name=docker,proto3,oneof"`
}

type Asset_Containerd struct {
	//* Capabilities exported by containerd
	Containerd *Capabilities `protobuf:"bytes,15,opt,name=containerd,proto3,oneof"`
}

func (*Asset_Docker) isAsset_Capabilities() {}

func (*Asset_Containerd) isAsset_Capabilities() {}

//*
// Captures an instance of vulnerability package name, cve info etc
type Vulnerability struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//* Package name with the vulnerability
	PackageName string `protobuf:"bytes,1,opt,name=package_name,json=packageName,proto3" json:"package_name,omitempty"`
	//* CVE id of the vulnerability
	CveId []string `protobuf:"bytes,2,rep,name=cve_id,json=cveId,proto3" json:"cve_id,omitempty"`
	//* Severity of the vulnerability
	Severity Vulnerability_Severity `protobuf:"varint,3,opt,name=severity,proto3,enum=araali_api_service.Vulnerability_Severity" json:"severity,omitempty"`
}

func (x *Vulnerability) Reset() {
	*x = Vulnerability{}
	if protoimpl.UnsafeEnabled {
		mi := &file_araali_api_service_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Vulnerability) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Vulnerability) ProtoMessage() {}

func (x *Vulnerability) ProtoReflect() protoreflect.Message {
	mi := &file_araali_api_service_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Vulnerability.ProtoReflect.Descriptor instead.
func (*Vulnerability) Descriptor() ([]byte, []int) {
	return file_araali_api_service_proto_rawDescGZIP(), []int{14}
}

func (x *Vulnerability) GetPackageName() string {
	if x != nil {
		return x.PackageName
	}
	return ""
}

func (x *Vulnerability) GetCveId() []string {
	if x != nil {
		return x.CveId
	}
	return nil
}

func (x *Vulnerability) GetSeverity() Vulnerability_Severity {
	if x != nil {
		return x.Severity
	}
	return Vulnerability_NONE
}

//*
// Fields to filter alerts in the ListAlerts API.
type AlertFilter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//* Fetch open alerts
	OpenAlerts bool `protobuf:"varint,1,opt,name=open_alerts,json=openAlerts,proto3" json:"open_alerts,omitempty"`
	//* Fetch closed alerts
	ClosedAlerts bool `protobuf:"varint,2,opt,name=closed_alerts,json=closedAlerts,proto3" json:"closed_alerts,omitempty"`
	//* Fetch perimeter egress alerts
	PerimeterEgress bool `protobuf:"varint,3,opt,name=perimeter_egress,json=perimeterEgress,proto3" json:"perimeter_egress,omitempty"`
	//* Fetch perimeter ingress alerts
	PerimeterIngress bool `protobuf:"varint,4,opt,name=perimeter_ingress,json=perimeterIngress,proto3" json:"perimeter_ingress,omitempty"`
	//* Fetch non araali egress alerts from private subnets
	HomeNonAraaliEgress bool `protobuf:"varint,5,opt,name=home_non_araali_egress,json=homeNonAraaliEgress,proto3" json:"home_non_araali_egress,omitempty"`
	//* Fetch non araali ingress alerts from private subnets
	HomeNonAraaliIngress bool `protobuf:"varint,6,opt,name=home_non_araali_ingress,json=homeNonAraaliIngress,proto3" json:"home_non_araali_ingress,omitempty"`
	//* Fetch araali to araali alerts
	AraaliToAraali bool `protobuf:"varint,7,opt,name=araali_to_araali,json=araaliToAraali,proto3" json:"araali_to_araali,omitempty"`
	//* Fetch all alerts from all lenses, even ones not monitored by current user
	ListAllAlerts bool `protobuf:"varint,8,opt,name=list_all_alerts,json=listAllAlerts,proto3" json:"list_all_alerts,omitempty"`
	//* Time range in which to fetch alerts
	Time *TimeSlice `protobuf:"bytes,9,opt,name=time,proto3" json:"time,omitempty"`
	//* Fetch alerts for given zone
	Zone string `protobuf:"bytes,10,opt,name=zone,proto3" json:"zone,omitempty"`
}

func (x *AlertFilter) Reset() {
	*x = AlertFilter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_araali_api_service_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AlertFilter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AlertFilter) ProtoMessage() {}

func (x *AlertFilter) ProtoReflect() protoreflect.Message {
	mi := &file_araali_api_service_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AlertFilter.ProtoReflect.Descriptor instead.
func (*AlertFilter) Descriptor() ([]byte, []int) {
	return file_araali_api_service_proto_rawDescGZIP(), []int{15}
}

func (x *AlertFilter) GetOpenAlerts() bool {
	if x != nil {
		return x.OpenAlerts
	}
	return false
}

func (x *AlertFilter) GetClosedAlerts() bool {
	if x != nil {
		return x.ClosedAlerts
	}
	return false
}

func (x *AlertFilter) GetPerimeterEgress() bool {
	if x != nil {
		return x.PerimeterEgress
	}
	return false
}

func (x *AlertFilter) GetPerimeterIngress() bool {
	if x != nil {
		return x.PerimeterIngress
	}
	return false
}

func (x *AlertFilter) GetHomeNonAraaliEgress() bool {
	if x != nil {
		return x.HomeNonAraaliEgress
	}
	return false
}

func (x *AlertFilter) GetHomeNonAraaliIngress() bool {
	if x != nil {
		return x.HomeNonAraaliIngress
	}
	return false
}

func (x *AlertFilter) GetAraaliToAraali() bool {
	if x != nil {
		return x.AraaliToAraali
	}
	return false
}

func (x *AlertFilter) GetListAllAlerts() bool {
	if x != nil {
		return x.ListAllAlerts
	}
	return false
}

func (x *AlertFilter) GetTime() *TimeSlice {
	if x != nil {
		return x.Time
	}
	return nil
}

func (x *AlertFilter) GetZone() string {
	if x != nil {
		return x.Zone
	}
	return ""
}

//*
// Request for alerts received by tenant
type ListAlertsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//* Handle to tenant
	Tenant *Tenant `protobuf:"bytes,1,opt,name=tenant,proto3" json:"tenant,omitempty"`
	//* Filter responses
	Filter *AlertFilter `protobuf:"bytes,2,opt,name=filter,proto3" json:"filter,omitempty"`
	//* Number of alerts to be returned each API call
	Count int32 `protobuf:"varint,3,opt,name=count,proto3" json:"count,omitempty"`
	//* Token to be sent in the next API call to retrieve the next set of alerts (paging)
	PagingToken string `protobuf:"bytes,4,opt,name=paging_token,json=pagingToken,proto3" json:"paging_token,omitempty"`
}

func (x *ListAlertsRequest) Reset() {
	*x = ListAlertsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_araali_api_service_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListAlertsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListAlertsRequest) ProtoMessage() {}

func (x *ListAlertsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_araali_api_service_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListAlertsRequest.ProtoReflect.Descriptor instead.
func (*ListAlertsRequest) Descriptor() ([]byte, []int) {
	return file_araali_api_service_proto_rawDescGZIP(), []int{16}
}

func (x *ListAlertsRequest) GetTenant() *Tenant {
	if x != nil {
		return x.Tenant
	}
	return nil
}

func (x *ListAlertsRequest) GetFilter() *AlertFilter {
	if x != nil {
		return x.Filter
	}
	return nil
}

func (x *ListAlertsRequest) GetCount() int32 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *ListAlertsRequest) GetPagingToken() string {
	if x != nil {
		return x.PagingToken
	}
	return ""
}

type ListAlertsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//* ListAsset API call response
	Response *AraaliAPIResponse `protobuf:"bytes,1,opt,name=response,proto3" json:"response,omitempty"`
	//* List of alerts
	Links []*Link `protobuf:"bytes,2,rep,name=links,proto3" json:"links,omitempty"`
	//* Token to be passed to the next API call (indicating there are more alerts to be retrieved)
	PagingToken string `protobuf:"bytes,3,opt,name=paging_token,json=pagingToken,proto3" json:"paging_token,omitempty"`
}

func (x *ListAlertsResponse) Reset() {
	*x = ListAlertsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_araali_api_service_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListAlertsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListAlertsResponse) ProtoMessage() {}

func (x *ListAlertsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_araali_api_service_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListAlertsResponse.ProtoReflect.Descriptor instead.
func (*ListAlertsResponse) Descriptor() ([]byte, []int) {
	return file_araali_api_service_proto_rawDescGZIP(), []int{17}
}

func (x *ListAlertsResponse) GetResponse() *AraaliAPIResponse {
	if x != nil {
		return x.Response
	}
	return nil
}

func (x *ListAlertsResponse) GetLinks() []*Link {
	if x != nil {
		return x.Links
	}
	return nil
}

func (x *ListAlertsResponse) GetPagingToken() string {
	if x != nil {
		return x.PagingToken
	}
	return ""
}

//
// Represents an araali endpoint
type AraaliEndpoint struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//* Zone the endpoint belongs to
	Zone string `protobuf:"bytes,1,opt,name=zone,proto3" json:"zone,omitempty"`
	//* Mapped app the endpoint belongs to
	App string `protobuf:"bytes,2,opt,name=app,proto3" json:"app,omitempty"`
	//* Original app/namespace the endpoint belongs to
	UnmappedApp string `protobuf:"bytes,3,opt,name=unmapped_app,json=unmappedApp,proto3" json:"unmapped_app,omitempty"`
	//* Namespace of the endpoint
	Namespace string `protobuf:"bytes,4,opt,name=namespace,proto3" json:"namespace,omitempty"`
	//* Pod the endpoint belongs to
	Pod string `protobuf:"bytes,5,opt,name=pod,proto3" json:"pod,omitempty"`
	//* Container the endpoint belongs to
	ContainerName string `protobuf:"bytes,6,opt,name=container_name,json=containerName,proto3" json:"container_name,omitempty"`
	//* Process of the endpoint belongs to
	Process string `protobuf:"bytes,7,opt,name=process,proto3" json:"process,omitempty"`
	//* Binary name of the endpoint process
	BinaryName string `protobuf:"bytes,8,opt,name=binary_name,json=binaryName,proto3" json:"binary_name,omitempty"`
	//* Parent of the endpoint process
	ParentProcess string `protobuf:"bytes,9,opt,name=parent_process,json=parentProcess,proto3" json:"parent_process,omitempty"`
}

func (x *AraaliEndpoint) Reset() {
	*x = AraaliEndpoint{}
	if protoimpl.UnsafeEnabled {
		mi := &file_araali_api_service_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AraaliEndpoint) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AraaliEndpoint) ProtoMessage() {}

func (x *AraaliEndpoint) ProtoReflect() protoreflect.Message {
	mi := &file_araali_api_service_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AraaliEndpoint.ProtoReflect.Descriptor instead.
func (*AraaliEndpoint) Descriptor() ([]byte, []int) {
	return file_araali_api_service_proto_rawDescGZIP(), []int{18}
}

func (x *AraaliEndpoint) GetZone() string {
	if x != nil {
		return x.Zone
	}
	return ""
}

func (x *AraaliEndpoint) GetApp() string {
	if x != nil {
		return x.App
	}
	return ""
}

func (x *AraaliEndpoint) GetUnmappedApp() string {
	if x != nil {
		return x.UnmappedApp
	}
	return ""
}

func (x *AraaliEndpoint) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *AraaliEndpoint) GetPod() string {
	if x != nil {
		return x.Pod
	}
	return ""
}

func (x *AraaliEndpoint) GetContainerName() string {
	if x != nil {
		return x.ContainerName
	}
	return ""
}

func (x *AraaliEndpoint) GetProcess() string {
	if x != nil {
		return x.Process
	}
	return ""
}

func (x *AraaliEndpoint) GetBinaryName() string {
	if x != nil {
		return x.BinaryName
	}
	return ""
}

func (x *AraaliEndpoint) GetParentProcess() string {
	if x != nil {
		return x.ParentProcess
	}
	return ""
}

//*
// Represents the subnet/mask
type Subnet struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//* Client subnet
	Subnet string `protobuf:"bytes,1,opt,name=subnet,proto3" json:"subnet,omitempty"`
	//* Client netmask
	NetMask uint32 `protobuf:"varint,2,opt,name=net_mask,json=netMask,proto3" json:"net_mask,omitempty"`
}

func (x *Subnet) Reset() {
	*x = Subnet{}
	if protoimpl.UnsafeEnabled {
		mi := &file_araali_api_service_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Subnet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Subnet) ProtoMessage() {}

func (x *Subnet) ProtoReflect() protoreflect.Message {
	mi := &file_araali_api_service_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Subnet.ProtoReflect.Descriptor instead.
func (*Subnet) Descriptor() ([]byte, []int) {
	return file_araali_api_service_proto_rawDescGZIP(), []int{19}
}

func (x *Subnet) GetSubnet() string {
	if x != nil {
		return x.Subnet
	}
	return ""
}

func (x *Subnet) GetNetMask() uint32 {
	if x != nil {
		return x.NetMask
	}
	return 0
}

//
// Represents a non araali client endpoint
type NonAraaliClientEndpoint struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//* Client subnet
	Subnet *Subnet `protobuf:"bytes,1,opt,name=subnet,proto3" json:"subnet,omitempty"`
}

func (x *NonAraaliClientEndpoint) Reset() {
	*x = NonAraaliClientEndpoint{}
	if protoimpl.UnsafeEnabled {
		mi := &file_araali_api_service_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NonAraaliClientEndpoint) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NonAraaliClientEndpoint) ProtoMessage() {}

func (x *NonAraaliClientEndpoint) ProtoReflect() protoreflect.Message {
	mi := &file_araali_api_service_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NonAraaliClientEndpoint.ProtoReflect.Descriptor instead.
func (*NonAraaliClientEndpoint) Descriptor() ([]byte, []int) {
	return file_araali_api_service_proto_rawDescGZIP(), []int{20}
}

func (x *NonAraaliClientEndpoint) GetSubnet() *Subnet {
	if x != nil {
		return x.Subnet
	}
	return nil
}

//
// Represents a non araali server endpoint
type NonAraaliServerEndpoint struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to DnsOrSubnet:
	//	*NonAraaliServerEndpoint_DnsPattern
	//	*NonAraaliServerEndpoint_Subnet
	DnsOrSubnet isNonAraaliServerEndpoint_DnsOrSubnet `protobuf_oneof:"dns_or_subnet"`
	//* Service destination port
	DstPort uint32 `protobuf:"varint,13,opt,name=dst_port,json=dstPort,proto3" json:"dst_port,omitempty"`
}

func (x *NonAraaliServerEndpoint) Reset() {
	*x = NonAraaliServerEndpoint{}
	if protoimpl.UnsafeEnabled {
		mi := &file_araali_api_service_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NonAraaliServerEndpoint) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NonAraaliServerEndpoint) ProtoMessage() {}

func (x *NonAraaliServerEndpoint) ProtoReflect() protoreflect.Message {
	mi := &file_araali_api_service_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NonAraaliServerEndpoint.ProtoReflect.Descriptor instead.
func (*NonAraaliServerEndpoint) Descriptor() ([]byte, []int) {
	return file_araali_api_service_proto_rawDescGZIP(), []int{21}
}

func (m *NonAraaliServerEndpoint) GetDnsOrSubnet() isNonAraaliServerEndpoint_DnsOrSubnet {
	if m != nil {
		return m.DnsOrSubnet
	}
	return nil
}

func (x *NonAraaliServerEndpoint) GetDnsPattern() string {
	if x, ok := x.GetDnsOrSubnet().(*NonAraaliServerEndpoint_DnsPattern); ok {
		return x.DnsPattern
	}
	return ""
}

func (x *NonAraaliServerEndpoint) GetSubnet() *Subnet {
	if x, ok := x.GetDnsOrSubnet().(*NonAraaliServerEndpoint_Subnet); ok {
		return x.Subnet
	}
	return nil
}

func (x *NonAraaliServerEndpoint) GetDstPort() uint32 {
	if x != nil {
		return x.DstPort
	}
	return 0
}

type isNonAraaliServerEndpoint_DnsOrSubnet interface {
	isNonAraaliServerEndpoint_DnsOrSubnet()
}

type NonAraaliServerEndpoint_DnsPattern struct {
	//* DNS/FQDN of endpoint
	DnsPattern string `protobuf:"bytes,1,opt,name=dns_pattern,json=dnsPattern,proto3,oneof"`
}

type NonAraaliServerEndpoint_Subnet struct {
	//* Server subnet
	Subnet *Subnet `protobuf:"bytes,2,opt,name=subnet,proto3,oneof"`
}

func (*NonAraaliServerEndpoint_DnsPattern) isNonAraaliServerEndpoint_DnsOrSubnet() {}

func (*NonAraaliServerEndpoint_Subnet) isNonAraaliServerEndpoint_DnsOrSubnet() {}

//
// Represents a non araali endpoint
type NonAraaliEndpoint struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Info:
	//	*NonAraaliEndpoint_Client
	//	*NonAraaliEndpoint_Server
	Info isNonAraaliEndpoint_Info `protobuf_oneof:"info"`
	//* WORLD if public subnet. HOME if private subnet.
	EndpointGroup NonAraaliEndpoint_EndpointGroup `protobuf:"varint,3,opt,name=endpoint_group,json=endpointGroup,proto3,enum=araali_api_service.NonAraaliEndpoint_EndpointGroup" json:"endpoint_group,omitempty"`
	//* Autonomous System Organization of the IP address if available
	Organization string `protobuf:"bytes,4,opt,name=organization,proto3" json:"organization,omitempty"`
}

func (x *NonAraaliEndpoint) Reset() {
	*x = NonAraaliEndpoint{}
	if protoimpl.UnsafeEnabled {
		mi := &file_araali_api_service_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NonAraaliEndpoint) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NonAraaliEndpoint) ProtoMessage() {}

func (x *NonAraaliEndpoint) ProtoReflect() protoreflect.Message {
	mi := &file_araali_api_service_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NonAraaliEndpoint.ProtoReflect.Descriptor instead.
func (*NonAraaliEndpoint) Descriptor() ([]byte, []int) {
	return file_araali_api_service_proto_rawDescGZIP(), []int{22}
}

func (m *NonAraaliEndpoint) GetInfo() isNonAraaliEndpoint_Info {
	if m != nil {
		return m.Info
	}
	return nil
}

func (x *NonAraaliEndpoint) GetClient() *NonAraaliClientEndpoint {
	if x, ok := x.GetInfo().(*NonAraaliEndpoint_Client); ok {
		return x.Client
	}
	return nil
}

func (x *NonAraaliEndpoint) GetServer() *NonAraaliServerEndpoint {
	if x, ok := x.GetInfo().(*NonAraaliEndpoint_Server); ok {
		return x.Server
	}
	return nil
}

func (x *NonAraaliEndpoint) GetEndpointGroup() NonAraaliEndpoint_EndpointGroup {
	if x != nil {
		return x.EndpointGroup
	}
	return NonAraaliEndpoint_UNKNOWN_GROUP
}

func (x *NonAraaliEndpoint) GetOrganization() string {
	if x != nil {
		return x.Organization
	}
	return ""
}

type isNonAraaliEndpoint_Info interface {
	isNonAraaliEndpoint_Info()
}

type NonAraaliEndpoint_Client struct {
	//* Non araali client
	Client *NonAraaliClientEndpoint `protobuf:"bytes,1,opt,name=client,proto3,oneof"`
}

type NonAraaliEndpoint_Server struct {
	//* Non araali server
	Server *NonAraaliServerEndpoint `protobuf:"bytes,2,opt,name=server,proto3,oneof"`
}

func (*NonAraaliEndpoint_Client) isNonAraaliEndpoint_Info() {}

func (*NonAraaliEndpoint_Server) isNonAraaliEndpoint_Info() {}

//*
// Represents one end of a link/alert_counts
type EndPoint struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Info:
	//	*EndPoint_Araali
	//	*EndPoint_NonAraali
	Info isEndPoint_Info `protobuf_oneof:"info"`
}

func (x *EndPoint) Reset() {
	*x = EndPoint{}
	if protoimpl.UnsafeEnabled {
		mi := &file_araali_api_service_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EndPoint) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EndPoint) ProtoMessage() {}

func (x *EndPoint) ProtoReflect() protoreflect.Message {
	mi := &file_araali_api_service_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EndPoint.ProtoReflect.Descriptor instead.
func (*EndPoint) Descriptor() ([]byte, []int) {
	return file_araali_api_service_proto_rawDescGZIP(), []int{23}
}

func (m *EndPoint) GetInfo() isEndPoint_Info {
	if m != nil {
		return m.Info
	}
	return nil
}

func (x *EndPoint) GetAraali() *AraaliEndpoint {
	if x, ok := x.GetInfo().(*EndPoint_Araali); ok {
		return x.Araali
	}
	return nil
}

func (x *EndPoint) GetNonAraali() *NonAraaliEndpoint {
	if x, ok := x.GetInfo().(*EndPoint_NonAraali); ok {
		return x.NonAraali
	}
	return nil
}

type isEndPoint_Info interface {
	isEndPoint_Info()
}

type EndPoint_Araali struct {
	//* Araali endpoint info
	Araali *AraaliEndpoint `protobuf:"bytes,1,opt,name=araali,proto3,oneof"`
}

type EndPoint_NonAraali struct {
	//* Non-Araali endpoint info
	NonAraali *NonAraaliEndpoint `protobuf:"bytes,2,opt,name=non_araali,json=nonAraali,proto3,oneof"`
}

func (*EndPoint_Araali) isEndPoint_Info() {}

func (*EndPoint_NonAraali) isEndPoint_Info() {}

//*
// Additional information about alerts
type AlertInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//* Alert type
	CommunicationAlertType string `protobuf:"bytes,1,opt,name=communication_alert_type,json=communicationAlertType,proto3" json:"communication_alert_type,omitempty"`
	//* Process alert type
	ProcessAlertType string `protobuf:"bytes,2,opt,name=process_alert_type,json=processAlertType,proto3" json:"process_alert_type,omitempty"`
	//* Number of times transitioned from SNOOZED -> ALERT
	ReOpenCount uint32 `protobuf:"varint,3,opt,name=re_open_count,json=reOpenCount,proto3" json:"re_open_count,omitempty"`
	//* Whether OPEN or CLOSED
	Status AlertInfo_Status `protobuf:"varint,4,opt,name=status,proto3,enum=araali_api_service.AlertInfo_Status" json:"status,omitempty"`
}

func (x *AlertInfo) Reset() {
	*x = AlertInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_araali_api_service_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AlertInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AlertInfo) ProtoMessage() {}

func (x *AlertInfo) ProtoReflect() protoreflect.Message {
	mi := &file_araali_api_service_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AlertInfo.ProtoReflect.Descriptor instead.
func (*AlertInfo) Descriptor() ([]byte, []int) {
	return file_araali_api_service_proto_rawDescGZIP(), []int{24}
}

func (x *AlertInfo) GetCommunicationAlertType() string {
	if x != nil {
		return x.CommunicationAlertType
	}
	return ""
}

func (x *AlertInfo) GetProcessAlertType() string {
	if x != nil {
		return x.ProcessAlertType
	}
	return ""
}

func (x *AlertInfo) GetReOpenCount() uint32 {
	if x != nil {
		return x.ReOpenCount
	}
	return 0
}

func (x *AlertInfo) GetStatus() AlertInfo_Status {
	if x != nil {
		return x.Status
	}
	return AlertInfo_UNKNOWN_STATUS
}

type Ports struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//* Active aggregated ports in the link
	ActivePorts []uint32 `protobuf:"varint,1,rep,packed,name=active_ports,json=activePorts,proto3" json:"active_ports,omitempty"`
	//* Inactive aggregated ports in the link
	InactivePorts []uint32 `protobuf:"varint,2,rep,packed,name=inactive_ports,json=inactivePorts,proto3" json:"inactive_ports,omitempty"`
}

func (x *Ports) Reset() {
	*x = Ports{}
	if protoimpl.UnsafeEnabled {
		mi := &file_araali_api_service_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Ports) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Ports) ProtoMessage() {}

func (x *Ports) ProtoReflect() protoreflect.Message {
	mi := &file_araali_api_service_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Ports.ProtoReflect.Descriptor instead.
func (*Ports) Descriptor() ([]byte, []int) {
	return file_araali_api_service_proto_rawDescGZIP(), []int{25}
}

func (x *Ports) GetActivePorts() []uint32 {
	if x != nil {
		return x.ActivePorts
	}
	return nil
}

func (x *Ports) GetInactivePorts() []uint32 {
	if x != nil {
		return x.InactivePorts
	}
	return nil
}

//*
// Represents an alert or policy link
type Link struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//* Client endpoint
	Client *EndPoint `protobuf:"bytes,1,opt,name=client,proto3" json:"client,omitempty"`
	//* Server endpoint
	Server *EndPoint `protobuf:"bytes,2,opt,name=server,proto3" json:"server,omitempty"`
	//* Direction of client-server link
	Direction Link_LinkDirection `protobuf:"varint,3,opt,name=direction,proto3,enum=araali_api_service.Link_LinkDirection" json:"direction,omitempty"`
	//* Timestamp when link was discovered
	Timestamp *timestamp.Timestamp `protobuf:"bytes,4,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	//* Unique handle to the link
	UniqueId string `protobuf:"bytes,5,opt,name=unique_id,json=uniqueId,proto3" json:"unique_id,omitempty"`
	//* State of the link alert, active/snoozed etc
	State LinkState `protobuf:"varint,6,opt,name=state,proto3,enum=araali_api_service.LinkState" json:"state,omitempty"`
	//* Aggregated active/inactive ports
	Ports *Ports `protobuf:"bytes,7,opt,name=ports,proto3" json:"ports,omitempty"`
	// Types that are assignable to Info:
	//	*Link_AlertInfo
	//	*Link_PolicyInfo
	Info isLink_Info `protobuf_oneof:"info"`
}

func (x *Link) Reset() {
	*x = Link{}
	if protoimpl.UnsafeEnabled {
		mi := &file_araali_api_service_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Link) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Link) ProtoMessage() {}

func (x *Link) ProtoReflect() protoreflect.Message {
	mi := &file_araali_api_service_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Link.ProtoReflect.Descriptor instead.
func (*Link) Descriptor() ([]byte, []int) {
	return file_araali_api_service_proto_rawDescGZIP(), []int{26}
}

func (x *Link) GetClient() *EndPoint {
	if x != nil {
		return x.Client
	}
	return nil
}

func (x *Link) GetServer() *EndPoint {
	if x != nil {
		return x.Server
	}
	return nil
}

func (x *Link) GetDirection() Link_LinkDirection {
	if x != nil {
		return x.Direction
	}
	return Link_UNKNOWN_DIRECTION
}

func (x *Link) GetTimestamp() *timestamp.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

func (x *Link) GetUniqueId() string {
	if x != nil {
		return x.UniqueId
	}
	return ""
}

func (x *Link) GetState() LinkState {
	if x != nil {
		return x.State
	}
	return LinkState_BASELINE_ALERT
}

func (x *Link) GetPorts() *Ports {
	if x != nil {
		return x.Ports
	}
	return nil
}

func (m *Link) GetInfo() isLink_Info {
	if m != nil {
		return m.Info
	}
	return nil
}

func (x *Link) GetAlertInfo() *AlertInfo {
	if x, ok := x.GetInfo().(*Link_AlertInfo); ok {
		return x.AlertInfo
	}
	return nil
}

func (x *Link) GetPolicyInfo() *PolicyInfo {
	if x, ok := x.GetInfo().(*Link_PolicyInfo); ok {
		return x.PolicyInfo
	}
	return nil
}

type isLink_Info interface {
	isLink_Info()
}

type Link_AlertInfo struct {
	//* Additional information for alerts
	AlertInfo *AlertInfo `protobuf:"bytes,8,opt,name=alert_info,json=alertInfo,proto3,oneof"`
}

type Link_PolicyInfo struct {
	//* Additional information for policy links
	PolicyInfo *PolicyInfo `protobuf:"bytes,9,opt,name=policy_info,json=policyInfo,proto3,oneof"`
}

func (*Link_AlertInfo) isLink_Info() {}

func (*Link_PolicyInfo) isLink_Info() {}

//*
// Additional information about policy
type PolicyInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//* Template name used to validate the link
	TemplateName string `protobuf:"bytes,1,opt,name=template_name,json=templateName,proto3" json:"template_name,omitempty"`
	//* User who created the template to validate the link
	TemplateUser string `protobuf:"bytes,2,opt,name=template_user,json=templateUser,proto3" json:"template_user,omitempty"`
	//* Reason for skipping policy evaluation at agents when enforced
	PolicySkipReason string `protobuf:"bytes,3,opt,name=policy_skip_reason,json=policySkipReason,proto3" json:"policy_skip_reason,omitempty"`
}

func (x *PolicyInfo) Reset() {
	*x = PolicyInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_araali_api_service_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PolicyInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PolicyInfo) ProtoMessage() {}

func (x *PolicyInfo) ProtoReflect() protoreflect.Message {
	mi := &file_araali_api_service_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PolicyInfo.ProtoReflect.Descriptor instead.
func (*PolicyInfo) Descriptor() ([]byte, []int) {
	return file_araali_api_service_proto_rawDescGZIP(), []int{27}
}

func (x *PolicyInfo) GetTemplateName() string {
	if x != nil {
		return x.TemplateName
	}
	return ""
}

func (x *PolicyInfo) GetTemplateUser() string {
	if x != nil {
		return x.TemplateUser
	}
	return ""
}

func (x *PolicyInfo) GetPolicySkipReason() string {
	if x != nil {
		return x.PolicySkipReason
	}
	return ""
}

type ListLinksRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//* Handle for the tenant
	Tenant *Tenant `protobuf:"bytes,1,opt,name=tenant,proto3" json:"tenant,omitempty"`
	//* Zone for the request
	Zone string `protobuf:"bytes,2,opt,name=zone,proto3" json:"zone,omitempty"`
	//* App for the request
	App string `protobuf:"bytes,3,opt,name=app,proto3" json:"app,omitempty"`
	//* Required when zone and app are not specified. Must be in form of ip:port or fqdn:port
	Service string `protobuf:"bytes,4,opt,name=service,proto3" json:"service,omitempty"`
	//* Time range for the list links request
	Time *TimeSlice `protobuf:"bytes,5,opt,name=time,proto3" json:"time,omitempty"`
}

func (x *ListLinksRequest) Reset() {
	*x = ListLinksRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_araali_api_service_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListLinksRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListLinksRequest) ProtoMessage() {}

func (x *ListLinksRequest) ProtoReflect() protoreflect.Message {
	mi := &file_araali_api_service_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListLinksRequest.ProtoReflect.Descriptor instead.
func (*ListLinksRequest) Descriptor() ([]byte, []int) {
	return file_araali_api_service_proto_rawDescGZIP(), []int{28}
}

func (x *ListLinksRequest) GetTenant() *Tenant {
	if x != nil {
		return x.Tenant
	}
	return nil
}

func (x *ListLinksRequest) GetZone() string {
	if x != nil {
		return x.Zone
	}
	return ""
}

func (x *ListLinksRequest) GetApp() string {
	if x != nil {
		return x.App
	}
	return ""
}

func (x *ListLinksRequest) GetService() string {
	if x != nil {
		return x.Service
	}
	return ""
}

func (x *ListLinksRequest) GetTime() *TimeSlice {
	if x != nil {
		return x.Time
	}
	return nil
}

type ListLinksResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//* ListLinks API call response
	Response *AraaliAPIResponse `protobuf:"bytes,1,opt,name=response,proto3" json:"response,omitempty"`
	//* List of links
	Links []*Link `protobuf:"bytes,2,rep,name=links,proto3" json:"links,omitempty"`
}

func (x *ListLinksResponse) Reset() {
	*x = ListLinksResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_araali_api_service_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListLinksResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListLinksResponse) ProtoMessage() {}

func (x *ListLinksResponse) ProtoReflect() protoreflect.Message {
	mi := &file_araali_api_service_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListLinksResponse.ProtoReflect.Descriptor instead.
func (*ListLinksResponse) Descriptor() ([]byte, []int) {
	return file_araali_api_service_proto_rawDescGZIP(), []int{29}
}

func (x *ListLinksResponse) GetResponse() *AraaliAPIResponse {
	if x != nil {
		return x.Response
	}
	return nil
}

func (x *ListLinksResponse) GetLinks() []*Link {
	if x != nil {
		return x.Links
	}
	return nil
}

//*
// Drilled down entity/lens
type Lens struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//* Lens type
	Type Lens_LensType `protobuf:"varint,1,opt,name=type,proto3,enum=araali_api_service.Lens_LensType" json:"type,omitempty"`
	//* Zone of the lens
	Zone string `protobuf:"bytes,2,opt,name=zone,proto3" json:"zone,omitempty"`
	//* App lens
	App string `protobuf:"bytes,3,opt,name=app,proto3" json:"app,omitempty"`
	//* Pod of the lens
	Pod string `protobuf:"bytes,4,opt,name=pod,proto3" json:"pod,omitempty"`
	//* Container of the lens
	ContainerName string `protobuf:"bytes,5,opt,name=container_name,json=containerName,proto3" json:"container_name,omitempty"`
	//* Process of the lens
	Process string `protobuf:"bytes,6,opt,name=process,proto3" json:"process,omitempty"`
	//* Parent process of the lens
	ParentProcess string `protobuf:"bytes,7,opt,name=parent_process,json=parentProcess,proto3" json:"parent_process,omitempty"`
	//* Binary name of the lens
	BinaryName string `protobuf:"bytes,8,opt,name=binary_name,json=binaryName,proto3" json:"binary_name,omitempty"`
	//* Service lens
	Service string `protobuf:"bytes,9,opt,name=service,proto3" json:"service,omitempty"`
}

func (x *Lens) Reset() {
	*x = Lens{}
	if protoimpl.UnsafeEnabled {
		mi := &file_araali_api_service_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Lens) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Lens) ProtoMessage() {}

func (x *Lens) ProtoReflect() protoreflect.Message {
	mi := &file_araali_api_service_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Lens.ProtoReflect.Descriptor instead.
func (*Lens) Descriptor() ([]byte, []int) {
	return file_araali_api_service_proto_rawDescGZIP(), []int{30}
}

func (x *Lens) GetType() Lens_LensType {
	if x != nil {
		return x.Type
	}
	return Lens_UNKNOWN_LENS
}

func (x *Lens) GetZone() string {
	if x != nil {
		return x.Zone
	}
	return ""
}

func (x *Lens) GetApp() string {
	if x != nil {
		return x.App
	}
	return ""
}

func (x *Lens) GetPod() string {
	if x != nil {
		return x.Pod
	}
	return ""
}

func (x *Lens) GetContainerName() string {
	if x != nil {
		return x.ContainerName
	}
	return ""
}

func (x *Lens) GetProcess() string {
	if x != nil {
		return x.Process
	}
	return ""
}

func (x *Lens) GetParentProcess() string {
	if x != nil {
		return x.ParentProcess
	}
	return ""
}

func (x *Lens) GetBinaryName() string {
	if x != nil {
		return x.BinaryName
	}
	return ""
}

func (x *Lens) GetService() string {
	if x != nil {
		return x.Service
	}
	return ""
}

//*
// Instance of the insight Representation
type Insight struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//* The kind of insight captured
	Reason string `protobuf:"bytes,1,opt,name=reason,proto3" json:"reason,omitempty"`
	//* The URL to view the insights
	Url string `protobuf:"bytes,2,opt,name=url,proto3" json:"url,omitempty"`
	//* Number of insights
	Count uint32 `protobuf:"varint,3,opt,name=count,proto3" json:"count,omitempty"`
	//* The zone/app the insights belong to
	Lens []*Lens `protobuf:"bytes,4,rep,name=lens,proto3" json:"lens,omitempty"`
}

func (x *Insight) Reset() {
	*x = Insight{}
	if protoimpl.UnsafeEnabled {
		mi := &file_araali_api_service_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Insight) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Insight) ProtoMessage() {}

func (x *Insight) ProtoReflect() protoreflect.Message {
	mi := &file_araali_api_service_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Insight.ProtoReflect.Descriptor instead.
func (*Insight) Descriptor() ([]byte, []int) {
	return file_araali_api_service_proto_rawDescGZIP(), []int{31}
}

func (x *Insight) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

func (x *Insight) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *Insight) GetCount() uint32 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *Insight) GetLens() []*Lens {
	if x != nil {
		return x.Lens
	}
	return nil
}

type ListInsightsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//* Handle of tenant
	Tenant *Tenant `protobuf:"bytes,1,opt,name=tenant,proto3" json:"tenant,omitempty"`
	//* Zone where insights are requested
	Zone string `protobuf:"bytes,2,opt,name=zone,proto3" json:"zone,omitempty"`
}

func (x *ListInsightsRequest) Reset() {
	*x = ListInsightsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_araali_api_service_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListInsightsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListInsightsRequest) ProtoMessage() {}

func (x *ListInsightsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_araali_api_service_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListInsightsRequest.ProtoReflect.Descriptor instead.
func (*ListInsightsRequest) Descriptor() ([]byte, []int) {
	return file_araali_api_service_proto_rawDescGZIP(), []int{32}
}

func (x *ListInsightsRequest) GetTenant() *Tenant {
	if x != nil {
		return x.Tenant
	}
	return nil
}

func (x *ListInsightsRequest) GetZone() string {
	if x != nil {
		return x.Zone
	}
	return ""
}

type ListInsightsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//* ListInsights API call response
	Response *AraaliAPIResponse `protobuf:"bytes,1,opt,name=response,proto3" json:"response,omitempty"`
	//* List of insights
	Insights []*Insight `protobuf:"bytes,2,rep,name=insights,proto3" json:"insights,omitempty"`
}

func (x *ListInsightsResponse) Reset() {
	*x = ListInsightsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_araali_api_service_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListInsightsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListInsightsResponse) ProtoMessage() {}

func (x *ListInsightsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_araali_api_service_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListInsightsResponse.ProtoReflect.Descriptor instead.
func (*ListInsightsResponse) Descriptor() ([]byte, []int) {
	return file_araali_api_service_proto_rawDescGZIP(), []int{33}
}

func (x *ListInsightsResponse) GetResponse() *AraaliAPIResponse {
	if x != nil {
		return x.Response
	}
	return nil
}

func (x *ListInsightsResponse) GetInsights() []*Insight {
	if x != nil {
		return x.Insights
	}
	return nil
}

type CreateFortifyYamlRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//* Handle of tenant
	Tenant *Tenant `protobuf:"bytes,1,opt,name=tenant,proto3" json:"tenant,omitempty"`
	//* Workload name - Unique name associated with workload. This is also the zone name - Cluster would show up on UI/Araali interfaces with this name
	WorkloadName string `protobuf:"bytes,2,opt,name=workload_name,json=workloadName,proto3" json:"workload_name,omitempty"`
	//* DNS of Fog that communicates with the cluster (Optional, take defaults if empty)
	Fog string `protobuf:"bytes,3,opt,name=fog,proto3" json:"fog,omitempty"`
	//* Disable upgrade (Optional - false by default)
	DisableUpgrade bool `protobuf:"varint,4,opt,name=disable_upgrade,json=disableUpgrade,proto3" json:"disable_upgrade,omitempty"`
	//* Disable enforcement (Optional - false by default)
	DisableEnforcement bool `protobuf:"varint,5,opt,name=disable_enforcement,json=disableEnforcement,proto3" json:"disable_enforcement,omitempty"`
	//* Type of yaml file to generate
	YamlType FortifyYamlType `protobuf:"varint,6,opt,name=yaml_type,json=yamlType,proto3,enum=araali_api_service.FortifyYamlType" json:"yaml_type,omitempty"`
}

func (x *CreateFortifyYamlRequest) Reset() {
	*x = CreateFortifyYamlRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_araali_api_service_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateFortifyYamlRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateFortifyYamlRequest) ProtoMessage() {}

func (x *CreateFortifyYamlRequest) ProtoReflect() protoreflect.Message {
	mi := &file_araali_api_service_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateFortifyYamlRequest.ProtoReflect.Descriptor instead.
func (*CreateFortifyYamlRequest) Descriptor() ([]byte, []int) {
	return file_araali_api_service_proto_rawDescGZIP(), []int{34}
}

func (x *CreateFortifyYamlRequest) GetTenant() *Tenant {
	if x != nil {
		return x.Tenant
	}
	return nil
}

func (x *CreateFortifyYamlRequest) GetWorkloadName() string {
	if x != nil {
		return x.WorkloadName
	}
	return ""
}

func (x *CreateFortifyYamlRequest) GetFog() string {
	if x != nil {
		return x.Fog
	}
	return ""
}

func (x *CreateFortifyYamlRequest) GetDisableUpgrade() bool {
	if x != nil {
		return x.DisableUpgrade
	}
	return false
}

func (x *CreateFortifyYamlRequest) GetDisableEnforcement() bool {
	if x != nil {
		return x.DisableEnforcement
	}
	return false
}

func (x *CreateFortifyYamlRequest) GetYamlType() FortifyYamlType {
	if x != nil {
		return x.YamlType
	}
	return FortifyYamlType_UNKNOWN
}

type CreateFortifyYamlResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//* CreateFortifyYamlResponse API call response
	Response *AraaliAPIResponse `protobuf:"bytes,1,opt,name=response,proto3" json:"response,omitempty"`
	//* Yaml formatted string response
	WorkloadYaml string `protobuf:"bytes,2,opt,name=workload_yaml,json=workloadYaml,proto3" json:"workload_yaml,omitempty"`
}

func (x *CreateFortifyYamlResponse) Reset() {
	*x = CreateFortifyYamlResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_araali_api_service_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateFortifyYamlResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateFortifyYamlResponse) ProtoMessage() {}

func (x *CreateFortifyYamlResponse) ProtoReflect() protoreflect.Message {
	mi := &file_araali_api_service_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateFortifyYamlResponse.ProtoReflect.Descriptor instead.
func (*CreateFortifyYamlResponse) Descriptor() ([]byte, []int) {
	return file_araali_api_service_proto_rawDescGZIP(), []int{35}
}

func (x *CreateFortifyYamlResponse) GetResponse() *AraaliAPIResponse {
	if x != nil {
		return x.Response
	}
	return nil
}

func (x *CreateFortifyYamlResponse) GetWorkloadYaml() string {
	if x != nil {
		return x.WorkloadYaml
	}
	return ""
}

type ListFortifyYamlRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//* Handle of tenant
	Tenant *Tenant `protobuf:"bytes,1,opt,name=tenant,proto3" json:"tenant,omitempty"`
	//* Type of yaml to list
	YamlType FortifyYamlType `protobuf:"varint,2,opt,name=yaml_type,json=yamlType,proto3,enum=araali_api_service.FortifyYamlType" json:"yaml_type,omitempty"`
}

func (x *ListFortifyYamlRequest) Reset() {
	*x = ListFortifyYamlRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_araali_api_service_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListFortifyYamlRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListFortifyYamlRequest) ProtoMessage() {}

func (x *ListFortifyYamlRequest) ProtoReflect() protoreflect.Message {
	mi := &file_araali_api_service_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListFortifyYamlRequest.ProtoReflect.Descriptor instead.
func (*ListFortifyYamlRequest) Descriptor() ([]byte, []int) {
	return file_araali_api_service_proto_rawDescGZIP(), []int{36}
}

func (x *ListFortifyYamlRequest) GetTenant() *Tenant {
	if x != nil {
		return x.Tenant
	}
	return nil
}

func (x *ListFortifyYamlRequest) GetYamlType() FortifyYamlType {
	if x != nil {
		return x.YamlType
	}
	return FortifyYamlType_UNKNOWN
}

type ListFortifyYamlResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//* ListWorkloadResponse API call response
	Response *AraaliAPIResponse `protobuf:"bytes,1,opt,name=response,proto3" json:"response,omitempty"`
	//* List of workloads
	Workloads []string `protobuf:"bytes,2,rep,name=workloads,proto3" json:"workloads,omitempty"`
}

func (x *ListFortifyYamlResponse) Reset() {
	*x = ListFortifyYamlResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_araali_api_service_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListFortifyYamlResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListFortifyYamlResponse) ProtoMessage() {}

func (x *ListFortifyYamlResponse) ProtoReflect() protoreflect.Message {
	mi := &file_araali_api_service_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListFortifyYamlResponse.ProtoReflect.Descriptor instead.
func (*ListFortifyYamlResponse) Descriptor() ([]byte, []int) {
	return file_araali_api_service_proto_rawDescGZIP(), []int{37}
}

func (x *ListFortifyYamlResponse) GetResponse() *AraaliAPIResponse {
	if x != nil {
		return x.Response
	}
	return nil
}

func (x *ListFortifyYamlResponse) GetWorkloads() []string {
	if x != nil {
		return x.Workloads
	}
	return nil
}

type DeleteFortifyYamlRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//* Handle of tenant
	Tenant *Tenant `protobuf:"bytes,1,opt,name=tenant,proto3" json:"tenant,omitempty"`
	//* Unique ID associated with cluster
	WorkloadName string `protobuf:"bytes,2,opt,name=workload_name,json=workloadName,proto3" json:"workload_name,omitempty"`
}

func (x *DeleteFortifyYamlRequest) Reset() {
	*x = DeleteFortifyYamlRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_araali_api_service_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteFortifyYamlRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteFortifyYamlRequest) ProtoMessage() {}

func (x *DeleteFortifyYamlRequest) ProtoReflect() protoreflect.Message {
	mi := &file_araali_api_service_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteFortifyYamlRequest.ProtoReflect.Descriptor instead.
func (*DeleteFortifyYamlRequest) Descriptor() ([]byte, []int) {
	return file_araali_api_service_proto_rawDescGZIP(), []int{38}
}

func (x *DeleteFortifyYamlRequest) GetTenant() *Tenant {
	if x != nil {
		return x.Tenant
	}
	return nil
}

func (x *DeleteFortifyYamlRequest) GetWorkloadName() string {
	if x != nil {
		return x.WorkloadName
	}
	return ""
}

type ListPolicyAndEnforcementStatusRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//* Handle of tenant
	Tenant *Tenant `protobuf:"bytes,1,opt,name=tenant,proto3" json:"tenant,omitempty"`
	//* Zone to which container belongs
	Zone string `protobuf:"bytes,2,opt,name=zone,proto3" json:"zone,omitempty"`
	//* App to which container belongs
	App string `protobuf:"bytes,3,opt,name=app,proto3" json:"app,omitempty"`
	//* Pod to which container belongs
	Pod string `protobuf:"bytes,4,opt,name=pod,proto3" json:"pod,omitempty"`
	//* container name
	Container string `protobuf:"bytes,5,opt,name=container,proto3" json:"container,omitempty"`
}

func (x *ListPolicyAndEnforcementStatusRequest) Reset() {
	*x = ListPolicyAndEnforcementStatusRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_araali_api_service_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListPolicyAndEnforcementStatusRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListPolicyAndEnforcementStatusRequest) ProtoMessage() {}

func (x *ListPolicyAndEnforcementStatusRequest) ProtoReflect() protoreflect.Message {
	mi := &file_araali_api_service_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListPolicyAndEnforcementStatusRequest.ProtoReflect.Descriptor instead.
func (*ListPolicyAndEnforcementStatusRequest) Descriptor() ([]byte, []int) {
	return file_araali_api_service_proto_rawDescGZIP(), []int{39}
}

func (x *ListPolicyAndEnforcementStatusRequest) GetTenant() *Tenant {
	if x != nil {
		return x.Tenant
	}
	return nil
}

func (x *ListPolicyAndEnforcementStatusRequest) GetZone() string {
	if x != nil {
		return x.Zone
	}
	return ""
}

func (x *ListPolicyAndEnforcementStatusRequest) GetApp() string {
	if x != nil {
		return x.App
	}
	return ""
}

func (x *ListPolicyAndEnforcementStatusRequest) GetPod() string {
	if x != nil {
		return x.Pod
	}
	return ""
}

func (x *ListPolicyAndEnforcementStatusRequest) GetContainer() string {
	if x != nil {
		return x.Container
	}
	return ""
}

type ListPolicyAndEnforcementStatusResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//* Policies represented in yaml format.
	PolicyAndEnforcementYaml string `protobuf:"bytes,1,opt,name=policy_and_enforcement_yaml,json=policyAndEnforcementYaml,proto3" json:"policy_and_enforcement_yaml,omitempty"`
}

func (x *ListPolicyAndEnforcementStatusResponse) Reset() {
	*x = ListPolicyAndEnforcementStatusResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_araali_api_service_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListPolicyAndEnforcementStatusResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListPolicyAndEnforcementStatusResponse) ProtoMessage() {}

func (x *ListPolicyAndEnforcementStatusResponse) ProtoReflect() protoreflect.Message {
	mi := &file_araali_api_service_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListPolicyAndEnforcementStatusResponse.ProtoReflect.Descriptor instead.
func (*ListPolicyAndEnforcementStatusResponse) Descriptor() ([]byte, []int) {
	return file_araali_api_service_proto_rawDescGZIP(), []int{40}
}

func (x *ListPolicyAndEnforcementStatusResponse) GetPolicyAndEnforcementYaml() string {
	if x != nil {
		return x.PolicyAndEnforcementYaml
	}
	return ""
}

type AraaliFwKnobs struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Install                        bool `protobuf:"varint,1,opt,name=install,proto3" json:"install,omitempty"`
	EnableProcessVulnerabilities   bool `protobuf:"varint,2,opt,name=enable_process_vulnerabilities,json=enableProcessVulnerabilities,proto3" json:"enable_process_vulnerabilities,omitempty"`
	EnableContainerVulnerabilities bool `protobuf:"varint,3,opt,name=enable_container_vulnerabilities,json=enableContainerVulnerabilities,proto3" json:"enable_container_vulnerabilities,omitempty"`
	EnableFlowDedup                bool `protobuf:"varint,4,opt,name=enable_flow_dedup,json=enableFlowDedup,proto3" json:"enable_flow_dedup,omitempty"`
	EnableFlowRateLimit            bool `protobuf:"varint,5,opt,name=enable_flow_rate_limit,json=enableFlowRateLimit,proto3" json:"enable_flow_rate_limit,omitempty"`
}

func (x *AraaliFwKnobs) Reset() {
	*x = AraaliFwKnobs{}
	if protoimpl.UnsafeEnabled {
		mi := &file_araali_api_service_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AraaliFwKnobs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AraaliFwKnobs) ProtoMessage() {}

func (x *AraaliFwKnobs) ProtoReflect() protoreflect.Message {
	mi := &file_araali_api_service_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AraaliFwKnobs.ProtoReflect.Descriptor instead.
func (*AraaliFwKnobs) Descriptor() ([]byte, []int) {
	return file_araali_api_service_proto_rawDescGZIP(), []int{41}
}

func (x *AraaliFwKnobs) GetInstall() bool {
	if x != nil {
		return x.Install
	}
	return false
}

func (x *AraaliFwKnobs) GetEnableProcessVulnerabilities() bool {
	if x != nil {
		return x.EnableProcessVulnerabilities
	}
	return false
}

func (x *AraaliFwKnobs) GetEnableContainerVulnerabilities() bool {
	if x != nil {
		return x.EnableContainerVulnerabilities
	}
	return false
}

func (x *AraaliFwKnobs) GetEnableFlowDedup() bool {
	if x != nil {
		return x.EnableFlowDedup
	}
	return false
}

func (x *AraaliFwKnobs) GetEnableFlowRateLimit() bool {
	if x != nil {
		return x.EnableFlowRateLimit
	}
	return false
}

type GetFirewallConfigRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TenantId string `protobuf:"bytes,1,opt,name=tenant_id,json=tenantId,proto3" json:"tenant_id,omitempty"`
	Zone     string `protobuf:"bytes,2,opt,name=zone,proto3" json:"zone,omitempty"`
}

func (x *GetFirewallConfigRequest) Reset() {
	*x = GetFirewallConfigRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_araali_api_service_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetFirewallConfigRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetFirewallConfigRequest) ProtoMessage() {}

func (x *GetFirewallConfigRequest) ProtoReflect() protoreflect.Message {
	mi := &file_araali_api_service_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetFirewallConfigRequest.ProtoReflect.Descriptor instead.
func (*GetFirewallConfigRequest) Descriptor() ([]byte, []int) {
	return file_araali_api_service_proto_rawDescGZIP(), []int{42}
}

func (x *GetFirewallConfigRequest) GetTenantId() string {
	if x != nil {
		return x.TenantId
	}
	return ""
}

func (x *GetFirewallConfigRequest) GetZone() string {
	if x != nil {
		return x.Zone
	}
	return ""
}

type UpdateFirewallConfigRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TenantId string         `protobuf:"bytes,1,opt,name=tenant_id,json=tenantId,proto3" json:"tenant_id,omitempty"`
	Zone     string         `protobuf:"bytes,2,opt,name=zone,proto3" json:"zone,omitempty"`
	Knobs    *AraaliFwKnobs `protobuf:"bytes,3,opt,name=knobs,proto3" json:"knobs,omitempty"`
}

func (x *UpdateFirewallConfigRequest) Reset() {
	*x = UpdateFirewallConfigRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_araali_api_service_proto_msgTypes[43]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateFirewallConfigRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateFirewallConfigRequest) ProtoMessage() {}

func (x *UpdateFirewallConfigRequest) ProtoReflect() protoreflect.Message {
	mi := &file_araali_api_service_proto_msgTypes[43]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateFirewallConfigRequest.ProtoReflect.Descriptor instead.
func (*UpdateFirewallConfigRequest) Descriptor() ([]byte, []int) {
	return file_araali_api_service_proto_rawDescGZIP(), []int{43}
}

func (x *UpdateFirewallConfigRequest) GetTenantId() string {
	if x != nil {
		return x.TenantId
	}
	return ""
}

func (x *UpdateFirewallConfigRequest) GetZone() string {
	if x != nil {
		return x.Zone
	}
	return ""
}

func (x *UpdateFirewallConfigRequest) GetKnobs() *AraaliFwKnobs {
	if x != nil {
		return x.Knobs
	}
	return nil
}

type FirewallConfigResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TenantId string         `protobuf:"bytes,2,opt,name=tenant_id,json=tenantId,proto3" json:"tenant_id,omitempty"`
	Zone     string         `protobuf:"bytes,3,opt,name=zone,proto3" json:"zone,omitempty"`
	Knobs    *AraaliFwKnobs `protobuf:"bytes,4,opt,name=knobs,proto3" json:"knobs,omitempty"`
}

func (x *FirewallConfigResponse) Reset() {
	*x = FirewallConfigResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_araali_api_service_proto_msgTypes[44]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FirewallConfigResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FirewallConfigResponse) ProtoMessage() {}

func (x *FirewallConfigResponse) ProtoReflect() protoreflect.Message {
	mi := &file_araali_api_service_proto_msgTypes[44]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FirewallConfigResponse.ProtoReflect.Descriptor instead.
func (*FirewallConfigResponse) Descriptor() ([]byte, []int) {
	return file_araali_api_service_proto_rawDescGZIP(), []int{44}
}

func (x *FirewallConfigResponse) GetTenantId() string {
	if x != nil {
		return x.TenantId
	}
	return ""
}

func (x *FirewallConfigResponse) GetZone() string {
	if x != nil {
		return x.Zone
	}
	return ""
}

func (x *FirewallConfigResponse) GetKnobs() *AraaliFwKnobs {
	if x != nil {
		return x.Knobs
	}
	return nil
}

var File_araali_api_service_proto protoreflect.FileDescriptor

var file_araali_api_service_proto_rawDesc = []byte{
	0x0a, 0x18, 0x61, 0x72, 0x61, 0x61, 0x6c, 0x69, 0x5f, 0x61, 0x70, 0x69, 0x5f, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x12, 0x61, 0x72, 0x61, 0x61,
	0x6c, 0x69, 0x5f, 0x61, 0x70, 0x69, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x1a, 0x1f,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f,
	0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22,
	0x39, 0x0a, 0x06, 0x54, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x61, 0x64, 0x6d,
	0x69, 0x6e, 0x5f, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x61, 0x64, 0x6d, 0x69, 0x6e, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x22, 0x9c, 0x01, 0x0a, 0x0a, 0x41,
	0x72, 0x61, 0x61, 0x6c, 0x69, 0x55, 0x73, 0x65, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61,
	0x69, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12,
	0x37, 0x0a, 0x04, 0x72, 0x6f, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x23, 0x2e,
	0x61, 0x72, 0x61, 0x61, 0x6c, 0x69, 0x5f, 0x61, 0x70, 0x69, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x41, 0x72, 0x61, 0x61, 0x6c, 0x69, 0x55, 0x73, 0x65, 0x72, 0x2e, 0x52, 0x6f,
	0x6c, 0x65, 0x52, 0x04, 0x72, 0x6f, 0x6c, 0x65, 0x12, 0x22, 0x0a, 0x0d, 0x69, 0x73, 0x5f, 0x73,
	0x69, 0x74, 0x65, 0x5f, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x0b, 0x69, 0x73, 0x53, 0x69, 0x74, 0x65, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x22, 0x1b, 0x0a, 0x04,
	0x52, 0x6f, 0x6c, 0x65, 0x12, 0x09, 0x0a, 0x05, 0x41, 0x44, 0x4d, 0x49, 0x4e, 0x10, 0x00, 0x12,
	0x08, 0x0a, 0x04, 0x55, 0x53, 0x45, 0x52, 0x10, 0x01, 0x22, 0x49, 0x0a, 0x13, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x54, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x32, 0x0a, 0x06, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x61, 0x72, 0x61, 0x61, 0x6c, 0x69, 0x5f, 0x61, 0x70, 0x69, 0x5f, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x54, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x52, 0x06, 0x74, 0x65,
	0x6e, 0x61, 0x6e, 0x74, 0x22, 0x8d, 0x01, 0x0a, 0x14, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54,
	0x65, 0x6e, 0x61, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x41, 0x0a,
	0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x25, 0x2e, 0x61, 0x72, 0x61, 0x61, 0x6c, 0x69, 0x5f, 0x61, 0x70, 0x69, 0x5f, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x41, 0x72, 0x61, 0x61, 0x6c, 0x69, 0x41, 0x50, 0x49, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x32, 0x0a, 0x06, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x61, 0x72, 0x61, 0x61, 0x6c, 0x69, 0x5f, 0x61, 0x70, 0x69, 0x5f, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x54, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x52, 0x06, 0x74, 0x65,
	0x6e, 0x61, 0x6e, 0x74, 0x22, 0x49, 0x0a, 0x13, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x54, 0x65,
	0x6e, 0x61, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x32, 0x0a, 0x06, 0x74,
	0x65, 0x6e, 0x61, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x61, 0x72,
	0x61, 0x61, 0x6c, 0x69, 0x5f, 0x61, 0x70, 0x69, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x54, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x52, 0x06, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x22,
	0x78, 0x0a, 0x0e, 0x41, 0x64, 0x64, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x32, 0x0a, 0x06, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x61, 0x72, 0x61, 0x61, 0x6c, 0x69, 0x5f, 0x61, 0x70, 0x69, 0x5f, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x54, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x52, 0x06, 0x74,
	0x65, 0x6e, 0x61, 0x6e, 0x74, 0x12, 0x32, 0x0a, 0x04, 0x75, 0x73, 0x65, 0x72, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x61, 0x72, 0x61, 0x61, 0x6c, 0x69, 0x5f, 0x61, 0x70, 0x69,
	0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x41, 0x72, 0x61, 0x61, 0x6c, 0x69, 0x55,
	0x73, 0x65, 0x72, 0x52, 0x04, 0x75, 0x73, 0x65, 0x72, 0x22, 0x7b, 0x0a, 0x11, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x32,
	0x0a, 0x06, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x61, 0x72, 0x61, 0x61, 0x6c, 0x69, 0x5f, 0x61, 0x70, 0x69, 0x5f, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x54, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x52, 0x06, 0x74, 0x65, 0x6e, 0x61,
	0x6e, 0x74, 0x12, 0x32, 0x0a, 0x04, 0x75, 0x73, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1e, 0x2e, 0x61, 0x72, 0x61, 0x61, 0x6c, 0x69, 0x5f, 0x61, 0x70, 0x69, 0x5f, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x41, 0x72, 0x61, 0x61, 0x6c, 0x69, 0x55, 0x73, 0x65, 0x72,
	0x52, 0x04, 0x75, 0x73, 0x65, 0x72, 0x22, 0xa8, 0x01, 0x0a, 0x11, 0x41, 0x72, 0x61, 0x61, 0x6c,
	0x69, 0x41, 0x50, 0x49, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x44, 0x0a, 0x04,
	0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x30, 0x2e, 0x61, 0x72, 0x61,
	0x61, 0x6c, 0x69, 0x5f, 0x61, 0x70, 0x69, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x41, 0x72, 0x61, 0x61, 0x6c, 0x69, 0x41, 0x50, 0x49, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x2e, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x63, 0x6f,
	0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x33, 0x0a, 0x0a,
	0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x0b, 0x0a, 0x07, 0x53, 0x55,
	0x43, 0x43, 0x45, 0x53, 0x53, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x07, 0x46, 0x41, 0x49, 0x4c, 0x55,
	0x52, 0x45, 0x10, 0x01, 0x12, 0x0b, 0x0a, 0x07, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10,
	0x02, 0x22, 0x7d, 0x0a, 0x09, 0x54, 0x69, 0x6d, 0x65, 0x53, 0x6c, 0x69, 0x63, 0x65, 0x12, 0x39,
	0x0a, 0x0a, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09,
	0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x35, 0x0a, 0x08, 0x65, 0x6e, 0x64,
	0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x07, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65,
	0x22, 0xc9, 0x01, 0x0a, 0x0b, 0x41, 0x73, 0x73, 0x65, 0x74, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72,
	0x12, 0x24, 0x0a, 0x0e, 0x6c, 0x69, 0x73, 0x74, 0x5f, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x5f,
	0x76, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x6c, 0x69, 0x73, 0x74, 0x41, 0x63,
	0x74, 0x69, 0x76, 0x65, 0x56, 0x6d, 0x12, 0x28, 0x0a, 0x10, 0x6c, 0x69, 0x73, 0x74, 0x5f, 0x69,
	0x6e, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x5f, 0x76, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x0e, 0x6c, 0x69, 0x73, 0x74, 0x49, 0x6e, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x56, 0x6d,
	0x12, 0x32, 0x0a, 0x15, 0x6c, 0x69, 0x73, 0x74, 0x5f, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x5f,
	0x63, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x13, 0x6c, 0x69, 0x73, 0x74, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x61,
	0x69, 0x6e, 0x65, 0x72, 0x12, 0x36, 0x0a, 0x17, 0x6c, 0x69, 0x73, 0x74, 0x5f, 0x69, 0x6e, 0x61,
	0x63, 0x74, 0x69, 0x76, 0x65, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x15, 0x6c, 0x69, 0x73, 0x74, 0x49, 0x6e, 0x61, 0x63, 0x74,
	0x69, 0x76, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x22, 0xd9, 0x01, 0x0a,
	0x11, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x73, 0x73, 0x65, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x32, 0x0a, 0x06, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x61, 0x72, 0x61, 0x61, 0x6c, 0x69, 0x5f, 0x61, 0x70, 0x69, 0x5f,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x54, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x52, 0x06,
	0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x7a, 0x6f, 0x6e, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x7a, 0x6f, 0x6e, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x61, 0x70,
	0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x61, 0x70, 0x70, 0x12, 0x31, 0x0a, 0x04,
	0x74, 0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x61, 0x72, 0x61,
	0x61, 0x6c, 0x69, 0x5f, 0x61, 0x70, 0x69, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x54, 0x69, 0x6d, 0x65, 0x53, 0x6c, 0x69, 0x63, 0x65, 0x52, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x12,
	0x37, 0x0a, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1f, 0x2e, 0x61, 0x72, 0x61, 0x61, 0x6c, 0x69, 0x5f, 0x61, 0x70, 0x69, 0x5f, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x41, 0x73, 0x73, 0x65, 0x74, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72,
	0x52, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x22, 0x8a, 0x01, 0x0a, 0x12, 0x4c, 0x69, 0x73,
	0x74, 0x41, 0x73, 0x73, 0x65, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x41, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x25, 0x2e, 0x61, 0x72, 0x61, 0x61, 0x6c, 0x69, 0x5f, 0x61, 0x70, 0x69, 0x5f, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x41, 0x72, 0x61, 0x61, 0x6c, 0x69, 0x41, 0x50, 0x49,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x31, 0x0a, 0x06, 0x61, 0x73, 0x73, 0x65, 0x74, 0x73, 0x18, 0x02, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x19, 0x2e, 0x61, 0x72, 0x61, 0x61, 0x6c, 0x69, 0x5f, 0x61, 0x70, 0x69, 0x5f,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x41, 0x73, 0x73, 0x65, 0x74, 0x52, 0x06, 0x61,
	0x73, 0x73, 0x65, 0x74, 0x73, 0x22, 0x32, 0x0a, 0x0c, 0x43, 0x61, 0x70, 0x61, 0x62, 0x69, 0x6c,
	0x69, 0x74, 0x69, 0x65, 0x73, 0x12, 0x22, 0x0a, 0x0c, 0x63, 0x61, 0x70, 0x61, 0x62, 0x69, 0x6c,
	0x69, 0x74, 0x69, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x61, 0x70,
	0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x69, 0x65, 0x73, 0x22, 0xe9, 0x06, 0x0a, 0x05, 0x41, 0x73,
	0x73, 0x65, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x68, 0x6f, 0x73, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x68, 0x6f, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x70, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x69, 0x70, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12,
	0x12, 0x0a, 0x04, 0x75, 0x75, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75,
	0x75, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x7a, 0x6f, 0x6e,
	0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x7a, 0x6f, 0x6e, 0x65, 0x12, 0x12, 0x0a,
	0x04, 0x61, 0x70, 0x70, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x09, 0x52, 0x04, 0x61, 0x70, 0x70,
	0x73, 0x12, 0x3a, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x24, 0x2e, 0x61, 0x72, 0x61, 0x61, 0x6c, 0x69, 0x5f, 0x61, 0x70, 0x69, 0x5f, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x41, 0x73, 0x73, 0x65, 0x74, 0x2e, 0x41, 0x73, 0x73, 0x65,
	0x74, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x12, 0x42, 0x0a,
	0x0a, 0x61, 0x73, 0x73, 0x65, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x23, 0x2e, 0x61, 0x72, 0x61, 0x61, 0x6c, 0x69, 0x5f, 0x61, 0x70, 0x69, 0x5f, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x41, 0x73, 0x73, 0x65, 0x74, 0x2e, 0x41, 0x73, 0x73,
	0x65, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x09, 0x61, 0x73, 0x73, 0x65, 0x74, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x4b, 0x0a, 0x0f, 0x76, 0x75, 0x6c, 0x6e, 0x65, 0x72, 0x61, 0x62, 0x69, 0x6c, 0x69,
	0x74, 0x69, 0x65, 0x73, 0x18, 0x09, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x61, 0x72, 0x61,
	0x61, 0x6c, 0x69, 0x5f, 0x61, 0x70, 0x69, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x56, 0x75, 0x6c, 0x6e, 0x65, 0x72, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x52, 0x0f, 0x76,
	0x75, 0x6c, 0x6e, 0x65, 0x72, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x69, 0x65, 0x73, 0x12, 0x37,
	0x0a, 0x04, 0x6d, 0x6f, 0x64, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x23, 0x2e, 0x61,
	0x72, 0x61, 0x61, 0x6c, 0x69, 0x5f, 0x61, 0x70, 0x69, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2e, 0x41, 0x73, 0x73, 0x65, 0x74, 0x2e, 0x41, 0x73, 0x73, 0x65, 0x74, 0x4d, 0x6f, 0x64,
	0x65, 0x52, 0x04, 0x6d, 0x6f, 0x64, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x6f, 0x73, 0x5f, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6f, 0x73, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x19, 0x0a, 0x08, 0x69, 0x61, 0x6d, 0x5f, 0x72, 0x6f, 0x6c, 0x65, 0x18, 0x0c, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x69, 0x61, 0x6d, 0x52, 0x6f, 0x6c, 0x65, 0x12, 0x2b, 0x0a, 0x11, 0x64,
	0x6f, 0x63, 0x6b, 0x65, 0x72, 0x5f, 0x70, 0x72, 0x69, 0x76, 0x69, 0x6c, 0x65, 0x67, 0x65, 0x64,
	0x18, 0x0d, 0x20, 0x01, 0x28, 0x08, 0x52, 0x10, 0x64, 0x6f, 0x63, 0x6b, 0x65, 0x72, 0x50, 0x72,
	0x69, 0x76, 0x69, 0x6c, 0x65, 0x67, 0x65, 0x64, 0x12, 0x3a, 0x0a, 0x06, 0x64, 0x6f, 0x63, 0x6b,
	0x65, 0x72, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x61, 0x72, 0x61, 0x61, 0x6c,
	0x69, 0x5f, 0x61, 0x70, 0x69, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x43, 0x61,
	0x70, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x69, 0x65, 0x73, 0x48, 0x00, 0x52, 0x06, 0x64, 0x6f,
	0x63, 0x6b, 0x65, 0x72, 0x12, 0x42, 0x0a, 0x0a, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65,
	0x72, 0x64, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x61, 0x72, 0x61, 0x61, 0x6c,
	0x69, 0x5f, 0x61, 0x70, 0x69, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x43, 0x61,
	0x70, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x69, 0x65, 0x73, 0x48, 0x00, 0x52, 0x0a, 0x63, 0x6f,
	0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x64, 0x22, 0x33, 0x0a, 0x0a, 0x41, 0x73, 0x73, 0x65,
	0x74, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x0b, 0x0a, 0x07, 0x44, 0x45, 0x4c, 0x45, 0x54, 0x45,
	0x44, 0x10, 0x00, 0x12, 0x0a, 0x0a, 0x06, 0x41, 0x43, 0x54, 0x49, 0x56, 0x45, 0x10, 0x01, 0x12,
	0x0c, 0x0a, 0x08, 0x49, 0x4e, 0x41, 0x43, 0x54, 0x49, 0x56, 0x45, 0x10, 0x02, 0x22, 0x42, 0x0a,
	0x09, 0x41, 0x73, 0x73, 0x65, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x11, 0x0a, 0x0d, 0x55, 0x4e,
	0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x5f, 0x41, 0x53, 0x53, 0x45, 0x54, 0x10, 0x00, 0x12, 0x13, 0x0a,
	0x0f, 0x56, 0x49, 0x52, 0x54, 0x55, 0x41, 0x4c, 0x5f, 0x4d, 0x41, 0x43, 0x48, 0x49, 0x4e, 0x45,
	0x10, 0x01, 0x12, 0x0d, 0x0a, 0x09, 0x43, 0x4f, 0x4e, 0x54, 0x41, 0x49, 0x4e, 0x45, 0x52, 0x10,
	0x02, 0x22, 0x62, 0x0a, 0x09, 0x41, 0x73, 0x73, 0x65, 0x74, 0x4d, 0x6f, 0x64, 0x65, 0x12, 0x07,
	0x0a, 0x03, 0x54, 0x41, 0x50, 0x10, 0x00, 0x12, 0x0a, 0x0a, 0x06, 0x49, 0x4e, 0x4c, 0x49, 0x4e,
	0x45, 0x10, 0x01, 0x12, 0x1f, 0x0a, 0x1b, 0x54, 0x52, 0x41, 0x4e, 0x53, 0x49, 0x54, 0x49, 0x4f,
	0x4e, 0x49, 0x4e, 0x47, 0x5f, 0x54, 0x41, 0x50, 0x5f, 0x54, 0x4f, 0x5f, 0x49, 0x4e, 0x4c, 0x49,
	0x4e, 0x45, 0x10, 0x02, 0x12, 0x1f, 0x0a, 0x1b, 0x54, 0x52, 0x41, 0x4e, 0x53, 0x49, 0x54, 0x49,
	0x4f, 0x4e, 0x49, 0x4e, 0x47, 0x5f, 0x49, 0x4e, 0x4c, 0x49, 0x4e, 0x45, 0x5f, 0x54, 0x4f, 0x5f,
	0x54, 0x41, 0x50, 0x10, 0x03, 0x42, 0x0e, 0x0a, 0x0c, 0x63, 0x61, 0x70, 0x61, 0x62, 0x69, 0x6c,
	0x69, 0x74, 0x69, 0x65, 0x73, 0x22, 0xd4, 0x01, 0x0a, 0x0d, 0x56, 0x75, 0x6c, 0x6e, 0x65, 0x72,
	0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x12, 0x21, 0x0a, 0x0c, 0x70, 0x61, 0x63, 0x6b, 0x61,
	0x67, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70,
	0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x15, 0x0a, 0x06, 0x63, 0x76,
	0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x05, 0x63, 0x76, 0x65, 0x49,
	0x64, 0x12, 0x46, 0x0a, 0x08, 0x73, 0x65, 0x76, 0x65, 0x72, 0x69, 0x74, 0x79, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x2a, 0x2e, 0x61, 0x72, 0x61, 0x61, 0x6c, 0x69, 0x5f, 0x61, 0x70, 0x69,
	0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x56, 0x75, 0x6c, 0x6e, 0x65, 0x72, 0x61,
	0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x2e, 0x53, 0x65, 0x76, 0x65, 0x72, 0x69, 0x74, 0x79, 0x52,
	0x08, 0x73, 0x65, 0x76, 0x65, 0x72, 0x69, 0x74, 0x79, 0x22, 0x41, 0x0a, 0x08, 0x53, 0x65, 0x76,
	0x65, 0x72, 0x69, 0x74, 0x79, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12,
	0x07, 0x0a, 0x03, 0x4c, 0x4f, 0x57, 0x10, 0x01, 0x12, 0x0a, 0x0a, 0x06, 0x4d, 0x45, 0x44, 0x49,
	0x55, 0x4d, 0x10, 0x02, 0x12, 0x08, 0x0a, 0x04, 0x48, 0x49, 0x47, 0x48, 0x10, 0x03, 0x12, 0x0c,
	0x0a, 0x08, 0x43, 0x52, 0x49, 0x54, 0x49, 0x43, 0x41, 0x4c, 0x10, 0x04, 0x22, 0xb0, 0x03, 0x0a,
	0x0b, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x1f, 0x0a, 0x0b,
	0x6f, 0x70, 0x65, 0x6e, 0x5f, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x0a, 0x6f, 0x70, 0x65, 0x6e, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x73, 0x12, 0x23, 0x0a,
	0x0d, 0x63, 0x6c, 0x6f, 0x73, 0x65, 0x64, 0x5f, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x73, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x63, 0x6c, 0x6f, 0x73, 0x65, 0x64, 0x41, 0x6c, 0x65, 0x72,
	0x74, 0x73, 0x12, 0x29, 0x0a, 0x10, 0x70, 0x65, 0x72, 0x69, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x5f,
	0x65, 0x67, 0x72, 0x65, 0x73, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0f, 0x70, 0x65,
	0x72, 0x69, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x45, 0x67, 0x72, 0x65, 0x73, 0x73, 0x12, 0x2b, 0x0a,
	0x11, 0x70, 0x65, 0x72, 0x69, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x5f, 0x69, 0x6e, 0x67, 0x72, 0x65,
	0x73, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x10, 0x70, 0x65, 0x72, 0x69, 0x6d, 0x65,
	0x74, 0x65, 0x72, 0x49, 0x6e, 0x67, 0x72, 0x65, 0x73, 0x73, 0x12, 0x33, 0x0a, 0x16, 0x68, 0x6f,
	0x6d, 0x65, 0x5f, 0x6e, 0x6f, 0x6e, 0x5f, 0x61, 0x72, 0x61, 0x61, 0x6c, 0x69, 0x5f, 0x65, 0x67,
	0x72, 0x65, 0x73, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x13, 0x68, 0x6f, 0x6d, 0x65,
	0x4e, 0x6f, 0x6e, 0x41, 0x72, 0x61, 0x61, 0x6c, 0x69, 0x45, 0x67, 0x72, 0x65, 0x73, 0x73, 0x12,
	0x35, 0x0a, 0x17, 0x68, 0x6f, 0x6d, 0x65, 0x5f, 0x6e, 0x6f, 0x6e, 0x5f, 0x61, 0x72, 0x61, 0x61,
	0x6c, 0x69, 0x5f, 0x69, 0x6e, 0x67, 0x72, 0x65, 0x73, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x14, 0x68, 0x6f, 0x6d, 0x65, 0x4e, 0x6f, 0x6e, 0x41, 0x72, 0x61, 0x61, 0x6c, 0x69, 0x49,
	0x6e, 0x67, 0x72, 0x65, 0x73, 0x73, 0x12, 0x28, 0x0a, 0x10, 0x61, 0x72, 0x61, 0x61, 0x6c, 0x69,
	0x5f, 0x74, 0x6f, 0x5f, 0x61, 0x72, 0x61, 0x61, 0x6c, 0x69, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x0e, 0x61, 0x72, 0x61, 0x61, 0x6c, 0x69, 0x54, 0x6f, 0x41, 0x72, 0x61, 0x61, 0x6c, 0x69,
	0x12, 0x26, 0x0a, 0x0f, 0x6c, 0x69, 0x73, 0x74, 0x5f, 0x61, 0x6c, 0x6c, 0x5f, 0x61, 0x6c, 0x65,
	0x72, 0x74, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0d, 0x6c, 0x69, 0x73, 0x74, 0x41,
	0x6c, 0x6c, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x73, 0x12, 0x31, 0x0a, 0x04, 0x74, 0x69, 0x6d, 0x65,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x61, 0x72, 0x61, 0x61, 0x6c, 0x69, 0x5f,
	0x61, 0x70, 0x69, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x54, 0x69, 0x6d, 0x65,
	0x53, 0x6c, 0x69, 0x63, 0x65, 0x52, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x7a,
	0x6f, 0x6e, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x7a, 0x6f, 0x6e, 0x65, 0x22,
	0xb9, 0x01, 0x0a, 0x11, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x32, 0x0a, 0x06, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x61, 0x72, 0x61, 0x61, 0x6c, 0x69, 0x5f, 0x61,
	0x70, 0x69, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x54, 0x65, 0x6e, 0x61, 0x6e,
	0x74, 0x52, 0x06, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x12, 0x37, 0x0a, 0x06, 0x66, 0x69, 0x6c,
	0x74, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x61, 0x72, 0x61, 0x61,
	0x6c, 0x69, 0x5f, 0x61, 0x70, 0x69, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x41,
	0x6c, 0x65, 0x72, 0x74, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x52, 0x06, 0x66, 0x69, 0x6c, 0x74,
	0x65, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x70, 0x61, 0x67, 0x69,
	0x6e, 0x67, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x70, 0x61, 0x67, 0x69, 0x6e, 0x67, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0xaa, 0x01, 0x0a, 0x12,
	0x4c, 0x69, 0x73, 0x74, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x41, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x61, 0x72, 0x61, 0x61, 0x6c, 0x69, 0x5f, 0x61, 0x70,
	0x69, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x41, 0x72, 0x61, 0x61, 0x6c, 0x69,
	0x41, 0x50, 0x49, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x08, 0x72, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2e, 0x0a, 0x05, 0x6c, 0x69, 0x6e, 0x6b, 0x73, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x61, 0x72, 0x61, 0x61, 0x6c, 0x69, 0x5f, 0x61, 0x70,
	0x69, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x4c, 0x69, 0x6e, 0x6b, 0x52, 0x05,
	0x6c, 0x69, 0x6e, 0x6b, 0x73, 0x12, 0x21, 0x0a, 0x0c, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x67, 0x5f,
	0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x61, 0x67,
	0x69, 0x6e, 0x67, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0x92, 0x02, 0x0a, 0x0e, 0x41, 0x72, 0x61,
	0x61, 0x6c, 0x69, 0x45, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x7a,
	0x6f, 0x6e, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x7a, 0x6f, 0x6e, 0x65, 0x12,
	0x10, 0x0a, 0x03, 0x61, 0x70, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x61, 0x70,
	0x70, 0x12, 0x21, 0x0a, 0x0c, 0x75, 0x6e, 0x6d, 0x61, 0x70, 0x70, 0x65, 0x64, 0x5f, 0x61, 0x70,
	0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x75, 0x6e, 0x6d, 0x61, 0x70, 0x70, 0x65,
	0x64, 0x41, 0x70, 0x70, 0x12, 0x1c, 0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61,
	0x63, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x70, 0x6f, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x70, 0x6f, 0x64, 0x12, 0x25, 0x0a, 0x0e, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65,
	0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x63, 0x6f,
	0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x70,
	0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x70, 0x72,
	0x6f, 0x63, 0x65, 0x73, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x62, 0x69, 0x6e, 0x61, 0x72, 0x79, 0x5f,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x62, 0x69, 0x6e, 0x61,
	0x72, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74,
	0x5f, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d,
	0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x22, 0x3b, 0x0a,
	0x06, 0x53, 0x75, 0x62, 0x6e, 0x65, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x75, 0x62, 0x6e, 0x65,
	0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x75, 0x62, 0x6e, 0x65, 0x74, 0x12,
	0x19, 0x0a, 0x08, 0x6e, 0x65, 0x74, 0x5f, 0x6d, 0x61, 0x73, 0x6b, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x07, 0x6e, 0x65, 0x74, 0x4d, 0x61, 0x73, 0x6b, 0x22, 0x4d, 0x0a, 0x17, 0x4e, 0x6f,
	0x6e, 0x41, 0x72, 0x61, 0x61, 0x6c, 0x69, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x45, 0x6e, 0x64,
	0x70, 0x6f, 0x69, 0x6e, 0x74, 0x12, 0x32, 0x0a, 0x06, 0x73, 0x75, 0x62, 0x6e, 0x65, 0x74, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x61, 0x72, 0x61, 0x61, 0x6c, 0x69, 0x5f, 0x61,
	0x70, 0x69, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x53, 0x75, 0x62, 0x6e, 0x65,
	0x74, 0x52, 0x06, 0x73, 0x75, 0x62, 0x6e, 0x65, 0x74, 0x22, 0x9e, 0x01, 0x0a, 0x17, 0x4e, 0x6f,
	0x6e, 0x41, 0x72, 0x61, 0x61, 0x6c, 0x69, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x45, 0x6e, 0x64,
	0x70, 0x6f, 0x69, 0x6e, 0x74, 0x12, 0x21, 0x0a, 0x0b, 0x64, 0x6e, 0x73, 0x5f, 0x70, 0x61, 0x74,
	0x74, 0x65, 0x72, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x0a, 0x64, 0x6e,
	0x73, 0x50, 0x61, 0x74, 0x74, 0x65, 0x72, 0x6e, 0x12, 0x34, 0x0a, 0x06, 0x73, 0x75, 0x62, 0x6e,
	0x65, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x61, 0x72, 0x61, 0x61, 0x6c,
	0x69, 0x5f, 0x61, 0x70, 0x69, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x53, 0x75,
	0x62, 0x6e, 0x65, 0x74, 0x48, 0x00, 0x52, 0x06, 0x73, 0x75, 0x62, 0x6e, 0x65, 0x74, 0x12, 0x19,
	0x0a, 0x08, 0x64, 0x73, 0x74, 0x5f, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x07, 0x64, 0x73, 0x74, 0x50, 0x6f, 0x72, 0x74, 0x42, 0x0f, 0x0a, 0x0d, 0x64, 0x6e, 0x73,
	0x5f, 0x6f, 0x72, 0x5f, 0x73, 0x75, 0x62, 0x6e, 0x65, 0x74, 0x22, 0xe2, 0x02, 0x0a, 0x11, 0x4e,
	0x6f, 0x6e, 0x41, 0x72, 0x61, 0x61, 0x6c, 0x69, 0x45, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74,
	0x12, 0x45, 0x0a, 0x06, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x2b, 0x2e, 0x61, 0x72, 0x61, 0x61, 0x6c, 0x69, 0x5f, 0x61, 0x70, 0x69, 0x5f, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x4e, 0x6f, 0x6e, 0x41, 0x72, 0x61, 0x61, 0x6c, 0x69, 0x43,
	0x6c, 0x69, 0x65, 0x6e, 0x74, 0x45, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x48, 0x00, 0x52,
	0x06, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x12, 0x45, 0x0a, 0x06, 0x73, 0x65, 0x72, 0x76, 0x65,
	0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x61, 0x72, 0x61, 0x61, 0x6c, 0x69,
	0x5f, 0x61, 0x70, 0x69, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x4e, 0x6f, 0x6e,
	0x41, 0x72, 0x61, 0x61, 0x6c, 0x69, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x45, 0x6e, 0x64, 0x70,
	0x6f, 0x69, 0x6e, 0x74, 0x48, 0x00, 0x52, 0x06, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x12, 0x5a,
	0x0a, 0x0e, 0x65, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x33, 0x2e, 0x61, 0x72, 0x61, 0x61, 0x6c, 0x69, 0x5f,
	0x61, 0x70, 0x69, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x4e, 0x6f, 0x6e, 0x41,
	0x72, 0x61, 0x61, 0x6c, 0x69, 0x45, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x2e, 0x45, 0x6e,
	0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x0d, 0x65, 0x6e, 0x64,
	0x70, 0x6f, 0x69, 0x6e, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x22, 0x0a, 0x0c, 0x6f, 0x72,
	0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0c, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x37,
	0x0a, 0x0d, 0x45, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x12,
	0x11, 0x0a, 0x0d, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x5f, 0x47, 0x52, 0x4f, 0x55, 0x50,
	0x10, 0x00, 0x12, 0x09, 0x0a, 0x05, 0x57, 0x4f, 0x52, 0x4c, 0x44, 0x10, 0x01, 0x12, 0x08, 0x0a,
	0x04, 0x48, 0x4f, 0x4d, 0x45, 0x10, 0x02, 0x42, 0x06, 0x0a, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x22,
	0x98, 0x01, 0x0a, 0x08, 0x45, 0x6e, 0x64, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x12, 0x3c, 0x0a, 0x06,
	0x61, 0x72, 0x61, 0x61, 0x6c, 0x69, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x61,
	0x72, 0x61, 0x61, 0x6c, 0x69, 0x5f, 0x61, 0x70, 0x69, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2e, 0x41, 0x72, 0x61, 0x61, 0x6c, 0x69, 0x45, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74,
	0x48, 0x00, 0x52, 0x06, 0x61, 0x72, 0x61, 0x61, 0x6c, 0x69, 0x12, 0x46, 0x0a, 0x0a, 0x6e, 0x6f,
	0x6e, 0x5f, 0x61, 0x72, 0x61, 0x61, 0x6c, 0x69, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25,
	0x2e, 0x61, 0x72, 0x61, 0x61, 0x6c, 0x69, 0x5f, 0x61, 0x70, 0x69, 0x5f, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x4e, 0x6f, 0x6e, 0x41, 0x72, 0x61, 0x61, 0x6c, 0x69, 0x45, 0x6e, 0x64,
	0x70, 0x6f, 0x69, 0x6e, 0x74, 0x48, 0x00, 0x52, 0x09, 0x6e, 0x6f, 0x6e, 0x41, 0x72, 0x61, 0x61,
	0x6c, 0x69, 0x42, 0x06, 0x0a, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x22, 0x89, 0x02, 0x0a, 0x09, 0x41,
	0x6c, 0x65, 0x72, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x38, 0x0a, 0x18, 0x63, 0x6f, 0x6d, 0x6d,
	0x75, 0x6e, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x5f,
	0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x16, 0x63, 0x6f, 0x6d, 0x6d,
	0x75, 0x6e, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x2c, 0x0a, 0x12, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x5f, 0x61, 0x6c,
	0x65, 0x72, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10,
	0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x22, 0x0a, 0x0d, 0x72, 0x65, 0x5f, 0x6f, 0x70, 0x65, 0x6e, 0x5f, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x72, 0x65, 0x4f, 0x70, 0x65, 0x6e, 0x43,
	0x6f, 0x75, 0x6e, 0x74, 0x12, 0x3c, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x24, 0x2e, 0x61, 0x72, 0x61, 0x61, 0x6c, 0x69, 0x5f, 0x61, 0x70,
	0x69, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x49,
	0x6e, 0x66, 0x6f, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x22, 0x32, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x12, 0x0a, 0x0e,
	0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x10, 0x00,
	0x12, 0x08, 0x0a, 0x04, 0x4f, 0x50, 0x45, 0x4e, 0x10, 0x01, 0x12, 0x0a, 0x0a, 0x06, 0x43, 0x4c,
	0x4f, 0x53, 0x45, 0x44, 0x10, 0x02, 0x22, 0x51, 0x0a, 0x05, 0x50, 0x6f, 0x72, 0x74, 0x73, 0x12,
	0x21, 0x0a, 0x0c, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x5f, 0x70, 0x6f, 0x72, 0x74, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x0b, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x50, 0x6f, 0x72,
	0x74, 0x73, 0x12, 0x25, 0x0a, 0x0e, 0x69, 0x6e, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x5f, 0x70,
	0x6f, 0x72, 0x74, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x0d, 0x69, 0x6e, 0x61, 0x63,
	0x74, 0x69, 0x76, 0x65, 0x50, 0x6f, 0x72, 0x74, 0x73, 0x22, 0x8d, 0x05, 0x0a, 0x04, 0x4c, 0x69,
	0x6e, 0x6b, 0x12, 0x34, 0x0a, 0x06, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x61, 0x72, 0x61, 0x61, 0x6c, 0x69, 0x5f, 0x61, 0x70, 0x69, 0x5f,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x45, 0x6e, 0x64, 0x50, 0x6f, 0x69, 0x6e, 0x74,
	0x52, 0x06, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x12, 0x34, 0x0a, 0x06, 0x73, 0x65, 0x72, 0x76,
	0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x61, 0x72, 0x61, 0x61, 0x6c,
	0x69, 0x5f, 0x61, 0x70, 0x69, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x45, 0x6e,
	0x64, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x06, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x12, 0x44,
	0x0a, 0x09, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x26, 0x2e, 0x61, 0x72, 0x61, 0x61, 0x6c, 0x69, 0x5f, 0x61, 0x70, 0x69, 0x5f, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x4c, 0x69, 0x6e, 0x6b, 0x2e, 0x4c, 0x69, 0x6e, 0x6b,
	0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x09, 0x64, 0x69, 0x72, 0x65, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x38, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x1b,
	0x0a, 0x09, 0x75, 0x6e, 0x69, 0x71, 0x75, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x75, 0x6e, 0x69, 0x71, 0x75, 0x65, 0x49, 0x64, 0x12, 0x33, 0x0a, 0x05, 0x73,
	0x74, 0x61, 0x74, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1d, 0x2e, 0x61, 0x72, 0x61,
	0x61, 0x6c, 0x69, 0x5f, 0x61, 0x70, 0x69, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x4c, 0x69, 0x6e, 0x6b, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65,
	0x12, 0x2f, 0x0a, 0x05, 0x70, 0x6f, 0x72, 0x74, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x19, 0x2e, 0x61, 0x72, 0x61, 0x61, 0x6c, 0x69, 0x5f, 0x61, 0x70, 0x69, 0x5f, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x50, 0x6f, 0x72, 0x74, 0x73, 0x52, 0x05, 0x70, 0x6f, 0x72, 0x74,
	0x73, 0x12, 0x3e, 0x0a, 0x0a, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x61, 0x72, 0x61, 0x61, 0x6c, 0x69, 0x5f, 0x61,
	0x70, 0x69, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x41, 0x6c, 0x65, 0x72, 0x74,
	0x49, 0x6e, 0x66, 0x6f, 0x48, 0x00, 0x52, 0x09, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x49, 0x6e, 0x66,
	0x6f, 0x12, 0x41, 0x0a, 0x0b, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x5f, 0x69, 0x6e, 0x66, 0x6f,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x61, 0x72, 0x61, 0x61, 0x6c, 0x69, 0x5f,
	0x61, 0x70, 0x69, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x50, 0x6f, 0x6c, 0x69,
	0x63, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x48, 0x00, 0x52, 0x0a, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79,
	0x49, 0x6e, 0x66, 0x6f, 0x22, 0x8a, 0x01, 0x0a, 0x0d, 0x4c, 0x69, 0x6e, 0x6b, 0x44, 0x69, 0x72,
	0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x15, 0x0a, 0x11, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57,
	0x4e, 0x5f, 0x44, 0x49, 0x52, 0x45, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x10, 0x00, 0x12, 0x16, 0x0a,
	0x12, 0x4e, 0x4f, 0x4e, 0x5f, 0x41, 0x52, 0x41, 0x41, 0x4c, 0x49, 0x5f, 0x49, 0x4e, 0x47, 0x52,
	0x45, 0x53, 0x53, 0x10, 0x01, 0x12, 0x12, 0x0a, 0x0e, 0x41, 0x52, 0x41, 0x41, 0x4c, 0x49, 0x5f,
	0x49, 0x4e, 0x47, 0x52, 0x45, 0x53, 0x53, 0x10, 0x02, 0x12, 0x15, 0x0a, 0x11, 0x4e, 0x4f, 0x4e,
	0x5f, 0x41, 0x52, 0x41, 0x41, 0x4c, 0x49, 0x5f, 0x45, 0x47, 0x52, 0x45, 0x53, 0x53, 0x10, 0x03,
	0x12, 0x11, 0x0a, 0x0d, 0x41, 0x52, 0x41, 0x41, 0x4c, 0x49, 0x5f, 0x45, 0x47, 0x52, 0x45, 0x53,
	0x53, 0x10, 0x04, 0x12, 0x0c, 0x0a, 0x08, 0x49, 0x4e, 0x54, 0x45, 0x52, 0x4e, 0x41, 0x4c, 0x10,
	0x05, 0x42, 0x06, 0x0a, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x22, 0x84, 0x01, 0x0a, 0x0a, 0x50, 0x6f,
	0x6c, 0x69, 0x63, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x23, 0x0a, 0x0d, 0x74, 0x65, 0x6d, 0x70,
	0x6c, 0x61, 0x74, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0c, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x23, 0x0a,
	0x0d, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x55, 0x73,
	0x65, 0x72, 0x12, 0x2c, 0x0a, 0x12, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x5f, 0x73, 0x6b, 0x69,
	0x70, 0x5f, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10,
	0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x53, 0x6b, 0x69, 0x70, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e,
	0x22, 0xb9, 0x01, 0x0a, 0x10, 0x4c, 0x69, 0x73, 0x74, 0x4c, 0x69, 0x6e, 0x6b, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x32, 0x0a, 0x06, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x61, 0x72, 0x61, 0x61, 0x6c, 0x69, 0x5f, 0x61,
	0x70, 0x69, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x54, 0x65, 0x6e, 0x61, 0x6e,
	0x74, 0x52, 0x06, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x7a, 0x6f, 0x6e,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x7a, 0x6f, 0x6e, 0x65, 0x12, 0x10, 0x0a,
	0x03, 0x61, 0x70, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x61, 0x70, 0x70, 0x12,
	0x18, 0x0a, 0x07, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x31, 0x0a, 0x04, 0x74, 0x69, 0x6d,
	0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x61, 0x72, 0x61, 0x61, 0x6c, 0x69,
	0x5f, 0x61, 0x70, 0x69, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x54, 0x69, 0x6d,
	0x65, 0x53, 0x6c, 0x69, 0x63, 0x65, 0x52, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x22, 0x86, 0x01, 0x0a,
	0x11, 0x4c, 0x69, 0x73, 0x74, 0x4c, 0x69, 0x6e, 0x6b, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x41, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x61, 0x72, 0x61, 0x61, 0x6c, 0x69, 0x5f, 0x61, 0x70,
	0x69, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x41, 0x72, 0x61, 0x61, 0x6c, 0x69,
	0x41, 0x50, 0x49, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x08, 0x72, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2e, 0x0a, 0x05, 0x6c, 0x69, 0x6e, 0x6b, 0x73, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x61, 0x72, 0x61, 0x61, 0x6c, 0x69, 0x5f, 0x61, 0x70,
	0x69, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x4c, 0x69, 0x6e, 0x6b, 0x52, 0x05,
	0x6c, 0x69, 0x6e, 0x6b, 0x73, 0x22, 0x83, 0x03, 0x0a, 0x04, 0x4c, 0x65, 0x6e, 0x73, 0x12, 0x35,
	0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x21, 0x2e, 0x61,
	0x72, 0x61, 0x61, 0x6c, 0x69, 0x5f, 0x61, 0x70, 0x69, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2e, 0x4c, 0x65, 0x6e, 0x73, 0x2e, 0x4c, 0x65, 0x6e, 0x73, 0x54, 0x79, 0x70, 0x65, 0x52,
	0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x7a, 0x6f, 0x6e, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x7a, 0x6f, 0x6e, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x61, 0x70, 0x70,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x61, 0x70, 0x70, 0x12, 0x10, 0x0a, 0x03, 0x70,
	0x6f, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x70, 0x6f, 0x64, 0x12, 0x25, 0x0a,
	0x0e, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x12, 0x25,
	0x0a, 0x0e, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x50, 0x72,
	0x6f, 0x63, 0x65, 0x73, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x62, 0x69, 0x6e, 0x61, 0x72, 0x79, 0x5f,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x62, 0x69, 0x6e, 0x61,
	0x72, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x22, 0x69, 0x0a, 0x08, 0x4c, 0x65, 0x6e, 0x73, 0x54, 0x79, 0x70, 0x65, 0x12, 0x10, 0x0a, 0x0c,
	0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x5f, 0x4c, 0x45, 0x4e, 0x53, 0x10, 0x00, 0x12, 0x0c,
	0x0a, 0x08, 0x5a, 0x4f, 0x4e, 0x45, 0x5f, 0x41, 0x50, 0x50, 0x10, 0x01, 0x12, 0x0b, 0x0a, 0x07,
	0x53, 0x45, 0x52, 0x56, 0x49, 0x43, 0x45, 0x10, 0x02, 0x12, 0x08, 0x0a, 0x04, 0x5a, 0x4f, 0x4e,
	0x45, 0x10, 0x03, 0x12, 0x0b, 0x0a, 0x07, 0x50, 0x52, 0x4f, 0x43, 0x45, 0x53, 0x53, 0x10, 0x04,
	0x12, 0x0d, 0x0a, 0x09, 0x43, 0x4f, 0x4e, 0x54, 0x41, 0x49, 0x4e, 0x45, 0x52, 0x10, 0x05, 0x12,
	0x0a, 0x0a, 0x06, 0x54, 0x45, 0x4e, 0x41, 0x4e, 0x54, 0x10, 0x06, 0x22, 0x77, 0x0a, 0x07, 0x49,
	0x6e, 0x73, 0x69, 0x67, 0x68, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x12, 0x10,
	0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c,
	0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x2c, 0x0a, 0x04, 0x6c, 0x65, 0x6e, 0x73, 0x18, 0x04,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x61, 0x72, 0x61, 0x61, 0x6c, 0x69, 0x5f, 0x61, 0x70,
	0x69, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x4c, 0x65, 0x6e, 0x73, 0x52, 0x04,
	0x6c, 0x65, 0x6e, 0x73, 0x22, 0x5d, 0x0a, 0x13, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x6e, 0x73, 0x69,
	0x67, 0x68, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x32, 0x0a, 0x06, 0x74,
	0x65, 0x6e, 0x61, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x61, 0x72,
	0x61, 0x61, 0x6c, 0x69, 0x5f, 0x61, 0x70, 0x69, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x54, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x52, 0x06, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x12,
	0x12, 0x0a, 0x04, 0x7a, 0x6f, 0x6e, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x7a,
	0x6f, 0x6e, 0x65, 0x22, 0x92, 0x01, 0x0a, 0x14, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x6e, 0x73, 0x69,
	0x67, 0x68, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x41, 0x0a, 0x08,
	0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25,
	0x2e, 0x61, 0x72, 0x61, 0x61, 0x6c, 0x69, 0x5f, 0x61, 0x70, 0x69, 0x5f, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x41, 0x72, 0x61, 0x61, 0x6c, 0x69, 0x41, 0x50, 0x49, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x37, 0x0a, 0x08, 0x69, 0x6e, 0x73, 0x69, 0x67, 0x68, 0x74, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x1b, 0x2e, 0x61, 0x72, 0x61, 0x61, 0x6c, 0x69, 0x5f, 0x61, 0x70, 0x69, 0x5f, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x49, 0x6e, 0x73, 0x69, 0x67, 0x68, 0x74, 0x52, 0x08,
	0x69, 0x6e, 0x73, 0x69, 0x67, 0x68, 0x74, 0x73, 0x22, 0xa1, 0x02, 0x0a, 0x18, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x46, 0x6f, 0x72, 0x74, 0x69, 0x66, 0x79, 0x59, 0x61, 0x6d, 0x6c, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x32, 0x0a, 0x06, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x61, 0x72, 0x61, 0x61, 0x6c, 0x69, 0x5f, 0x61,
	0x70, 0x69, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x54, 0x65, 0x6e, 0x61, 0x6e,
	0x74, 0x52, 0x06, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x12, 0x23, 0x0a, 0x0d, 0x77, 0x6f, 0x72,
	0x6b, 0x6c, 0x6f, 0x61, 0x64, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0c, 0x77, 0x6f, 0x72, 0x6b, 0x6c, 0x6f, 0x61, 0x64, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x10,
	0x0a, 0x03, 0x66, 0x6f, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x66, 0x6f, 0x67,
	0x12, 0x27, 0x0a, 0x0f, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x75, 0x70, 0x67, 0x72,
	0x61, 0x64, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0e, 0x64, 0x69, 0x73, 0x61, 0x62,
	0x6c, 0x65, 0x55, 0x70, 0x67, 0x72, 0x61, 0x64, 0x65, 0x12, 0x2f, 0x0a, 0x13, 0x64, 0x69, 0x73,
	0x61, 0x62, 0x6c, 0x65, 0x5f, 0x65, 0x6e, 0x66, 0x6f, 0x72, 0x63, 0x65, 0x6d, 0x65, 0x6e, 0x74,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x12, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x45,
	0x6e, 0x66, 0x6f, 0x72, 0x63, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x40, 0x0a, 0x09, 0x79, 0x61,
	0x6d, 0x6c, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x23, 0x2e,
	0x61, 0x72, 0x61, 0x61, 0x6c, 0x69, 0x5f, 0x61, 0x70, 0x69, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x46, 0x6f, 0x72, 0x74, 0x69, 0x66, 0x79, 0x59, 0x61, 0x6d, 0x6c, 0x54, 0x79,
	0x70, 0x65, 0x52, 0x08, 0x79, 0x61, 0x6d, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x22, 0x83, 0x01, 0x0a,
	0x19, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x46, 0x6f, 0x72, 0x74, 0x69, 0x66, 0x79, 0x59, 0x61,
	0x6d, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x41, 0x0a, 0x08, 0x72, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x61,
	0x72, 0x61, 0x61, 0x6c, 0x69, 0x5f, 0x61, 0x70, 0x69, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2e, 0x41, 0x72, 0x61, 0x61, 0x6c, 0x69, 0x41, 0x50, 0x49, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x52, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x23, 0x0a,
	0x0d, 0x77, 0x6f, 0x72, 0x6b, 0x6c, 0x6f, 0x61, 0x64, 0x5f, 0x79, 0x61, 0x6d, 0x6c, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x77, 0x6f, 0x72, 0x6b, 0x6c, 0x6f, 0x61, 0x64, 0x59, 0x61,
	0x6d, 0x6c, 0x22, 0x8e, 0x01, 0x0a, 0x16, 0x4c, 0x69, 0x73, 0x74, 0x46, 0x6f, 0x72, 0x74, 0x69,
	0x66, 0x79, 0x59, 0x61, 0x6d, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x32, 0x0a,
	0x06, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x61, 0x72, 0x61, 0x61, 0x6c, 0x69, 0x5f, 0x61, 0x70, 0x69, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x54, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x52, 0x06, 0x74, 0x65, 0x6e, 0x61, 0x6e,
	0x74, 0x12, 0x40, 0x0a, 0x09, 0x79, 0x61, 0x6d, 0x6c, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x23, 0x2e, 0x61, 0x72, 0x61, 0x61, 0x6c, 0x69, 0x5f, 0x61, 0x70,
	0x69, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x46, 0x6f, 0x72, 0x74, 0x69, 0x66,
	0x79, 0x59, 0x61, 0x6d, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x52, 0x08, 0x79, 0x61, 0x6d, 0x6c, 0x54,
	0x79, 0x70, 0x65, 0x22, 0x7a, 0x0a, 0x17, 0x4c, 0x69, 0x73, 0x74, 0x46, 0x6f, 0x72, 0x74, 0x69,
	0x66, 0x79, 0x59, 0x61, 0x6d, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x41,
	0x0a, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x25, 0x2e, 0x61, 0x72, 0x61, 0x61, 0x6c, 0x69, 0x5f, 0x61, 0x70, 0x69, 0x5f, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x41, 0x72, 0x61, 0x61, 0x6c, 0x69, 0x41, 0x50, 0x49, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x1c, 0x0a, 0x09, 0x77, 0x6f, 0x72, 0x6b, 0x6c, 0x6f, 0x61, 0x64, 0x73, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x09, 0x52, 0x09, 0x77, 0x6f, 0x72, 0x6b, 0x6c, 0x6f, 0x61, 0x64, 0x73, 0x22,
	0x73, 0x0a, 0x18, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x46, 0x6f, 0x72, 0x74, 0x69, 0x66, 0x79,
	0x59, 0x61, 0x6d, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x32, 0x0a, 0x06, 0x74,
	0x65, 0x6e, 0x61, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x61, 0x72,
	0x61, 0x61, 0x6c, 0x69, 0x5f, 0x61, 0x70, 0x69, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x54, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x52, 0x06, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x12,
	0x23, 0x0a, 0x0d, 0x77, 0x6f, 0x72, 0x6b, 0x6c, 0x6f, 0x61, 0x64, 0x5f, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x77, 0x6f, 0x72, 0x6b, 0x6c, 0x6f, 0x61, 0x64,
	0x4e, 0x61, 0x6d, 0x65, 0x22, 0xb1, 0x01, 0x0a, 0x25, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x6f, 0x6c,
	0x69, 0x63, 0x79, 0x41, 0x6e, 0x64, 0x45, 0x6e, 0x66, 0x6f, 0x72, 0x63, 0x65, 0x6d, 0x65, 0x6e,
	0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x32,
	0x0a, 0x06, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x61, 0x72, 0x61, 0x61, 0x6c, 0x69, 0x5f, 0x61, 0x70, 0x69, 0x5f, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x54, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x52, 0x06, 0x74, 0x65, 0x6e, 0x61,
	0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x7a, 0x6f, 0x6e, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x7a, 0x6f, 0x6e, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x61, 0x70, 0x70, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x61, 0x70, 0x70, 0x12, 0x10, 0x0a, 0x03, 0x70, 0x6f, 0x64, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x70, 0x6f, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x6f,
	0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63,
	0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x22, 0x67, 0x0a, 0x26, 0x4c, 0x69, 0x73, 0x74,
	0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x41, 0x6e, 0x64, 0x45, 0x6e, 0x66, 0x6f, 0x72, 0x63, 0x65,
	0x6d, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x3d, 0x0a, 0x1b, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x5f, 0x61, 0x6e, 0x64,
	0x5f, 0x65, 0x6e, 0x66, 0x6f, 0x72, 0x63, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x79, 0x61, 0x6d,
	0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x18, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x41,
	0x6e, 0x64, 0x45, 0x6e, 0x66, 0x6f, 0x72, 0x63, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x59, 0x61, 0x6d,
	0x6c, 0x22, 0x9a, 0x02, 0x0a, 0x0d, 0x41, 0x72, 0x61, 0x61, 0x6c, 0x69, 0x46, 0x77, 0x4b, 0x6e,
	0x6f, 0x62, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6c, 0x6c, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6c, 0x6c, 0x12, 0x44, 0x0a,
	0x1e, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x5f,
	0x76, 0x75, 0x6c, 0x6e, 0x65, 0x72, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x69, 0x65, 0x73, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x1c, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x50, 0x72, 0x6f,
	0x63, 0x65, 0x73, 0x73, 0x56, 0x75, 0x6c, 0x6e, 0x65, 0x72, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74,
	0x69, 0x65, 0x73, 0x12, 0x48, 0x0a, 0x20, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x63, 0x6f,
	0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x5f, 0x76, 0x75, 0x6c, 0x6e, 0x65, 0x72, 0x61, 0x62,
	0x69, 0x6c, 0x69, 0x74, 0x69, 0x65, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x1e, 0x65,
	0x6e, 0x61, 0x62, 0x6c, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x56, 0x75,
	0x6c, 0x6e, 0x65, 0x72, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x69, 0x65, 0x73, 0x12, 0x2a, 0x0a,
	0x11, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x66, 0x6c, 0x6f, 0x77, 0x5f, 0x64, 0x65, 0x64,
	0x75, 0x70, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0f, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65,
	0x46, 0x6c, 0x6f, 0x77, 0x44, 0x65, 0x64, 0x75, 0x70, 0x12, 0x33, 0x0a, 0x16, 0x65, 0x6e, 0x61,
	0x62, 0x6c, 0x65, 0x5f, 0x66, 0x6c, 0x6f, 0x77, 0x5f, 0x72, 0x61, 0x74, 0x65, 0x5f, 0x6c, 0x69,
	0x6d, 0x69, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x13, 0x65, 0x6e, 0x61, 0x62, 0x6c,
	0x65, 0x46, 0x6c, 0x6f, 0x77, 0x52, 0x61, 0x74, 0x65, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x22, 0x4b,
	0x0a, 0x18, 0x47, 0x65, 0x74, 0x46, 0x69, 0x72, 0x65, 0x77, 0x61, 0x6c, 0x6c, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x74, 0x65,
	0x6e, 0x61, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74,
	0x65, 0x6e, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x7a, 0x6f, 0x6e, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x7a, 0x6f, 0x6e, 0x65, 0x22, 0x87, 0x01, 0x0a, 0x1b,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x46, 0x69, 0x72, 0x65, 0x77, 0x61, 0x6c, 0x6c, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x74,
	0x65, 0x6e, 0x61, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x7a, 0x6f, 0x6e, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x7a, 0x6f, 0x6e, 0x65, 0x12, 0x37, 0x0a, 0x05,
	0x6b, 0x6e, 0x6f, 0x62, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x61, 0x72,
	0x61, 0x61, 0x6c, 0x69, 0x5f, 0x61, 0x70, 0x69, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x41, 0x72, 0x61, 0x61, 0x6c, 0x69, 0x46, 0x77, 0x4b, 0x6e, 0x6f, 0x62, 0x73, 0x52, 0x05,
	0x6b, 0x6e, 0x6f, 0x62, 0x73, 0x22, 0x82, 0x01, 0x0a, 0x16, 0x46, 0x69, 0x72, 0x65, 0x77, 0x61,
	0x6c, 0x6c, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x1b, 0x0a, 0x09, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x12, 0x0a,
	0x04, 0x7a, 0x6f, 0x6e, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x7a, 0x6f, 0x6e,
	0x65, 0x12, 0x37, 0x0a, 0x05, 0x6b, 0x6e, 0x6f, 0x62, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x21, 0x2e, 0x61, 0x72, 0x61, 0x61, 0x6c, 0x69, 0x5f, 0x61, 0x70, 0x69, 0x5f, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x41, 0x72, 0x61, 0x61, 0x6c, 0x69, 0x46, 0x77, 0x4b, 0x6e,
	0x6f, 0x62, 0x73, 0x52, 0x05, 0x6b, 0x6e, 0x6f, 0x62, 0x73, 0x2a, 0x5a, 0x0a, 0x09, 0x4c, 0x69,
	0x6e, 0x6b, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x12, 0x0a, 0x0e, 0x42, 0x41, 0x53, 0x45, 0x4c,
	0x49, 0x4e, 0x45, 0x5f, 0x41, 0x4c, 0x45, 0x52, 0x54, 0x10, 0x00, 0x12, 0x12, 0x0a, 0x0e, 0x44,
	0x45, 0x46, 0x49, 0x4e, 0x45, 0x44, 0x5f, 0x50, 0x4f, 0x4c, 0x49, 0x43, 0x59, 0x10, 0x01, 0x12,
	0x12, 0x0a, 0x0e, 0x53, 0x4e, 0x4f, 0x4f, 0x5a, 0x45, 0x44, 0x5f, 0x50, 0x4f, 0x4c, 0x49, 0x43,
	0x59, 0x10, 0x02, 0x12, 0x11, 0x0a, 0x0d, 0x44, 0x45, 0x4e, 0x49, 0x45, 0x44, 0x5f, 0x50, 0x4f,
	0x4c, 0x49, 0x43, 0x59, 0x10, 0x03, 0x2a, 0x55, 0x0a, 0x0f, 0x46, 0x6f, 0x72, 0x74, 0x69, 0x66,
	0x79, 0x59, 0x61, 0x6d, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0b, 0x0a, 0x07, 0x55, 0x4e, 0x4b,
	0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x00, 0x12, 0x14, 0x0a, 0x10, 0x48, 0x45, 0x4c, 0x4d, 0x5f, 0x56,
	0x41, 0x4c, 0x55, 0x45, 0x53, 0x5f, 0x46, 0x49, 0x4c, 0x45, 0x10, 0x01, 0x12, 0x1f, 0x0a, 0x1b,
	0x48, 0x45, 0x4c, 0x4d, 0x5f, 0x43, 0x4f, 0x4e, 0x54, 0x52, 0x4f, 0x4c, 0x4c, 0x45, 0x52, 0x5f,
	0x56, 0x41, 0x4c, 0x55, 0x45, 0x53, 0x5f, 0x46, 0x49, 0x4c, 0x45, 0x10, 0x02, 0x32, 0xd9, 0x0b,
	0x0a, 0x09, 0x41, 0x72, 0x61, 0x61, 0x6c, 0x69, 0x41, 0x50, 0x49, 0x12, 0x63, 0x0a, 0x0c, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x12, 0x27, 0x2e, 0x61, 0x72,
	0x61, 0x61, 0x6c, 0x69, 0x5f, 0x61, 0x70, 0x69, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x28, 0x2e, 0x61, 0x72, 0x61, 0x61, 0x6c, 0x69, 0x5f, 0x61, 0x70,
	0x69, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x54, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x12, 0x60, 0x0a, 0x0c, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x54, 0x65, 0x6e, 0x61, 0x6e, 0x74,
	0x12, 0x27, 0x2e, 0x61, 0x72, 0x61, 0x61, 0x6c, 0x69, 0x5f, 0x61, 0x70, 0x69, 0x5f, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x54, 0x65, 0x6e, 0x61,
	0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x25, 0x2e, 0x61, 0x72, 0x61, 0x61,
	0x6c, 0x69, 0x5f, 0x61, 0x70, 0x69, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x41,
	0x72, 0x61, 0x61, 0x6c, 0x69, 0x41, 0x50, 0x49, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x12, 0x56, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x55, 0x73, 0x65, 0x72, 0x12, 0x22, 0x2e,
	0x61, 0x72, 0x61, 0x61, 0x6c, 0x69, 0x5f, 0x61, 0x70, 0x69, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x41, 0x64, 0x64, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x25, 0x2e, 0x61, 0x72, 0x61, 0x61, 0x6c, 0x69, 0x5f, 0x61, 0x70, 0x69, 0x5f, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x41, 0x72, 0x61, 0x61, 0x6c, 0x69, 0x41, 0x50, 0x49,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x5c, 0x0a, 0x0a, 0x64, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x12, 0x25, 0x2e, 0x61, 0x72, 0x61, 0x61, 0x6c,
	0x69, 0x5f, 0x61, 0x70, 0x69, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x25, 0x2e, 0x61, 0x72, 0x61, 0x61, 0x6c, 0x69, 0x5f, 0x61, 0x70, 0x69, 0x5f, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x41, 0x72, 0x61, 0x61, 0x6c, 0x69, 0x41, 0x50, 0x49, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x5d, 0x0a, 0x0a, 0x6c, 0x69, 0x73, 0x74,
	0x41, 0x73, 0x73, 0x65, 0x74, 0x73, 0x12, 0x25, 0x2e, 0x61, 0x72, 0x61, 0x61, 0x6c, 0x69, 0x5f,
	0x61, 0x70, 0x69, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x4c, 0x69, 0x73, 0x74,
	0x41, 0x73, 0x73, 0x65, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x26, 0x2e,
	0x61, 0x72, 0x61, 0x61, 0x6c, 0x69, 0x5f, 0x61, 0x70, 0x69, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x73, 0x73, 0x65, 0x74, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x5d, 0x0a, 0x0a, 0x6c, 0x69, 0x73, 0x74, 0x41,
	0x6c, 0x65, 0x72, 0x74, 0x73, 0x12, 0x25, 0x2e, 0x61, 0x72, 0x61, 0x61, 0x6c, 0x69, 0x5f, 0x61,
	0x70, 0x69, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x41,
	0x6c, 0x65, 0x72, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x26, 0x2e, 0x61,
	0x72, 0x61, 0x61, 0x6c, 0x69, 0x5f, 0x61, 0x70, 0x69, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x5a, 0x0a, 0x09, 0x6c, 0x69, 0x73, 0x74, 0x4c, 0x69,
	0x6e, 0x6b, 0x73, 0x12, 0x24, 0x2e, 0x61, 0x72, 0x61, 0x61, 0x6c, 0x69, 0x5f, 0x61, 0x70, 0x69,
	0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4c, 0x69, 0x6e,
	0x6b, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x25, 0x2e, 0x61, 0x72, 0x61, 0x61,
	0x6c, 0x69, 0x5f, 0x61, 0x70, 0x69, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x4c,
	0x69, 0x73, 0x74, 0x4c, 0x69, 0x6e, 0x6b, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x12, 0x63, 0x0a, 0x0c, 0x6c, 0x69, 0x73, 0x74, 0x49, 0x6e, 0x73, 0x69, 0x67, 0x68,
	0x74, 0x73, 0x12, 0x27, 0x2e, 0x61, 0x72, 0x61, 0x61, 0x6c, 0x69, 0x5f, 0x61, 0x70, 0x69, 0x5f,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x6e, 0x73, 0x69,
	0x67, 0x68, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x28, 0x2e, 0x61, 0x72,
	0x61, 0x61, 0x6c, 0x69, 0x5f, 0x61, 0x70, 0x69, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x6e, 0x73, 0x69, 0x67, 0x68, 0x74, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x72, 0x0a, 0x11, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x46, 0x6f, 0x72, 0x74, 0x69, 0x66, 0x79, 0x59, 0x61, 0x6d, 0x6c, 0x12, 0x2c, 0x2e, 0x61,
	0x72, 0x61, 0x61, 0x6c, 0x69, 0x5f, 0x61, 0x70, 0x69, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x46, 0x6f, 0x72, 0x74, 0x69, 0x66, 0x79, 0x59,
	0x61, 0x6d, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2d, 0x2e, 0x61, 0x72, 0x61,
	0x61, 0x6c, 0x69, 0x5f, 0x61, 0x70, 0x69, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x46, 0x6f, 0x72, 0x74, 0x69, 0x66, 0x79, 0x59, 0x61, 0x6d,
	0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x6c, 0x0a, 0x0f, 0x6c,
	0x69, 0x73, 0x74, 0x46, 0x6f, 0x72, 0x74, 0x69, 0x66, 0x79, 0x59, 0x61, 0x6d, 0x6c, 0x12, 0x2a,
	0x2e, 0x61, 0x72, 0x61, 0x61, 0x6c, 0x69, 0x5f, 0x61, 0x70, 0x69, 0x5f, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x46, 0x6f, 0x72, 0x74, 0x69, 0x66, 0x79, 0x59,
	0x61, 0x6d, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2b, 0x2e, 0x61, 0x72, 0x61,
	0x61, 0x6c, 0x69, 0x5f, 0x61, 0x70, 0x69, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x4c, 0x69, 0x73, 0x74, 0x46, 0x6f, 0x72, 0x74, 0x69, 0x66, 0x79, 0x59, 0x61, 0x6d, 0x6c, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x6a, 0x0a, 0x11, 0x64, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x46, 0x6f, 0x72, 0x74, 0x69, 0x66, 0x79, 0x59, 0x61, 0x6d, 0x6c, 0x12, 0x2c,
	0x2e, 0x61, 0x72, 0x61, 0x61, 0x6c, 0x69, 0x5f, 0x61, 0x70, 0x69, 0x5f, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x46, 0x6f, 0x72, 0x74, 0x69, 0x66,
	0x79, 0x59, 0x61, 0x6d, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x25, 0x2e, 0x61,
	0x72, 0x61, 0x61, 0x6c, 0x69, 0x5f, 0x61, 0x70, 0x69, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2e, 0x41, 0x72, 0x61, 0x61, 0x6c, 0x69, 0x41, 0x50, 0x49, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x99, 0x01, 0x0a, 0x1e, 0x6c, 0x69, 0x73, 0x74, 0x50, 0x6f,
	0x6c, 0x69, 0x63, 0x79, 0x41, 0x6e, 0x64, 0x45, 0x6e, 0x66, 0x6f, 0x72, 0x63, 0x65, 0x6d, 0x65,
	0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x39, 0x2e, 0x61, 0x72, 0x61, 0x61, 0x6c,
	0x69, 0x5f, 0x61, 0x70, 0x69, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x4c, 0x69,
	0x73, 0x74, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x41, 0x6e, 0x64, 0x45, 0x6e, 0x66, 0x6f, 0x72,
	0x63, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x3a, 0x2e, 0x61, 0x72, 0x61, 0x61, 0x6c, 0x69, 0x5f, 0x61, 0x70, 0x69,
	0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x6f, 0x6c,
	0x69, 0x63, 0x79, 0x41, 0x6e, 0x64, 0x45, 0x6e, 0x66, 0x6f, 0x72, 0x63, 0x65, 0x6d, 0x65, 0x6e,
	0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x12, 0x6f, 0x0a, 0x11, 0x67, 0x65, 0x74, 0x46, 0x69, 0x72, 0x65, 0x77, 0x61, 0x6c, 0x6c,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x2c, 0x2e, 0x61, 0x72, 0x61, 0x61, 0x6c, 0x69, 0x5f,
	0x61, 0x70, 0x69, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x46,
	0x69, 0x72, 0x65, 0x77, 0x61, 0x6c, 0x6c, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x2a, 0x2e, 0x61, 0x72, 0x61, 0x61, 0x6c, 0x69, 0x5f, 0x61, 0x70,
	0x69, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x46, 0x69, 0x72, 0x65, 0x77, 0x61,
	0x6c, 0x6c, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x12, 0x75, 0x0a, 0x14, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x46, 0x69, 0x72, 0x65,
	0x77, 0x61, 0x6c, 0x6c, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x2f, 0x2e, 0x61, 0x72, 0x61,
	0x61, 0x6c, 0x69, 0x5f, 0x61, 0x70, 0x69, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x46, 0x69, 0x72, 0x65, 0x77, 0x61, 0x6c, 0x6c, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2a, 0x2e, 0x61, 0x72,
	0x61, 0x61, 0x6c, 0x69, 0x5f, 0x61, 0x70, 0x69, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x46, 0x69, 0x72, 0x65, 0x77, 0x61, 0x6c, 0x6c, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x43, 0x0a, 0x10, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x61, 0x72, 0x61, 0x61, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x69, 0x42, 0x0f, 0x41,
	0x50, 0x49, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01,
	0x5a, 0x1c, 0x67, 0x6f, 0x6c, 0x61, 0x6e, 0x67, 0x2f, 0x76, 0x32, 0x2f, 0x61, 0x72, 0x61, 0x61,
	0x6c, 0x69, 0x5f, 0x61, 0x70, 0x69, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x62, 0x06,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_araali_api_service_proto_rawDescOnce sync.Once
	file_araali_api_service_proto_rawDescData = file_araali_api_service_proto_rawDesc
)

func file_araali_api_service_proto_rawDescGZIP() []byte {
	file_araali_api_service_proto_rawDescOnce.Do(func() {
		file_araali_api_service_proto_rawDescData = protoimpl.X.CompressGZIP(file_araali_api_service_proto_rawDescData)
	})
	return file_araali_api_service_proto_rawDescData
}

var file_araali_api_service_proto_enumTypes = make([]protoimpl.EnumInfo, 12)
var file_araali_api_service_proto_msgTypes = make([]protoimpl.MessageInfo, 45)
var file_araali_api_service_proto_goTypes = []interface{}{
	(LinkState)(0),                                 // 0: araali_api_service.LinkState
	(FortifyYamlType)(0),                           // 1: araali_api_service.FortifyYamlType
	(AraaliUser_Role)(0),                           // 2: araali_api_service.AraaliUser.Role
	(AraaliAPIResponse_ReturnCode)(0),              // 3: araali_api_service.AraaliAPIResponse.ReturnCode
	(Asset_AssetState)(0),                          // 4: araali_api_service.Asset.AssetState
	(Asset_AssetType)(0),                           // 5: araali_api_service.Asset.AssetType
	(Asset_AssetMode)(0),                           // 6: araali_api_service.Asset.AssetMode
	(Vulnerability_Severity)(0),                    // 7: araali_api_service.Vulnerability.Severity
	(NonAraaliEndpoint_EndpointGroup)(0),           // 8: araali_api_service.NonAraaliEndpoint.EndpointGroup
	(AlertInfo_Status)(0),                          // 9: araali_api_service.AlertInfo.Status
	(Link_LinkDirection)(0),                        // 10: araali_api_service.Link.LinkDirection
	(Lens_LensType)(0),                             // 11: araali_api_service.Lens.LensType
	(*Tenant)(nil),                                 // 12: araali_api_service.Tenant
	(*AraaliUser)(nil),                             // 13: araali_api_service.AraaliUser
	(*CreateTenantRequest)(nil),                    // 14: araali_api_service.CreateTenantRequest
	(*CreateTenantResponse)(nil),                   // 15: araali_api_service.CreateTenantResponse
	(*DeleteTenantRequest)(nil),                    // 16: araali_api_service.DeleteTenantRequest
	(*AddUserRequest)(nil),                         // 17: araali_api_service.AddUserRequest
	(*DeleteUserRequest)(nil),                      // 18: araali_api_service.DeleteUserRequest
	(*AraaliAPIResponse)(nil),                      // 19: araali_api_service.AraaliAPIResponse
	(*TimeSlice)(nil),                              // 20: araali_api_service.TimeSlice
	(*AssetFilter)(nil),                            // 21: araali_api_service.AssetFilter
	(*ListAssetsRequest)(nil),                      // 22: araali_api_service.ListAssetsRequest
	(*ListAssetsResponse)(nil),                     // 23: araali_api_service.ListAssetsResponse
	(*Capabilities)(nil),                           // 24: araali_api_service.Capabilities
	(*Asset)(nil),                                  // 25: araali_api_service.Asset
	(*Vulnerability)(nil),                          // 26: araali_api_service.Vulnerability
	(*AlertFilter)(nil),                            // 27: araali_api_service.AlertFilter
	(*ListAlertsRequest)(nil),                      // 28: araali_api_service.ListAlertsRequest
	(*ListAlertsResponse)(nil),                     // 29: araali_api_service.ListAlertsResponse
	(*AraaliEndpoint)(nil),                         // 30: araali_api_service.AraaliEndpoint
	(*Subnet)(nil),                                 // 31: araali_api_service.Subnet
	(*NonAraaliClientEndpoint)(nil),                // 32: araali_api_service.NonAraaliClientEndpoint
	(*NonAraaliServerEndpoint)(nil),                // 33: araali_api_service.NonAraaliServerEndpoint
	(*NonAraaliEndpoint)(nil),                      // 34: araali_api_service.NonAraaliEndpoint
	(*EndPoint)(nil),                               // 35: araali_api_service.EndPoint
	(*AlertInfo)(nil),                              // 36: araali_api_service.AlertInfo
	(*Ports)(nil),                                  // 37: araali_api_service.Ports
	(*Link)(nil),                                   // 38: araali_api_service.Link
	(*PolicyInfo)(nil),                             // 39: araali_api_service.PolicyInfo
	(*ListLinksRequest)(nil),                       // 40: araali_api_service.ListLinksRequest
	(*ListLinksResponse)(nil),                      // 41: araali_api_service.ListLinksResponse
	(*Lens)(nil),                                   // 42: araali_api_service.Lens
	(*Insight)(nil),                                // 43: araali_api_service.Insight
	(*ListInsightsRequest)(nil),                    // 44: araali_api_service.ListInsightsRequest
	(*ListInsightsResponse)(nil),                   // 45: araali_api_service.ListInsightsResponse
	(*CreateFortifyYamlRequest)(nil),               // 46: araali_api_service.CreateFortifyYamlRequest
	(*CreateFortifyYamlResponse)(nil),              // 47: araali_api_service.CreateFortifyYamlResponse
	(*ListFortifyYamlRequest)(nil),                 // 48: araali_api_service.ListFortifyYamlRequest
	(*ListFortifyYamlResponse)(nil),                // 49: araali_api_service.ListFortifyYamlResponse
	(*DeleteFortifyYamlRequest)(nil),               // 50: araali_api_service.DeleteFortifyYamlRequest
	(*ListPolicyAndEnforcementStatusRequest)(nil),  // 51: araali_api_service.ListPolicyAndEnforcementStatusRequest
	(*ListPolicyAndEnforcementStatusResponse)(nil), // 52: araali_api_service.ListPolicyAndEnforcementStatusResponse
	(*AraaliFwKnobs)(nil),                          // 53: araali_api_service.AraaliFwKnobs
	(*GetFirewallConfigRequest)(nil),               // 54: araali_api_service.GetFirewallConfigRequest
	(*UpdateFirewallConfigRequest)(nil),            // 55: araali_api_service.UpdateFirewallConfigRequest
	(*FirewallConfigResponse)(nil),                 // 56: araali_api_service.FirewallConfigResponse
	(*timestamp.Timestamp)(nil),                    // 57: google.protobuf.Timestamp
}
var file_araali_api_service_proto_depIdxs = []int32{
	2,  // 0: araali_api_service.AraaliUser.role:type_name -> araali_api_service.AraaliUser.Role
	12, // 1: araali_api_service.CreateTenantRequest.tenant:type_name -> araali_api_service.Tenant
	19, // 2: araali_api_service.CreateTenantResponse.response:type_name -> araali_api_service.AraaliAPIResponse
	12, // 3: araali_api_service.CreateTenantResponse.tenant:type_name -> araali_api_service.Tenant
	12, // 4: araali_api_service.DeleteTenantRequest.tenant:type_name -> araali_api_service.Tenant
	12, // 5: araali_api_service.AddUserRequest.tenant:type_name -> araali_api_service.Tenant
	13, // 6: araali_api_service.AddUserRequest.user:type_name -> araali_api_service.AraaliUser
	12, // 7: araali_api_service.DeleteUserRequest.tenant:type_name -> araali_api_service.Tenant
	13, // 8: araali_api_service.DeleteUserRequest.user:type_name -> araali_api_service.AraaliUser
	3,  // 9: araali_api_service.AraaliAPIResponse.code:type_name -> araali_api_service.AraaliAPIResponse.ReturnCode
	57, // 10: araali_api_service.TimeSlice.start_time:type_name -> google.protobuf.Timestamp
	57, // 11: araali_api_service.TimeSlice.end_time:type_name -> google.protobuf.Timestamp
	12, // 12: araali_api_service.ListAssetsRequest.tenant:type_name -> araali_api_service.Tenant
	20, // 13: araali_api_service.ListAssetsRequest.time:type_name -> araali_api_service.TimeSlice
	21, // 14: araali_api_service.ListAssetsRequest.filter:type_name -> araali_api_service.AssetFilter
	19, // 15: araali_api_service.ListAssetsResponse.response:type_name -> araali_api_service.AraaliAPIResponse
	25, // 16: araali_api_service.ListAssetsResponse.assets:type_name -> araali_api_service.Asset
	4,  // 17: araali_api_service.Asset.state:type_name -> araali_api_service.Asset.AssetState
	5,  // 18: araali_api_service.Asset.asset_type:type_name -> araali_api_service.Asset.AssetType
	26, // 19: araali_api_service.Asset.vulnerabilities:type_name -> araali_api_service.Vulnerability
	6,  // 20: araali_api_service.Asset.mode:type_name -> araali_api_service.Asset.AssetMode
	24, // 21: araali_api_service.Asset.docker:type_name -> araali_api_service.Capabilities
	24, // 22: araali_api_service.Asset.containerd:type_name -> araali_api_service.Capabilities
	7,  // 23: araali_api_service.Vulnerability.severity:type_name -> araali_api_service.Vulnerability.Severity
	20, // 24: araali_api_service.AlertFilter.time:type_name -> araali_api_service.TimeSlice
	12, // 25: araali_api_service.ListAlertsRequest.tenant:type_name -> araali_api_service.Tenant
	27, // 26: araali_api_service.ListAlertsRequest.filter:type_name -> araali_api_service.AlertFilter
	19, // 27: araali_api_service.ListAlertsResponse.response:type_name -> araali_api_service.AraaliAPIResponse
	38, // 28: araali_api_service.ListAlertsResponse.links:type_name -> araali_api_service.Link
	31, // 29: araali_api_service.NonAraaliClientEndpoint.subnet:type_name -> araali_api_service.Subnet
	31, // 30: araali_api_service.NonAraaliServerEndpoint.subnet:type_name -> araali_api_service.Subnet
	32, // 31: araali_api_service.NonAraaliEndpoint.client:type_name -> araali_api_service.NonAraaliClientEndpoint
	33, // 32: araali_api_service.NonAraaliEndpoint.server:type_name -> araali_api_service.NonAraaliServerEndpoint
	8,  // 33: araali_api_service.NonAraaliEndpoint.endpoint_group:type_name -> araali_api_service.NonAraaliEndpoint.EndpointGroup
	30, // 34: araali_api_service.EndPoint.araali:type_name -> araali_api_service.AraaliEndpoint
	34, // 35: araali_api_service.EndPoint.non_araali:type_name -> araali_api_service.NonAraaliEndpoint
	9,  // 36: araali_api_service.AlertInfo.status:type_name -> araali_api_service.AlertInfo.Status
	35, // 37: araali_api_service.Link.client:type_name -> araali_api_service.EndPoint
	35, // 38: araali_api_service.Link.server:type_name -> araali_api_service.EndPoint
	10, // 39: araali_api_service.Link.direction:type_name -> araali_api_service.Link.LinkDirection
	57, // 40: araali_api_service.Link.timestamp:type_name -> google.protobuf.Timestamp
	0,  // 41: araali_api_service.Link.state:type_name -> araali_api_service.LinkState
	37, // 42: araali_api_service.Link.ports:type_name -> araali_api_service.Ports
	36, // 43: araali_api_service.Link.alert_info:type_name -> araali_api_service.AlertInfo
	39, // 44: araali_api_service.Link.policy_info:type_name -> araali_api_service.PolicyInfo
	12, // 45: araali_api_service.ListLinksRequest.tenant:type_name -> araali_api_service.Tenant
	20, // 46: araali_api_service.ListLinksRequest.time:type_name -> araali_api_service.TimeSlice
	19, // 47: araali_api_service.ListLinksResponse.response:type_name -> araali_api_service.AraaliAPIResponse
	38, // 48: araali_api_service.ListLinksResponse.links:type_name -> araali_api_service.Link
	11, // 49: araali_api_service.Lens.type:type_name -> araali_api_service.Lens.LensType
	42, // 50: araali_api_service.Insight.lens:type_name -> araali_api_service.Lens
	12, // 51: araali_api_service.ListInsightsRequest.tenant:type_name -> araali_api_service.Tenant
	19, // 52: araali_api_service.ListInsightsResponse.response:type_name -> araali_api_service.AraaliAPIResponse
	43, // 53: araali_api_service.ListInsightsResponse.insights:type_name -> araali_api_service.Insight
	12, // 54: araali_api_service.CreateFortifyYamlRequest.tenant:type_name -> araali_api_service.Tenant
	1,  // 55: araali_api_service.CreateFortifyYamlRequest.yaml_type:type_name -> araali_api_service.FortifyYamlType
	19, // 56: araali_api_service.CreateFortifyYamlResponse.response:type_name -> araali_api_service.AraaliAPIResponse
	12, // 57: araali_api_service.ListFortifyYamlRequest.tenant:type_name -> araali_api_service.Tenant
	1,  // 58: araali_api_service.ListFortifyYamlRequest.yaml_type:type_name -> araali_api_service.FortifyYamlType
	19, // 59: araali_api_service.ListFortifyYamlResponse.response:type_name -> araali_api_service.AraaliAPIResponse
	12, // 60: araali_api_service.DeleteFortifyYamlRequest.tenant:type_name -> araali_api_service.Tenant
	12, // 61: araali_api_service.ListPolicyAndEnforcementStatusRequest.tenant:type_name -> araali_api_service.Tenant
	53, // 62: araali_api_service.UpdateFirewallConfigRequest.knobs:type_name -> araali_api_service.AraaliFwKnobs
	53, // 63: araali_api_service.FirewallConfigResponse.knobs:type_name -> araali_api_service.AraaliFwKnobs
	14, // 64: araali_api_service.AraaliAPI.createTenant:input_type -> araali_api_service.CreateTenantRequest
	16, // 65: araali_api_service.AraaliAPI.deleteTenant:input_type -> araali_api_service.DeleteTenantRequest
	17, // 66: araali_api_service.AraaliAPI.addUser:input_type -> araali_api_service.AddUserRequest
	18, // 67: araali_api_service.AraaliAPI.deleteUser:input_type -> araali_api_service.DeleteUserRequest
	22, // 68: araali_api_service.AraaliAPI.listAssets:input_type -> araali_api_service.ListAssetsRequest
	28, // 69: araali_api_service.AraaliAPI.listAlerts:input_type -> araali_api_service.ListAlertsRequest
	40, // 70: araali_api_service.AraaliAPI.listLinks:input_type -> araali_api_service.ListLinksRequest
	44, // 71: araali_api_service.AraaliAPI.listInsights:input_type -> araali_api_service.ListInsightsRequest
	46, // 72: araali_api_service.AraaliAPI.createFortifyYaml:input_type -> araali_api_service.CreateFortifyYamlRequest
	48, // 73: araali_api_service.AraaliAPI.listFortifyYaml:input_type -> araali_api_service.ListFortifyYamlRequest
	50, // 74: araali_api_service.AraaliAPI.deleteFortifyYaml:input_type -> araali_api_service.DeleteFortifyYamlRequest
	51, // 75: araali_api_service.AraaliAPI.listPolicyAndEnforcementStatus:input_type -> araali_api_service.ListPolicyAndEnforcementStatusRequest
	54, // 76: araali_api_service.AraaliAPI.getFirewallConfig:input_type -> araali_api_service.GetFirewallConfigRequest
	55, // 77: araali_api_service.AraaliAPI.updateFirewallConfig:input_type -> araali_api_service.UpdateFirewallConfigRequest
	15, // 78: araali_api_service.AraaliAPI.createTenant:output_type -> araali_api_service.CreateTenantResponse
	19, // 79: araali_api_service.AraaliAPI.deleteTenant:output_type -> araali_api_service.AraaliAPIResponse
	19, // 80: araali_api_service.AraaliAPI.addUser:output_type -> araali_api_service.AraaliAPIResponse
	19, // 81: araali_api_service.AraaliAPI.deleteUser:output_type -> araali_api_service.AraaliAPIResponse
	23, // 82: araali_api_service.AraaliAPI.listAssets:output_type -> araali_api_service.ListAssetsResponse
	29, // 83: araali_api_service.AraaliAPI.listAlerts:output_type -> araali_api_service.ListAlertsResponse
	41, // 84: araali_api_service.AraaliAPI.listLinks:output_type -> araali_api_service.ListLinksResponse
	45, // 85: araali_api_service.AraaliAPI.listInsights:output_type -> araali_api_service.ListInsightsResponse
	47, // 86: araali_api_service.AraaliAPI.createFortifyYaml:output_type -> araali_api_service.CreateFortifyYamlResponse
	49, // 87: araali_api_service.AraaliAPI.listFortifyYaml:output_type -> araali_api_service.ListFortifyYamlResponse
	19, // 88: araali_api_service.AraaliAPI.deleteFortifyYaml:output_type -> araali_api_service.AraaliAPIResponse
	52, // 89: araali_api_service.AraaliAPI.listPolicyAndEnforcementStatus:output_type -> araali_api_service.ListPolicyAndEnforcementStatusResponse
	56, // 90: araali_api_service.AraaliAPI.getFirewallConfig:output_type -> araali_api_service.FirewallConfigResponse
	56, // 91: araali_api_service.AraaliAPI.updateFirewallConfig:output_type -> araali_api_service.FirewallConfigResponse
	78, // [78:92] is the sub-list for method output_type
	64, // [64:78] is the sub-list for method input_type
	64, // [64:64] is the sub-list for extension type_name
	64, // [64:64] is the sub-list for extension extendee
	0,  // [0:64] is the sub-list for field type_name
}

func init() { file_araali_api_service_proto_init() }
func file_araali_api_service_proto_init() {
	if File_araali_api_service_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_araali_api_service_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Tenant); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_araali_api_service_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AraaliUser); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_araali_api_service_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateTenantRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_araali_api_service_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateTenantResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_araali_api_service_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteTenantRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_araali_api_service_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddUserRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_araali_api_service_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteUserRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_araali_api_service_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AraaliAPIResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_araali_api_service_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TimeSlice); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_araali_api_service_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AssetFilter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_araali_api_service_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListAssetsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_araali_api_service_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListAssetsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_araali_api_service_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Capabilities); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_araali_api_service_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Asset); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_araali_api_service_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Vulnerability); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_araali_api_service_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AlertFilter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_araali_api_service_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListAlertsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_araali_api_service_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListAlertsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_araali_api_service_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AraaliEndpoint); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_araali_api_service_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Subnet); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_araali_api_service_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NonAraaliClientEndpoint); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_araali_api_service_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NonAraaliServerEndpoint); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_araali_api_service_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NonAraaliEndpoint); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_araali_api_service_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EndPoint); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_araali_api_service_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AlertInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_araali_api_service_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Ports); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_araali_api_service_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Link); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_araali_api_service_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PolicyInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_araali_api_service_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListLinksRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_araali_api_service_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListLinksResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_araali_api_service_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Lens); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_araali_api_service_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Insight); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_araali_api_service_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListInsightsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_araali_api_service_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListInsightsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_araali_api_service_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateFortifyYamlRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_araali_api_service_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateFortifyYamlResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_araali_api_service_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListFortifyYamlRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_araali_api_service_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListFortifyYamlResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_araali_api_service_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteFortifyYamlRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_araali_api_service_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListPolicyAndEnforcementStatusRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_araali_api_service_proto_msgTypes[40].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListPolicyAndEnforcementStatusResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_araali_api_service_proto_msgTypes[41].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AraaliFwKnobs); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_araali_api_service_proto_msgTypes[42].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetFirewallConfigRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_araali_api_service_proto_msgTypes[43].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateFirewallConfigRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_araali_api_service_proto_msgTypes[44].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FirewallConfigResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_araali_api_service_proto_msgTypes[13].OneofWrappers = []interface{}{
		(*Asset_Docker)(nil),
		(*Asset_Containerd)(nil),
	}
	file_araali_api_service_proto_msgTypes[21].OneofWrappers = []interface{}{
		(*NonAraaliServerEndpoint_DnsPattern)(nil),
		(*NonAraaliServerEndpoint_Subnet)(nil),
	}
	file_araali_api_service_proto_msgTypes[22].OneofWrappers = []interface{}{
		(*NonAraaliEndpoint_Client)(nil),
		(*NonAraaliEndpoint_Server)(nil),
	}
	file_araali_api_service_proto_msgTypes[23].OneofWrappers = []interface{}{
		(*EndPoint_Araali)(nil),
		(*EndPoint_NonAraali)(nil),
	}
	file_araali_api_service_proto_msgTypes[26].OneofWrappers = []interface{}{
		(*Link_AlertInfo)(nil),
		(*Link_PolicyInfo)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_araali_api_service_proto_rawDesc,
			NumEnums:      12,
			NumMessages:   45,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_araali_api_service_proto_goTypes,
		DependencyIndexes: file_araali_api_service_proto_depIdxs,
		EnumInfos:         file_araali_api_service_proto_enumTypes,
		MessageInfos:      file_araali_api_service_proto_msgTypes,
	}.Build()
	File_araali_api_service_proto = out.File
	file_araali_api_service_proto_rawDesc = nil
	file_araali_api_service_proto_goTypes = nil
	file_araali_api_service_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// AraaliAPIClient is the client API for AraaliAPI service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type AraaliAPIClient interface {
	// Add a tenant
	CreateTenant(ctx context.Context, in *CreateTenantRequest, opts ...grpc.CallOption) (*CreateTenantResponse, error)
	// Delete a tenant
	DeleteTenant(ctx context.Context, in *DeleteTenantRequest, opts ...grpc.CallOption) (*AraaliAPIResponse, error)
	// Add a user
	AddUser(ctx context.Context, in *AddUserRequest, opts ...grpc.CallOption) (*AraaliAPIResponse, error)
	// Delete a user
	DeleteUser(ctx context.Context, in *DeleteUserRequest, opts ...grpc.CallOption) (*AraaliAPIResponse, error)
	// Get assets
	ListAssets(ctx context.Context, in *ListAssetsRequest, opts ...grpc.CallOption) (*ListAssetsResponse, error)
	// Get alerts
	ListAlerts(ctx context.Context, in *ListAlertsRequest, opts ...grpc.CallOption) (*ListAlertsResponse, error)
	// Get links within a zone/app
	ListLinks(ctx context.Context, in *ListLinksRequest, opts ...grpc.CallOption) (*ListLinksResponse, error)
	// Get tenant wide insights
	ListInsights(ctx context.Context, in *ListInsightsRequest, opts ...grpc.CallOption) (*ListInsightsResponse, error)
	// Generate k8s workload/helm values (also registers workloadID)
	CreateFortifyYaml(ctx context.Context, in *CreateFortifyYamlRequest, opts ...grpc.CallOption) (*CreateFortifyYamlResponse, error)
	// List existing k8s workloads
	ListFortifyYaml(ctx context.Context, in *ListFortifyYamlRequest, opts ...grpc.CallOption) (*ListFortifyYamlResponse, error)
	// Delete existing k8s workload
	DeleteFortifyYaml(ctx context.Context, in *DeleteFortifyYamlRequest, opts ...grpc.CallOption) (*AraaliAPIResponse, error)
	// Download policy and enforcement knobs as code.
	ListPolicyAndEnforcementStatus(ctx context.Context, in *ListPolicyAndEnforcementStatusRequest, opts ...grpc.CallOption) (*ListPolicyAndEnforcementStatusResponse, error)
	// Get existing Araali firewall config
	GetFirewallConfig(ctx context.Context, in *GetFirewallConfigRequest, opts ...grpc.CallOption) (*FirewallConfigResponse, error)
	// Update existing Araali firewall config
	UpdateFirewallConfig(ctx context.Context, in *UpdateFirewallConfigRequest, opts ...grpc.CallOption) (*FirewallConfigResponse, error)
}

type araaliAPIClient struct {
	cc grpc.ClientConnInterface
}

func NewAraaliAPIClient(cc grpc.ClientConnInterface) AraaliAPIClient {
	return &araaliAPIClient{cc}
}

func (c *araaliAPIClient) CreateTenant(ctx context.Context, in *CreateTenantRequest, opts ...grpc.CallOption) (*CreateTenantResponse, error) {
	out := new(CreateTenantResponse)
	err := c.cc.Invoke(ctx, "/araali_api_service.AraaliAPI/createTenant", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *araaliAPIClient) DeleteTenant(ctx context.Context, in *DeleteTenantRequest, opts ...grpc.CallOption) (*AraaliAPIResponse, error) {
	out := new(AraaliAPIResponse)
	err := c.cc.Invoke(ctx, "/araali_api_service.AraaliAPI/deleteTenant", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *araaliAPIClient) AddUser(ctx context.Context, in *AddUserRequest, opts ...grpc.CallOption) (*AraaliAPIResponse, error) {
	out := new(AraaliAPIResponse)
	err := c.cc.Invoke(ctx, "/araali_api_service.AraaliAPI/addUser", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *araaliAPIClient) DeleteUser(ctx context.Context, in *DeleteUserRequest, opts ...grpc.CallOption) (*AraaliAPIResponse, error) {
	out := new(AraaliAPIResponse)
	err := c.cc.Invoke(ctx, "/araali_api_service.AraaliAPI/deleteUser", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *araaliAPIClient) ListAssets(ctx context.Context, in *ListAssetsRequest, opts ...grpc.CallOption) (*ListAssetsResponse, error) {
	out := new(ListAssetsResponse)
	err := c.cc.Invoke(ctx, "/araali_api_service.AraaliAPI/listAssets", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *araaliAPIClient) ListAlerts(ctx context.Context, in *ListAlertsRequest, opts ...grpc.CallOption) (*ListAlertsResponse, error) {
	out := new(ListAlertsResponse)
	err := c.cc.Invoke(ctx, "/araali_api_service.AraaliAPI/listAlerts", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *araaliAPIClient) ListLinks(ctx context.Context, in *ListLinksRequest, opts ...grpc.CallOption) (*ListLinksResponse, error) {
	out := new(ListLinksResponse)
	err := c.cc.Invoke(ctx, "/araali_api_service.AraaliAPI/listLinks", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *araaliAPIClient) ListInsights(ctx context.Context, in *ListInsightsRequest, opts ...grpc.CallOption) (*ListInsightsResponse, error) {
	out := new(ListInsightsResponse)
	err := c.cc.Invoke(ctx, "/araali_api_service.AraaliAPI/listInsights", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *araaliAPIClient) CreateFortifyYaml(ctx context.Context, in *CreateFortifyYamlRequest, opts ...grpc.CallOption) (*CreateFortifyYamlResponse, error) {
	out := new(CreateFortifyYamlResponse)
	err := c.cc.Invoke(ctx, "/araali_api_service.AraaliAPI/createFortifyYaml", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *araaliAPIClient) ListFortifyYaml(ctx context.Context, in *ListFortifyYamlRequest, opts ...grpc.CallOption) (*ListFortifyYamlResponse, error) {
	out := new(ListFortifyYamlResponse)
	err := c.cc.Invoke(ctx, "/araali_api_service.AraaliAPI/listFortifyYaml", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *araaliAPIClient) DeleteFortifyYaml(ctx context.Context, in *DeleteFortifyYamlRequest, opts ...grpc.CallOption) (*AraaliAPIResponse, error) {
	out := new(AraaliAPIResponse)
	err := c.cc.Invoke(ctx, "/araali_api_service.AraaliAPI/deleteFortifyYaml", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *araaliAPIClient) ListPolicyAndEnforcementStatus(ctx context.Context, in *ListPolicyAndEnforcementStatusRequest, opts ...grpc.CallOption) (*ListPolicyAndEnforcementStatusResponse, error) {
	out := new(ListPolicyAndEnforcementStatusResponse)
	err := c.cc.Invoke(ctx, "/araali_api_service.AraaliAPI/listPolicyAndEnforcementStatus", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *araaliAPIClient) GetFirewallConfig(ctx context.Context, in *GetFirewallConfigRequest, opts ...grpc.CallOption) (*FirewallConfigResponse, error) {
	out := new(FirewallConfigResponse)
	err := c.cc.Invoke(ctx, "/araali_api_service.AraaliAPI/getFirewallConfig", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *araaliAPIClient) UpdateFirewallConfig(ctx context.Context, in *UpdateFirewallConfigRequest, opts ...grpc.CallOption) (*FirewallConfigResponse, error) {
	out := new(FirewallConfigResponse)
	err := c.cc.Invoke(ctx, "/araali_api_service.AraaliAPI/updateFirewallConfig", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// AraaliAPIServer is the server API for AraaliAPI service.
type AraaliAPIServer interface {
	// Add a tenant
	CreateTenant(context.Context, *CreateTenantRequest) (*CreateTenantResponse, error)
	// Delete a tenant
	DeleteTenant(context.Context, *DeleteTenantRequest) (*AraaliAPIResponse, error)
	// Add a user
	AddUser(context.Context, *AddUserRequest) (*AraaliAPIResponse, error)
	// Delete a user
	DeleteUser(context.Context, *DeleteUserRequest) (*AraaliAPIResponse, error)
	// Get assets
	ListAssets(context.Context, *ListAssetsRequest) (*ListAssetsResponse, error)
	// Get alerts
	ListAlerts(context.Context, *ListAlertsRequest) (*ListAlertsResponse, error)
	// Get links within a zone/app
	ListLinks(context.Context, *ListLinksRequest) (*ListLinksResponse, error)
	// Get tenant wide insights
	ListInsights(context.Context, *ListInsightsRequest) (*ListInsightsResponse, error)
	// Generate k8s workload/helm values (also registers workloadID)
	CreateFortifyYaml(context.Context, *CreateFortifyYamlRequest) (*CreateFortifyYamlResponse, error)
	// List existing k8s workloads
	ListFortifyYaml(context.Context, *ListFortifyYamlRequest) (*ListFortifyYamlResponse, error)
	// Delete existing k8s workload
	DeleteFortifyYaml(context.Context, *DeleteFortifyYamlRequest) (*AraaliAPIResponse, error)
	// Download policy and enforcement knobs as code.
	ListPolicyAndEnforcementStatus(context.Context, *ListPolicyAndEnforcementStatusRequest) (*ListPolicyAndEnforcementStatusResponse, error)
	// Get existing Araali firewall config
	GetFirewallConfig(context.Context, *GetFirewallConfigRequest) (*FirewallConfigResponse, error)
	// Update existing Araali firewall config
	UpdateFirewallConfig(context.Context, *UpdateFirewallConfigRequest) (*FirewallConfigResponse, error)
}

// UnimplementedAraaliAPIServer can be embedded to have forward compatible implementations.
type UnimplementedAraaliAPIServer struct {
}

func (*UnimplementedAraaliAPIServer) CreateTenant(context.Context, *CreateTenantRequest) (*CreateTenantResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateTenant not implemented")
}
func (*UnimplementedAraaliAPIServer) DeleteTenant(context.Context, *DeleteTenantRequest) (*AraaliAPIResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteTenant not implemented")
}
func (*UnimplementedAraaliAPIServer) AddUser(context.Context, *AddUserRequest) (*AraaliAPIResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AddUser not implemented")
}
func (*UnimplementedAraaliAPIServer) DeleteUser(context.Context, *DeleteUserRequest) (*AraaliAPIResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteUser not implemented")
}
func (*UnimplementedAraaliAPIServer) ListAssets(context.Context, *ListAssetsRequest) (*ListAssetsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListAssets not implemented")
}
func (*UnimplementedAraaliAPIServer) ListAlerts(context.Context, *ListAlertsRequest) (*ListAlertsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListAlerts not implemented")
}
func (*UnimplementedAraaliAPIServer) ListLinks(context.Context, *ListLinksRequest) (*ListLinksResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListLinks not implemented")
}
func (*UnimplementedAraaliAPIServer) ListInsights(context.Context, *ListInsightsRequest) (*ListInsightsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListInsights not implemented")
}
func (*UnimplementedAraaliAPIServer) CreateFortifyYaml(context.Context, *CreateFortifyYamlRequest) (*CreateFortifyYamlResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateFortifyYaml not implemented")
}
func (*UnimplementedAraaliAPIServer) ListFortifyYaml(context.Context, *ListFortifyYamlRequest) (*ListFortifyYamlResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListFortifyYaml not implemented")
}
func (*UnimplementedAraaliAPIServer) DeleteFortifyYaml(context.Context, *DeleteFortifyYamlRequest) (*AraaliAPIResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteFortifyYaml not implemented")
}
func (*UnimplementedAraaliAPIServer) ListPolicyAndEnforcementStatus(context.Context, *ListPolicyAndEnforcementStatusRequest) (*ListPolicyAndEnforcementStatusResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListPolicyAndEnforcementStatus not implemented")
}
func (*UnimplementedAraaliAPIServer) GetFirewallConfig(context.Context, *GetFirewallConfigRequest) (*FirewallConfigResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetFirewallConfig not implemented")
}
func (*UnimplementedAraaliAPIServer) UpdateFirewallConfig(context.Context, *UpdateFirewallConfigRequest) (*FirewallConfigResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateFirewallConfig not implemented")
}

func RegisterAraaliAPIServer(s *grpc.Server, srv AraaliAPIServer) {
	s.RegisterService(&_AraaliAPI_serviceDesc, srv)
}

func _AraaliAPI_CreateTenant_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateTenantRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AraaliAPIServer).CreateTenant(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/araali_api_service.AraaliAPI/CreateTenant",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AraaliAPIServer).CreateTenant(ctx, req.(*CreateTenantRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AraaliAPI_DeleteTenant_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteTenantRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AraaliAPIServer).DeleteTenant(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/araali_api_service.AraaliAPI/DeleteTenant",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AraaliAPIServer).DeleteTenant(ctx, req.(*DeleteTenantRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AraaliAPI_AddUser_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddUserRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AraaliAPIServer).AddUser(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/araali_api_service.AraaliAPI/AddUser",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AraaliAPIServer).AddUser(ctx, req.(*AddUserRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AraaliAPI_DeleteUser_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteUserRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AraaliAPIServer).DeleteUser(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/araali_api_service.AraaliAPI/DeleteUser",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AraaliAPIServer).DeleteUser(ctx, req.(*DeleteUserRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AraaliAPI_ListAssets_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListAssetsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AraaliAPIServer).ListAssets(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/araali_api_service.AraaliAPI/ListAssets",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AraaliAPIServer).ListAssets(ctx, req.(*ListAssetsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AraaliAPI_ListAlerts_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListAlertsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AraaliAPIServer).ListAlerts(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/araali_api_service.AraaliAPI/ListAlerts",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AraaliAPIServer).ListAlerts(ctx, req.(*ListAlertsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AraaliAPI_ListLinks_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListLinksRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AraaliAPIServer).ListLinks(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/araali_api_service.AraaliAPI/ListLinks",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AraaliAPIServer).ListLinks(ctx, req.(*ListLinksRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AraaliAPI_ListInsights_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListInsightsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AraaliAPIServer).ListInsights(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/araali_api_service.AraaliAPI/ListInsights",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AraaliAPIServer).ListInsights(ctx, req.(*ListInsightsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AraaliAPI_CreateFortifyYaml_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateFortifyYamlRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AraaliAPIServer).CreateFortifyYaml(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/araali_api_service.AraaliAPI/CreateFortifyYaml",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AraaliAPIServer).CreateFortifyYaml(ctx, req.(*CreateFortifyYamlRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AraaliAPI_ListFortifyYaml_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListFortifyYamlRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AraaliAPIServer).ListFortifyYaml(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/araali_api_service.AraaliAPI/ListFortifyYaml",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AraaliAPIServer).ListFortifyYaml(ctx, req.(*ListFortifyYamlRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AraaliAPI_DeleteFortifyYaml_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteFortifyYamlRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AraaliAPIServer).DeleteFortifyYaml(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/araali_api_service.AraaliAPI/DeleteFortifyYaml",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AraaliAPIServer).DeleteFortifyYaml(ctx, req.(*DeleteFortifyYamlRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AraaliAPI_ListPolicyAndEnforcementStatus_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListPolicyAndEnforcementStatusRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AraaliAPIServer).ListPolicyAndEnforcementStatus(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/araali_api_service.AraaliAPI/ListPolicyAndEnforcementStatus",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AraaliAPIServer).ListPolicyAndEnforcementStatus(ctx, req.(*ListPolicyAndEnforcementStatusRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AraaliAPI_GetFirewallConfig_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetFirewallConfigRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AraaliAPIServer).GetFirewallConfig(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/araali_api_service.AraaliAPI/GetFirewallConfig",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AraaliAPIServer).GetFirewallConfig(ctx, req.(*GetFirewallConfigRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AraaliAPI_UpdateFirewallConfig_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateFirewallConfigRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AraaliAPIServer).UpdateFirewallConfig(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/araali_api_service.AraaliAPI/UpdateFirewallConfig",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AraaliAPIServer).UpdateFirewallConfig(ctx, req.(*UpdateFirewallConfigRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _AraaliAPI_serviceDesc = grpc.ServiceDesc{
	ServiceName: "araali_api_service.AraaliAPI",
	HandlerType: (*AraaliAPIServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "createTenant",
			Handler:    _AraaliAPI_CreateTenant_Handler,
		},
		{
			MethodName: "deleteTenant",
			Handler:    _AraaliAPI_DeleteTenant_Handler,
		},
		{
			MethodName: "addUser",
			Handler:    _AraaliAPI_AddUser_Handler,
		},
		{
			MethodName: "deleteUser",
			Handler:    _AraaliAPI_DeleteUser_Handler,
		},
		{
			MethodName: "listAssets",
			Handler:    _AraaliAPI_ListAssets_Handler,
		},
		{
			MethodName: "listAlerts",
			Handler:    _AraaliAPI_ListAlerts_Handler,
		},
		{
			MethodName: "listLinks",
			Handler:    _AraaliAPI_ListLinks_Handler,
		},
		{
			MethodName: "listInsights",
			Handler:    _AraaliAPI_ListInsights_Handler,
		},
		{
			MethodName: "createFortifyYaml",
			Handler:    _AraaliAPI_CreateFortifyYaml_Handler,
		},
		{
			MethodName: "listFortifyYaml",
			Handler:    _AraaliAPI_ListFortifyYaml_Handler,
		},
		{
			MethodName: "deleteFortifyYaml",
			Handler:    _AraaliAPI_DeleteFortifyYaml_Handler,
		},
		{
			MethodName: "listPolicyAndEnforcementStatus",
			Handler:    _AraaliAPI_ListPolicyAndEnforcementStatus_Handler,
		},
		{
			MethodName: "getFirewallConfig",
			Handler:    _AraaliAPI_GetFirewallConfig_Handler,
		},
		{
			MethodName: "updateFirewallConfig",
			Handler:    _AraaliAPI_UpdateFirewallConfig_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "araali_api_service.proto",
}
