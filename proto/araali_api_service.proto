// Copyright(c) 2022-current. Araali Networks Inc.
//
// This file is subject to the terms and conditions defined in
// file 'LICENSE.txt', which is part of this source code package.

syntax = "proto3";

import "google/protobuf/timestamp.proto";

option java_multiple_files = true;
option java_package = "proto.araali.api";
option java_outer_classname = "APIServiceProto";
option go_package = "araali.golang/proto/araali/araali_api_service";

package araali_api_service;

//////
// API Interface to the backend
//////

///// Tenant and User API's
message Tenant {
	string id          = 1;
	string admin_email = 2;
}

message AraaliUser {
	string email       = 1;
	enum Role {
		ADMIN = 0;
		USER  = 1;
	}
	Role role          = 2;
	bool is_site_admin = 3;
}

message TimeSlice {
	google.protobuf.Timestamp start_time = 1;
	google.protobuf.Timestamp end_time   = 2;
}

message TenantRequest {
	Tenant tenant = 1;
	enum Op {
        ADD = 0;
        DEL = 1;
    }
    Op op         = 2;
}

message UserRequest {
	Tenant tenant     = 1;
	AraaliUser user   = 2;
	enum Op {
        ADD = 0;
        DEL = 1;
    }
    Op op             = 3;
}

///// List Asset API
message AssetFilter {
	bool list_active_vm          = 1;
	bool list_inactive_vm        = 2;
	bool list_active_container   = 3;
	bool list_inactive_container = 4;
}

message ListAssetsRequest {
	Tenant tenant      = 1;
	string zone        = 2;
	string app         = 3;
	TimeSlice time     = 4;
	AssetFilter filter = 5;
}

message AraaliAPIResponse {
	enum ReturnCode {
		SUCCESS = 0;
		FAIL    = 1;
		UNKNOWN = 2;
	}
    ReturnCode code = 1;
    string msg      = 2;
}

enum AssetState {
	DELETED  = 0;
	ACTIVE   = 1;
	INACTIVE = 2;
}

enum AssetType {
	UNKNOWN_TYPE    = 0;
	VIRTUAL_MACHINE = 1;
	CONTAINER       = 2;
}

enum AssetMode {
	TAP                         = 0;
	INLINE                      = 1;
	TRANSITIONING_TAP_TO_INLINE = 2;
	TRANSITIONING_INLINE_TO_TAP = 3;
}

message ListAssetsResponse {
	AraaliAPIResponse response = 1;
	repeated Asset assets      = 2;
}

message Asset {
	string name                            = 1;
	string ip_address                      = 2;
	string uuid                            = 3;
	string image                           = 4;
	string zone                            = 5;
	repeated string apps                   = 6;
	AssetState state                       = 7;
	AssetType type                         = 8;
	repeated Vulnerability vulnerabilities = 9;
	AssetMode mode                         = 10;
	string os_name                         = 11;
	string iam_role                        = 12;
	bool docker_privileged                 = 13; // only applies to Docker containers
	oneof capabilities {
		string docker_capabilities         = 14;
		string containerd_capabilities     = 15;
	}
	// could also return EnforcementStatus here
}

message Vulnerability {
	string package_name    = 1;
	repeated string cve_id = 2;
	Severity severity = 3;
	enum Severity {
		NONE = 0;
		LOW = 1;
		MEDIUM = 2;
		HIGH = 3;
		CRITICAL = 4;
	}
}

///// List Alert API
enum FlowRollupType {
	BASELINE_ALERT = 0;
}

message AlertFilter {
	bool new_alerts              = 1;
	bool open_alerts             = 2;
	bool closed_alerts           = 3;
	bool perimeter_egress        = 4;
	bool perimeter_ingress       = 5;
	bool home_non_araali_egress  = 6;
	bool home_non_araali_ingress = 7;
	bool araali_to_araali        = 8;
	bool list_all_alerts         = 9; // Fetch all alerts from all lenses, even ones not monitored by current user
	FlowRollupType rollup_type   = 10;
	TimeSlice time               = 11;
}

message ListAlertsRequest {
	Tenant tenant       = 1;
	AlertFilter filter  = 2;
	int32 count         = 3;
	string paging_token = 4;
}

message ListAlertsResponse {
	AraaliAPIResponse response = 1;
	repeated Link links        = 2;
}

message EndPoint {
	string zone                = 1;
	string app                 = 2;
	string unmapped_app        = 3;
	string outer_app           = 4;
	string process             = 5;
	string binary_name         = 6;
	string parent_process      = 7;
	string dns_pattern         = 8;
	string subnet              = 9;
	uint32 net_mask            = 10;
	uint32 dst_port            = 11;
	bool private_subnet        = 12;
	string endpoint_group      = 13;
	string organization        = 14;
}

message AlertInfo {
	string commuication_alert_type = 1;
	string process_alert_type      = 2;
	uint32 re_open_count           = 3;
	string status                  = 4;
}

enum LinkType {
	UNKNOWN = 0;
	NON_ARAALI_INGRESS = 1;
	ARAALI_INGRESS = 2;
	NON_ARAALI_EGRESS = 3;
	ARAALI_EGRESS = 4;
	INTERNAL = 5;

}

// Could make state and error_code enum fields as well
message Link {
	EndPoint client                = 1;
	EndPoint orig_client           = 2;
	EndPoint server                = 3;
	EndPoint orig_server           = 4;
	LinkType type                  = 5;
	TimeSlice timestamp            = 6;
	string unique_id               = 7;
	string new_state               = 8;
	string paging_token            = 9;
	AlertInfo alert_info           = 10;
	repeated string roll_up_ids    = 11;
	repeated uint32 active_ports   = 12;
	repeated uint32 inactive_ports = 13;
	string template_name           = 14;
	string template_user           = 15;
	string policy_skip_reason      = 16;
	string error_code              = 17;
	bool speculative               = 18;
	string state                   = 19;
}

message DirectionCounts {
	uint64 total             = 1;
	uint64 ingress           = 2;
	uint64 perimeter_ingress = 3;
	uint64 internal          = 4;
	uint64 egress            = 5;
	uint64 perimeter_egress  = 6;
}

enum EnforcementState {
	DISABLED      = 0;
	TRANSITIONING = 1;
	ENABLED       = 2;
}

message ComputeCounts {
	uint64 virtual_machines = 1;
	uint64 containers       = 2;
}

message App {
	string name                        = 1;
	string zone_name                   = 2;
	string araali_url                  = 3;
	DirectionCounts defined_counts     = 4;
	DirectionCounts denied_counts      = 5;
	DirectionCounts alert_counts       = 6;
	DirectionCounts service_counts     = 7;
	ComputeCounts compute_counts       = 8;
	repeated Link links                = 9;
	EnforcementState ingress_enforced  = 10;
	EnforcementState internal_enforced = 11;
	EnforcementState egress_enforced   = 12;
}

message Zone {
	string name       = 1;
	repeated App apps = 2;
}

message ListZonesRequest {
	Tenant tenant     = 1;
	string zone       = 2;
	string app        = 3;
	TimeSlice time    = 4;
	bool fetch_links  = 5;
}

message ListZonesResponse {
	AraaliAPIResponse response = 1;
	repeated Zone zones        = 2;
}

message ListLinksRequest {
	Tenant tenant     = 1;
	string zone          = 2;
	string app           = 3;
	string service       = 4; // Required when zone and app are not specified. Must be in form of ip:port or fqdn:port
	TimeSlice time       = 5;
}

message ListLinksResponse {
	AraaliAPIResponse response = 1;
	repeated Link links        = 2;
}

enum InsightReason {
	NONE                           = 0;
	DB_PROCESS                     = 1; // "Database Process"
	DBAAS                          = 2;  //"Data Store as a Service"
	WORLD_EXPOSED_PROCESS          = 3;
	PRIVILEGE_PROCESS              = 4;
	CRITICAL_CVE_CONTAINER         = 5;
	HOME_EXPOSED_PROCESS           = 6;
	HIGH_DEGREE_SERVICE            = 7;
	CRITICAL_CVE_PROCESS           = 8;
	// Do not use field num 9 in future
	SAAS_SERVICE                   = 10;
	POTENTIAL_C2_PROCESS           = 11;
	PRIVILEGE_CONTAINER            = 12;
	SECRETS_STORE                  = 13;
	SPRING4SHELL_CVE_PROCESS       = 14;
	ENFORCED_LENS                  = 15;
	SECRET_IN_ENV                  = 16;
	WORLD_EXPOSED_LB_PROCESS       = 17;
	IAM_OVER_PROVISIONED_CONTAINER = 18;
}

message Lens {
	enum LensType {
		UNKNOWN  = 0;
		ZONE_APP = 1;
		SERVICE = 2;
		ZONE = 3;
		PROCESS = 4;
		CONTAINER = 5;
		TENANT = 6; // Use: Tenant Level Alert Email Registration
	}
	LensType type = 1;
	string zone = 2;
	string app = 3;
	string pod = 4;
	string container_name = 5;
	string process = 6;
	string parent_process = 7;
	string binary_name = 8;
	string service = 9;

}
message Insight {
	InsightReason reason = 1;
	string url           = 2;
	uint32 count         = 3;
	repeated Lens lens   = 4;
}

message ListInsightsRequest {
	Tenant tenant = 1;
	string zone      = 2; // Used by API to fetch per zone (as per Tenable requirements)
}

message ListInsightsResponse {
	AraaliAPIResponse response = 1;
	repeated Insight insights = 2;
}

service AraaliAPI {
	// Add a tenant
	rpc createTenant(TenantRequest) returns (AraaliAPIResponse) {}
	// Delete a tenant
	rpc deleteTenant(TenantRequest) returns (AraaliAPIResponse) {}
	// Add a user
	rpc addUser(UserRequest)  returns (AraaliAPIResponse) {}
	// Delete a user
	rpc deleteUser(UserRequest) returns (AraaliAPIResponse) {}
	// Get asset
	rpc listAssets(ListAssetsRequest) returns (ListAssetsResponse) {}
	// Get Alerts
	rpc listAlerts(ListAlertsRequest) returns (ListAlertsResponse) {}
	// Get zones/zone-apps
	rpc listZones(ListZonesRequest) returns (ListZonesResponse) {}
	// Get links within a zone-app
	rpc listLinks(ListLinksRequest) returns (ListLinksResponse) {}
	// Get tenant-wide insights
	rpc listInsights(ListInsightsRequest) returns (ListInsightsResponse) {}
}